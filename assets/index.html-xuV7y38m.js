import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as e,o as n}from"./app-BiQR_lPj.js";const p={};function l(d,s){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="linux基于docker安装开源自动签到qiandao" tabindex="-1"><a class="header-anchor" href="#linux基于docker安装开源自动签到qiandao"><span>Linux基于Docker安装开源自动签到qiandao</span></a></h1><p>本文使用docker来安装签到的服务端，首先需要一台Centos7的虚拟机或者云服务器。</p><p>本教程一共分为三步：</p><p>第1步：安装docker</p><p>第2步：创建容器</p><p>第3步：注册账号，配置站点</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>系统说明：Centos7</span></span>
<span class="line"><span>IP地址： 192.168.1.5</span></span>
<span class="line"><span>开源仓库：https://github.com/binux/qiandao</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果安装docker可以跳过安装Docker步骤</p><h1 id="一、安装docker" tabindex="-1"><a class="header-anchor" href="#一、安装docker"><span>一、安装docker</span></a></h1><h2 id="国内主机安装docker" tabindex="-1"><a class="header-anchor" href="#国内主机安装docker"><span>国内主机安装Docker</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>使用国内镜像安装Docker</span></span>
<span class="line"><span>curl -sSL https://get.daocloud.io/docker | sh</span></span>
<span class="line"><span>启动Docker服务</span></span>
<span class="line"><span>service docker start</span></span>
<span class="line"><span>设置Docker服务项开机自启( 重要 )</span></span>
<span class="line"><span>systemctl enable docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="国外主机安装docker" tabindex="-1"><a class="header-anchor" href="#国外主机安装docker"><span>国外主机安装Docker</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>使用官网地址安装Docker</span></span>
<span class="line"><span>curl -sSL https://get.docker.com | sh</span></span>
<span class="line"><span>启动Docker服务</span></span>
<span class="line"><span>service docker start</span></span>
<span class="line"><span>设置Docker服务项开机自启( 重要 )</span></span>
<span class="line"><span>systemctl enable docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="二、创建容器" tabindex="-1"><a class="header-anchor" href="#二、创建容器"><span>二、创建容器</span></a></h1><h2 id="_1-创建容器" tabindex="-1"><a class="header-anchor" href="#_1-创建容器"><span>1.创建容器</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>创建挂载的目录</span></span>
<span class="line"><span>mkdir -p /data/docker/qiandao</span></span>
<span class="line"><span>chmod 777 -R /data/docker/qiandao</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动容器</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker run -itd \\</span></span>
<span class="line"><span>--restart always \\</span></span>
<span class="line"><span>--name qiandao \\</span></span>
<span class="line"><span>-p 90:80 \\</span></span>
<span class="line"><span>-v /data/docker/qiandao:/usr/src/app/volume \\</span></span>
<span class="line"><span>daocloud.io/fangzhengjin/qiandao</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>容器启动命令解释：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>-itd      （i以交互模式运行容器，通常与 -t 同时使用； </span></span>
<span class="line"><span>t:为容器重新分配一个伪输入终端，通常与 -i 同时使用；</span></span>
<span class="line"><span>d:后台运行容器，并返回容器ID；）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>--restart=always（启动docker时自动启动容器）</span></span>
<span class="line"><span>-p 90:80 端口映射（宿主机端口:docker的端口，由于宿主机的80端口占用了改为90）</span></span>
<span class="line"><span>-v /data/docker/qiandao:/usr/src/app/volume （挂载点）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>什么是Volume</span></span>
<span class="line"><span>你可以把Volume理解为一个挂载点，意为将主机中的目录挂载到容器中，这样可以在容器中与主机挂载点的文件交互</span></span>
<span class="line"><span>添加Volume需要添加以下参数</span></span>
<span class="line"><span>-v 主机挂载点:容器挂载点</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-注册账号" tabindex="-1"><a class="header-anchor" href="#_2-注册账号"><span>2.注册账号</span></a></h2><p>使用浏览器：http://192.168.1.5:90 访问</p><p><img src="https://imgoss.xgss.net/picgo/image-20201014102756601-1654738388089.png?aliyun" alt="image-20201014102756601"></p><h2 id="_3-配置站点管理员" tabindex="-1"><a class="header-anchor" href="#_3-配置站点管理员"><span>3.配置站点管理员</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>1.进入容器管理</span></span>
<span class="line"><span>docker exec -it qiandao /bin/bash</span></span>
<span class="line"><span>2.设置站点管理员</span></span>
<span class="line"><span>python ./chrole.py 注册邮箱(该用户必须已经注册) admin</span></span>
<span class="line"><span>python ./chrole.py star@funet8.com admin</span></span>
<span class="line"><span>3.退出容器管理</span></span>
<span class="line"><span>exit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-其他命令" tabindex="-1"><a class="header-anchor" href="#_4-其他命令"><span>4.其他命令</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>重启容器</span></span>
<span class="line"><span>docker restart qiandao</span></span>
<span class="line"><span>关闭容器</span></span>
<span class="line"><span>docker stop qiandao</span></span>
<span class="line"><span>删除容器</span></span>
<span class="line"><span>docker rm -v qiandao</span></span>
<span class="line"><span>使用参数 -v 的作用是为了确保删除容器自动创建的Volume</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="三、升级备份数据" tabindex="-1"><a class="header-anchor" href="#三、升级备份数据"><span>三、升级备份数据</span></a></h1><p>本教程配置后的站点使用的数据库默认为sqlite 更新镜像时只需要备份容器中的 database.db 文件即可 将容器中的数据库文件拷贝到当前目录</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker cp qiandao:/usr/src/app/database.db .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将备份的数据库拷贝到容器中(当前目录的database.db文件)</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker cp database.db qiandao:/usr/src/app/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>建议恢复数据库后立即重启容器</p><h1 id="使用浏览器插件获取cookie" tabindex="-1"><a class="header-anchor" href="#使用浏览器插件获取cookie"><span>使用浏览器插件获取Cookie</span></a></h1><h2 id="_1-使用谷歌浏览器、360浏览器或者其他能安装-crx的浏览器。" tabindex="-1"><a class="header-anchor" href="#_1-使用谷歌浏览器、360浏览器或者其他能安装-crx的浏览器。"><span>1.使用谷歌浏览器、360浏览器或者其他能安装.crx的浏览器。</span></a></h2><h2 id="_2-需要har文件" tabindex="-1"><a class="header-anchor" href="#_2-需要har文件"><span>2.需要HAR文件</span></a></h2><p>github开源的HAR文件： https://github.com/qiandao-today/templates.git</p><h2 id="_3-安装获取cookie的浏览器插件-getcookie" tabindex="-1"><a class="header-anchor" href="#_3-安装获取cookie的浏览器插件-getcookie"><span>3.安装获取cookie的浏览器插件“GetCookie”</span></a></h2><p>由于谷歌官方已经把getcookie插件下架了，所以要单独下载 Get-Cookie-For-FPlus获取，而且下载安装也会被封，要</p><h2 id="插件安装流程" tabindex="-1"><a class="header-anchor" href="#插件安装流程"><span>插件安装流程</span></a></h2><p>普通方式，但是但是cookie类的插件被谷歌浏览器封掉了，无法安装，会显示“无法从改网站添加应用、扩展程序和用户脚本”！这时候就要用到360浏览器。</p><p>(1)将扩展迷上下载的安装包文件（.zip）解压为文件夹，其中类型为“crx”的文件就是接下来需要用到的安装文件</p><p>(2) 从设置-&gt;更多工具-&gt;扩展程序 打开扩展程序页面，或者地址栏输入 Chrome://extensions/ 按下回车打开扩展程序页面</p><p>(3) 打开扩展程序页面的“开发者模式”</p><p>(4) 将crx文件拖拽到扩展程序页面，完成安装</p><p>下载的文件直接拖入浏览器。</p><p><img src="https://imgoss.xgss.net/picgo/image-20220609094331941.png?aliyun" alt="image-20220609094331941"></p><p><img src="https://imgoss.xgss.net/picgo/image-20220609101404464.png?aliyun" alt="image-20220609101404464"></p><p>打开B站，登录，再用</p><p><img src="https://imgoss.xgss.net/picgo/image-20220609101901356.png?aliyun" alt="image-20220609101901356"></p><h1 id="使用签到工具自动签到" tabindex="-1"><a class="header-anchor" href="#使用签到工具自动签到"><span>使用签到工具自动签到</span></a></h1><p>使用cookie获取B的站将cookie复制出来</p><p>登录自动签到后台</p><p>如图</p><p><img src="https://imgoss.xgss.net/picgo/image-20201230113513591.png?aliyun" alt="image-20201230113513591"></p><p>查看B站的签到记录是否成功</p><h1 id="给腾讯视频vip签到" tabindex="-1"><a class="header-anchor" href="#给腾讯视频vip签到"><span>给腾讯视频VIP签到</span></a></h1><p>1.从github上下载har文件 https://github.com/qiandao-today/templates.git 或者直接把git项目拷贝到本机电脑。</p><p>2.进入签到后台</p><p>我的模板点加号</p><p><img src="https://imgoss.xgss.net/picgo/image-20201230150952161.png?aliyun" alt="image-20201230150952161"></p><p>上传模板并且填写腾讯视频的qq号和密码</p><p><img src="https://imgoss.xgss.net/picgo/image-20201230151129048.png?aliyun" alt="image-20201230151129048"></p><p>点击&quot;测试&quot;<br><img src="https://imgoss.xgss.net/picgo/image-20201230151235327.png?aliyun" alt="image-20201230151235327"></p><p>登录腾讯视频： https://v.qq.com/</p><p>点击chrome浏览器的插件获取cookie，将cookie值填入测试的里面，点击“测试”</p><p><img src="https://imgoss.xgss.net/picgo/image-20201230151603566.png?aliyun" alt="image-20201230151603566"></p><p>签到失败：</p><p><img src="https://imgoss.xgss.net/picgo/image-20201230151735859.png?aliyun" alt="image-20201230151735859"></p><p>保存</p><p><img src="https://imgoss.xgss.net/picgo/image-20201230151815359.png?aliyun" alt="image-20201230151815359"></p><p>发布</p><p><img src="https://imgoss.xgss.net/picgo/image-20201230151844238.png?aliyun" alt="image-20201230151844238"></p><p><img src="https://imgoss.xgss.net/picgo/image-20201230151915867.png?aliyun" alt="image-20201230151915867"></p><p><img src="https://imgoss.xgss.net/picgo/image-20201230152032018.png?aliyun" alt="image-20201230152032018"></p><h2 id="签到失败" tabindex="-1"><a class="header-anchor" href="#签到失败"><span>签到失败</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>failed at 4/4 request, , http://localhost/util/unicode?content=%E7%AD%BE%E5%88%B0%E7%A7%AF%E5%88%86%EF%BC%9A%E3%80%90%2B{{zt3|urlencode}}%E3%80%91%20---------%E4%BA%8C%E6%AC%A1%E7%AD%BE%E5%88%B0%EF%BC%9A%E3%80%90{{zt1|urlencode}}{{zt2|urlencode}}V%E5%8E%89%E5%80%BC%E3%80%91-----%E6%9C%AC%E6%9C%88%E5%B7%B2%E7%BB%8F%E8%8E%B7%E5%BE%97%E3%80%90{{zt4|urlencode}}%E3%80%91----%E7%9B%AE%E5%89%8D%E7%A7%AF%E5%88%86%EF%BC%9A%E3%80%90{{zt5|urlencode}}%E3%80%91%E3%80%90{{zt6|urlencode}}%E3%80%91</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>csdn无法自动签到报错：</p><p><img src="https://imgoss.xgss.net/picgo/image-20201230153428711.png?aliyun" alt="image-20201230153428711"></p><h1 id="下载公开模板" tabindex="-1"><a class="header-anchor" href="#下载公开模板"><span>下载公开模板</span></a></h1><p>https://qiandao.today/tpls/public （访问不稳定，可能需要土墙）</p><p>选择某一个har项目，点击“查看”再点”下载“就可以下载har文件</p><p>参考：</p><p><a href="https://github.com/binux/qiandao/wiki/Docker%E9%83%A8%E7%BD%B2%E7%AD%BE%E5%88%B0%E7%AB%99%E6%95%99%E7%A8%8B" target="_blank" rel="noopener noreferrer">Docker部署签到站教程</a></p><p>https://hub.docker.com/r/asdaragon/qiandao https://github.com/AragonSnow/qiandao https://github.com/qiandao-today/templates</p><p>利用阿里云监控实现360有钱联盟自动签到 https://mkblog.cn/233/</p>`,86)]))}const t=a(p,[["render",l]]),o=JSON.parse('{"path":"/article/8sxoggiw/","title":"Linux基于Docker安装开源自动签到qiandao","lang":"en-US","frontmatter":{"title":"Linux基于Docker安装开源自动签到qiandao","createTime":"2025/05/27 17:51:17","permalink":"/article/8sxoggiw/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":4.89,"words":1467},"filePathRelative":"kaiyuan/Open-Source-Software/Linux基于Docker安装开源自动签到qiandao.md"}');export{t as comp,o as data};
