import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as i}from"./app-BiQR_lPj.js";const r={};function t(l,s){return i(),a("div",null,s[0]||(s[0]=[n(`<h1 id="在docker下部署专属的下载神器qbittorrent" tabindex="-1"><a class="header-anchor" href="#在docker下部署专属的下载神器qbittorrent"><span>在Docker下部署专属的下载神器qBittorrent</span></a></h1><h1 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h1><p>qBittorrent 是一款轻量级且功能丰富的开源 BitTorrent 客户端，广受用户好评。 它提供了直观的界面和大量的功能，能够满足大部分用户的下载需求。</p><p>通过 Docker 部署 qBittorrent 可以让我们更方便地在不同的环境下使用它，同时享受容器化带来的隔离和易于管理的优势。本文星哥将带你一步步完成在 Docker 中部署 qBittorrent 的操作。</p><p><img src="https://imgoss.xgss.net/picgo/image-20250107165027359.png?aliyun" alt="image-20250107165027359"></p><h1 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作"><span>准备工作</span></a></h1><ul><li>云服务器、NAS、虚拟机等 【 阿里云优惠： <a href="https://y.xgss.net/aliyun" target="_blank" rel="noopener noreferrer">https://y.xgss.net/aliyun</a> 或 腾讯云优惠： <a href="https://y.xgss.net/tx" target="_blank" rel="noopener noreferrer">https://y.xgss.net/tx</a> 】</li><li>本篇文章在Centos7.9系统下演示，当然其他支持Docker系统亦可</li><li>安装docker和docker-compose 【本篇文章不细讲，可以看星哥之前的教程或者官方文档】</li></ul><h1 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h1><h3 id="安装docker环境" tabindex="-1"><a class="header-anchor" href="#安装docker环境"><span>安装Docker环境</span></a></h3><p>省略</p><h3 id="创建文件夹" tabindex="-1"><a class="header-anchor" href="#创建文件夹"><span>创建文件夹</span></a></h3><p>可根据实际情况创建，最好放到硬盘空间充足的目录。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mkdir -p /data/docker/qbittorrent/config</span></span>
<span class="line"><span>mkdir -p /data/docker/qbittorrent/downloads</span></span>
<span class="line"><span>cd /data/docker/qbittorrent</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写-docker-compose-配置文件" tabindex="-1"><a class="header-anchor" href="#编写-docker-compose-配置文件"><span>编写 Docker Compose 配置文件</span></a></h3><p>创建 docker-compose.yml 的文件</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>vi docker-compose.yml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>并添加以下内容：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>version: &#39;3&#39;</span></span>
<span class="line"><span>services:</span></span>
<span class="line"><span>  qbittorrent:</span></span>
<span class="line"><span>    image: linuxserver/qbittorrent</span></span>
<span class="line"><span>    container_name: qbittorrent</span></span>
<span class="line"><span>    restart: unless-stopped</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - &quot;6881:6881&quot;</span></span>
<span class="line"><span>      - &quot;6881:6881/udp&quot;</span></span>
<span class="line"><span>      - &quot;8082:8080&quot;</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      - PUID=1000</span></span>
<span class="line"><span>      - PGID=1000</span></span>
<span class="line"><span>      - TZ=Asia/Shanghai</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      - /data/docker/qbittorrent/config:/config</span></span>
<span class="line"><span>      - /data/docker/qbittorrent/config:/downloads</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动容器" tabindex="-1"><a class="header-anchor" href="#启动容器"><span>启动容器</span></a></h3><p>在命令行中进入存放 docker-compose.yml文件的目录，然后执行以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker-compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="访问-web-界面" tabindex="-1"><a class="header-anchor" href="#访问-web-界面"><span>访问 Web 界面</span></a></h3><p>在浏览器中输入 <code>http://localhost:8080</code>，即可访问 qBittorrent 的 Web 界面。</p><p><img src="https://imgoss.xgss.net/picgo/image-20250107164204520.png?aliyun" alt="image-20250107164204520"></p><h2 id="查找用户名和密码" tabindex="-1"><a class="header-anchor" href="#查找用户名和密码"><span>查找用户名和密码</span></a></h2><p>用户名和密码使用docker ps和docker logs查看</p><p>查看docker的状态</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># docker ps</span></span>
<span class="line"><span>CONTAINER ID   IMAGE                     COMMAND   CREATED         STATUS         PORTS                                                                                                                             NAMES</span></span>
<span class="line"><span>46017ddad10f   linuxserver/qbittorrent   &quot;/init&quot;   4 minutes ago   Up 3 minutes   0.0.0.0:6881-&gt;6881/tcp, :::6881-&gt;6881/tcp, 0.0.0.0:8080-&gt;8080/tcp, 0.0.0.0:6881-&gt;6881/udp, :::8080-&gt;8080/tcp, :::6881-&gt;6881/udp   qbittorrent</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>docker logs 查看日志</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker logs qbittorrent</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://imgoss.xgss.net/picgo/image-20250107164503581.png?aliyun" alt="image-20250107164503581"></p><p>会显示用户名和密码</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>The WebUI administrator username is: admin</span></span>
<span class="line"><span>The WebUI administrator password was not set. A temporary password is provided for this session: VQ8vcV9Qs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>再次登录</p><p><img src="https://imgoss.xgss.net/picgo/image-20250107164700486.png?aliyun" alt="image-20250107164700486"></p><h2 id="设置中文" tabindex="-1"><a class="header-anchor" href="#设置中文"><span>设置中文</span></a></h2><p>选项，Behavior，改成简体中文</p><p><img src="https://imgoss.xgss.net/picgo/image-20250107164802950.png?aliyun" alt="image-20250107164802950"></p><h2 id="持久化数据" tabindex="-1"><a class="header-anchor" href="#持久化数据"><span>持久化数据</span></a></h2><p>为确保数据的持久性，推荐使用 Docker 数据卷将下载数据和配置文件存储在宿主机中。你可以将宿主机的目录挂载到容器的相应目录，这样即使容器被删除或重启，数据也不会丢失。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过 Docker 部署 qBittorrent，不仅能快速创建一个专属的下载工具，还能够利用 Docker 提供的容器化管理和隔离机制，使得整个系统更加稳定和高效。在容器化的环境下，你可以随时迁移或者升级 qBittorrent，而不必担心对宿主机的影响。同时，Docker 还方便了资源的管理和调配，提升了使用体验。</p><p>写文不易，如果你都看到了这里，请点个赞和在看，分享给更多的朋友；也别忘了关注星哥玩云！这里有满满的干货分享，还有轻松有趣的技术交流～点个赞、分享给身边的小伙伴，一起成长，一起玩转技术世界吧！ 😊</p>`,43)]))}const c=e(r,[["render",t]]),o=JSON.parse('{"path":"/article/qhcot6nc/","title":"在Docker下部署专属的下载神器qBittorrent","lang":"en-US","frontmatter":{"title":"在Docker下部署专属的下载神器qBittorrent","createTime":"2025/05/27 17:51:17","permalink":"/article/qhcot6nc/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":2.72,"words":817},"filePathRelative":"kaiyuan2025/在Docker下部署专属的下载神器qBittorrent.md"}');export{c as comp,o as data};
