import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as i}from"./app-BiQR_lPj.js";const p={};function t(l,s){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="什么是mcp-技术原理是什么-教你15分钟配置本地mcp服务" tabindex="-1"><a class="header-anchor" href="#什么是mcp-技术原理是什么-教你15分钟配置本地mcp服务"><span>什么是MCP？技术原理是什么？教你15分钟配置本地MCP服务</span></a></h1><h1 id="引言" tabindex="-1"><a class="header-anchor" href="#引言"><span>引言</span></a></h1><p>在人工智能（AI）快速发展的今天，AI模型与外部工具的集成成为提升工作效率的关键。然而，传统集成方式存在接口碎片化、开发成本高、安全风险大等问题。为解决这些痛点，MCP（Model Context Protocol，模型上下文协议）应运而生。作为一种开放标准协议，MCP为AI模型与外部工具之间建立了标准化连接通道，推动了AI从“孤立文本生成”向“行动代理”的进化。</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515182853571.png?aliyun" alt="image-20250515182853571"></p><h1 id="mcp是什么" tabindex="-1"><a class="header-anchor" href="#mcp是什么"><span>MCP是什么？</span></a></h1><p>MCP全称：<strong>模型上下文协议</strong> ，<strong>Model Context Protocol</strong>，由Claude的母公司Anthropic推出的开源协议，旨在实现大型语言模型（LLM）与外部数据源和工具的集成，提供安全双向的连接。MCP通过统一的接口标准化了应用程序向LLM提供上下文的方式。</p><p>MCP的核心定位是为大型语言模型（LLM）与外部数据源、工具之间提供统一接口，实现标准化连接。其设计理念类似于“AI领域的USB-C接口”，通过协议标准化，打破数据孤岛，避免为每个数据源单独开发定制化连接器，从而降低开发成本和安全风险。</p><h2 id="核心功能" tabindex="-1"><a class="header-anchor" href="#核心功能"><span>核心功能</span></a></h2><p>作为 AI 大模型的标准化工具箱，允许大模型通过标准化协议与外部工具（如浏览器、文件系统、数据库、代码仓库等）自动化交互，无需手动复制粘贴信息。</p><p>MCP Server：作为 AI 与外部工具的中间层，专精于一类工作（如读写浏览器、操作 Git 仓库等），本质是运行在本地（Node.js/Python 程序）或服务器的程序。</p><p>**交互方式：**大模型通过操作系统的标准输入通道（stdio）调用 MCP Server，消息格式为特定 JSON 结构，MCP Server 通过代码或 API 访问外部工具完成任务。</p><h2 id="传统方式" tabindex="-1"><a class="header-anchor" href="#传统方式"><span>传统方式</span></a></h2><p>看图，传统方式需要手动截图或者复制文档，将浏览器、github、数据库等复制粘贴到AI窗口中进行对话。</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515164613039.png?aliyun" alt="image-20250515164613039"></p><p>（图来自技术爬爬虾）</p><p>经过MCP servers，则通过标准化协议自动化了上面的流程。</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515164700031.png?aliyun" alt="image-20250515164700031"></p><h2 id="mcp-与-function-call-的区别" tabindex="-1"><a class="header-anchor" href="#mcp-与-function-call-的区别"><span>MCP 与 Function Call 的区别</span></a></h2><p>优势：整合了各家大模型不同的 Function Call 标准，形成统一协议，支持几乎所有大模型接入（如 Claude、Deepseek 等）。</p><p>**MCP：**是 Anthropic 提出的标准化通信协议，类比为 “AI 领域的 HTTP 协议” 或 “通用插座”“USB-C 标准”。它规定了上下文与请求的结构化传递方式，要求通信格式符合 JSON-RPC 2.0 标准，用于统一 LLM 与外部数据源、工具之间的交互规范，解决数据孤岛问题。</p><p>**Function Call：**是某些大模型（如 OpenAI 的 GPT-4）提供的特有接口特性，类似 “品牌专属充电协议”。它以特定格式让 LLM 产出函数调用请求，由宿主执行对应操作并返回结果。</p><h1 id="安装cline" tabindex="-1"><a class="header-anchor" href="#安装cline"><span>安装Cline</span></a></h1><p>安装vscode，再安装Cline插件</p><h2 id="下载安装vscode" tabindex="-1"><a class="header-anchor" href="#下载安装vscode"><span>下载安装vscode</span></a></h2><p>如果下载了请忽略这一步</p><p>下载地址： https://code.visualstudio.com/</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515170757463.png?aliyun" alt="image-20250515170757463"></p><h2 id="安装cline-1" tabindex="-1"><a class="header-anchor" href="#安装cline-1"><span>安装cline</span></a></h2><p>左侧找到插件，搜索cline</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515170853172.png?aliyun" alt="image-20250515170853172"></p><p>点击安装，把cline插件安装</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515170927363.png?aliyun" alt="image-20250515170927363"></p><h2 id="设置大模型" tabindex="-1"><a class="header-anchor" href="#设置大模型"><span>设置大模型</span></a></h2><p>点击use your own api key</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515171120524.png?aliyun" alt="image-20250515171120524"></p><p>再点击，get openrouter api key</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515171302283.png?aliyun" alt="image-20250515171302283"></p><p>再弹窗浏览器中</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515171351407.png?aliyun" alt="image-20250515171351407"></p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515171510325.png?aliyun" alt="image-20250515171510325"></p><p>点击打开Visual Studio Code，这时候openrouter api key 自动填写了</p><p>再选择 deepseek/deepseek-chat:free 免费的大模型，再点击保存。</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515172319771.png?aliyun" alt="image-20250515172319771"></p><p>再提问是否配置成功，如果有回答则说明配置成功。</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515172414492.png?aliyun" alt="image-20250515172414492"></p><h1 id="安装nodejs" tabindex="-1"><a class="header-anchor" href="#安装nodejs"><span>安装nodejs</span></a></h1><p>MCP servers 本质就是运行在电脑上的一个nodejs程序，所以nodejs环境必不可少</p><p>nodejs下载： https://nodejs.org/zh-cn</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515172818087.png?aliyun" alt="image-20250515172818087"></p><p>安装软件一路点下一步。</p><p>安装完成之后</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>node -v</span></span>
<span class="line"><span>npx -v</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果都能成功的输出版本号，nodejs环境则安装成功。</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515172948746.png?aliyun" alt="image-20250515172948746"></p><h1 id="安装第一个mcp服务" tabindex="-1"><a class="header-anchor" href="#安装第一个mcp服务"><span>安装第一个MCP服务</span></a></h1><p>回到 Cline中，点击 MCP Servers</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515173128566.png?aliyun" alt="image-20250515173128566"></p><h2 id="安装github-mcp-servers" tabindex="-1"><a class="header-anchor" href="#安装github-mcp-servers"><span>安装github MCP Servers</span></a></h2><h3 id="点击-install-安装" tabindex="-1"><a class="header-anchor" href="#点击-install-安装"><span>点击 install 安装</span></a></h3><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515173320331.png?aliyun" alt="image-20250515173320331"></p><p>会自动打开AI的窗口</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515173402829.png?aliyun" alt="image-20250515173402829"></p><h3 id="创建token" tabindex="-1"><a class="header-anchor" href="#创建token"><span>创建token</span></a></h3><p>点击approve，再点击github的链接创建tokens</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515173549484.png?aliyun" alt="image-20250515173549484"></p><p>创建token</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515173747451.png?aliyun" alt="image-20250515173747451"></p><p>新建token之后，把token复制下来</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515175313886.png?aliyun" alt="image-20250515175313886"></p><p>把token粘贴到cline中，点回车，再点save</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515175504648.png?aliyun" alt="image-20250515175504648"></p><p>MAC系统这步就完成了，Window电脑还需要改一些配置</p><h3 id="修改配置" tabindex="-1"><a class="header-anchor" href="#修改配置"><span>修改配置</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;mcpServers&quot;: {</span></span>
<span class="line"><span>    &quot;github.com/modelcontextprotocol/servers/tree/main/src/github&quot;: {</span></span>
<span class="line"><span>      &quot;command&quot;: &quot;npx&quot;,</span></span>
<span class="line"><span>      &quot;args&quot;: [</span></span>
<span class="line"><span>        &quot;-y&quot;,</span></span>
<span class="line"><span>        &quot;@modelcontextprotocol/server-github&quot;</span></span>
<span class="line"><span>      ],</span></span>
<span class="line"><span>      &quot;env&quot;: {</span></span>
<span class="line"><span>        &quot;GITHUB_PERSONAL_ACCESS_TOKEN&quot;: &quot;ghp_XXXXXXX&quot;</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      &quot;disabled&quot;: false,</span></span>
<span class="line"><span>      &quot;autoApprove&quot;: []</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>改成</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;mcpServers&quot;: {</span></span>
<span class="line"><span>    &quot;github.com/modelcontextprotocol/servers/tree/main/src/github&quot;: {</span></span>
<span class="line"><span>      &quot;command&quot;: &quot;cmd&quot;,</span></span>
<span class="line"><span>      &quot;args&quot;: [</span></span>
<span class="line"><span>        &quot;/c&quot;,</span></span>
<span class="line"><span>        &quot;npx&quot;,</span></span>
<span class="line"><span>        &quot;-y&quot;,</span></span>
<span class="line"><span>        &quot;@modelcontextprotocol/server-github&quot;</span></span>
<span class="line"><span>      ],</span></span>
<span class="line"><span>      &quot;env&quot;: {</span></span>
<span class="line"><span>        &quot;GITHUB_PERSONAL_ACCESS_TOKEN&quot;: &quot;ghp_XXXXXXXXX&quot;</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>      &quot;disabled&quot;: false,</span></span>
<span class="line"><span>      &quot;autoApprove&quot;: []</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如图，点击保存</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515175933460.png?aliyun" alt="image-20250515175933460"></p><p>在已安装中查看</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515180012619.png?aliyun" alt="image-20250515180012619"></p><h3 id="自动创建test-repo的github仓库" tabindex="-1"><a class="header-anchor" href="#自动创建test-repo的github仓库"><span>自动创建test-repo的github仓库</span></a></h3><p>点击Approve 会</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515180339190.png?aliyun" alt="image-20250515180339190"></p><p>再查看我的github中创建了一个 test-repo的仓库。</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515180956668.png?aliyun" alt="image-20250515180956668"></p><p>提问“我的名字是funet8,我在github中有哪些仓库”</p><p>输出结果</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20250515181347599.png?aliyun" alt="image-20250515181347599"></p><h1 id="结尾" tabindex="-1"><a class="header-anchor" href="#结尾"><span>结尾</span></a></h1><p>MCP通过标准化交互协议，打通了AI与工具间的壁垒，为高效、安全的智能自动化奠定了基础，是AI技术实用化的重要里程碑。随着MCP的普及，AI将更加深入地融入各个行业，成为真正的数字工作流协作者。未来，MCP有望推动构建可组合的智能系统，让人类通过自然语言指令驱动复杂工具链，重塑软件开发、设计及自动化流程。</p><p>无论是开发者还是普通用户，掌握MCP的配置和使用方法，都将为你在AI时代的工作和学习带来巨大的便利。赶快行动起来，体验MCP带来的智能化变革吧！</p>`,91)]))}const r=a(p,[["render",t]]),g=JSON.parse('{"path":"/article/71krfjrm/","title":"14.什么是MCP？技术原理是什么？在VScode中演示配置MCP","lang":"en-US","frontmatter":{"title":"14.什么是MCP？技术原理是什么？在VScode中演示配置MCP","createTime":"2025/05/27 17:51:17","permalink":"/article/71krfjrm/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":5.27,"words":1580},"filePathRelative":"chatgpt2025/14.什么是MCP？技术原理是什么？在VScode中演示配置MCP.md"}');export{r as comp,g as data};
