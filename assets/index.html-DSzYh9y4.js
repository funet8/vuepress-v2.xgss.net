import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as i}from"./app-BiQR_lPj.js";const p={};function l(c,s){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="使用docker部署开源的wps-office" tabindex="-1"><a class="header-anchor" href="#使用docker部署开源的wps-office"><span>使用Docker部署开源的WPS-Office</span></a></h1><h1 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言"><span>一、前言</span></a></h1><p>越来越多的企业和个人开始将应用程序部署在Docker容器中。传统的办公软件往往需要在本地安装，且只能在单个设备上使用，这对远程办公、多人协作的效率提出了挑战。</p><p>搭建一个网页版的 WPS Office 能够有效解决这些问题，让您可以通过浏览器直接访问和编辑文档，而不需要本地安装软件。尤其在资源有限的设备上，这种方式可以显著节省存储空间和系统资源。</p><p><img src="https://imgoss.xgss.net/picgo/image-20241227173302443.png?aliyun" alt="image-20241227173302443"></p><h1 id="二、准备工作" tabindex="-1"><a class="header-anchor" href="#二、准备工作"><span>二、准备工作</span></a></h1><p>准备服务器</p><ul><li><p>服务器一台（必须，安装 Centos7.2 以上版本系统，<strong>如果没有备案域名请购买香港或海外区域</strong>，http://y.xgss.net/aliyun）</p></li><li><p>系统中安装docker或docker-compose</p></li></ul><h1 id="docker-wps-office" tabindex="-1"><a class="header-anchor" href="#docker-wps-office"><span>Docker-wps-office</span></a></h1><p>本项目使用到的github https://github.com/linuxserver/docker-wps-office WPS Office是一款轻量级、功能丰富、兼容性强的综合办公套件。作为一款便捷、专业的办公软件，WPS Office 允许您以 Writer、Presentation、Spreadsheet 和 PDF 格式编辑文件，从而提高您的工作效率。</p><h1 id="docker-构建docker-wps-office" tabindex="-1"><a class="header-anchor" href="#docker-构建docker-wps-office"><span>docker 构建Docker-wps-office</span></a></h1><h2 id="_1-构建命令" tabindex="-1"><a class="header-anchor" href="#_1-构建命令"><span>1.构建命令</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker run -itd \\</span></span>
<span class="line"><span>  --name=wps-office \\</span></span>
<span class="line"><span>  --security-opt seccomp=unconfined \`#optional\` \\</span></span>
<span class="line"><span>  -e PUID=1000 \\</span></span>
<span class="line"><span>  -e PGID=1000 \\</span></span>
<span class="line"><span>  -e TZ=Asia/Shanghai \\</span></span>
<span class="line"><span>  -p 3000:3000 \\</span></span>
<span class="line"><span>  -p 3001:3001 \\</span></span>
<span class="line"><span>  -v /data/docker/wps-office/config:/config \\</span></span>
<span class="line"><span>  --shm-size=&quot;1gb&quot; \\</span></span>
<span class="line"><span>  --restart unless-stopped \\</span></span>
<span class="line"><span>  lscr.io/linuxserver/wps-office:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-解释" tabindex="-1"><a class="header-anchor" href="#_2-解释"><span>2.解释</span></a></h2><p>容器是使用运行时传递的参数（例如上面的参数）进行配置的。这些参数以冒号分隔，分别表示&lt;external&gt;:&lt;internal&gt;。</p><p>例如，-p 8080:80 将从容器内部公开端口 80，以便可以从容器外部端口 8080 上的主机 IP 进行访问。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>-p 3000:3000	WPS Office 桌面的端口</span></span>
<span class="line"><span>-p 3001:3001	WPS Office 桌面 GUI HTTPS。</span></span>
<span class="line"><span>-e PUID=1000	用户ID</span></span>
<span class="line"><span>-e PGID=1000	用户组ID</span></span>
<span class="line"><span>-e TZ=Etc/UTC	指定要使用的时区  ，笔者使用中国上海的时区</span></span>
<span class="line"><span>-v /config	容器中的用户主目录，存储程序设置和文档</span></span>
<span class="line"><span>--shm-size=	使用时占用的内存</span></span>
<span class="line"><span>--security-opt seccomp=unconfined 仅适用于 Docker 引擎，许多现代 GUI 应用程序需要它在旧主机上运行，因为 Docker 不知道系统调用。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-查看状态" tabindex="-1"><a class="header-anchor" href="#_3-查看状态"><span>3.查看状态</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker ps</span></span>
<span class="line"><span>CONTAINER ID   IMAGE                                   COMMAND   CREATED              STATUS              PORTS                              NAMES</span></span>
<span class="line"><span>c6b0238876b2   lscr.io/linuxserver/wps-office:latest   &quot;/init&quot;   About a minute ago   Up About a minute   0.0.0.0:3000-3001-&gt;3000-3001/tcp   wps-office</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-浏览器输入ip端口即可使用" tabindex="-1"><a class="header-anchor" href="#_4-浏览器输入ip端口即可使用"><span>4.浏览器输入ip端口即可使用</span></a></h2><p><img src="https://imgoss.xgss.net/picgo/image-20241227165747726.png?aliyun" alt="image-20241227165747726"></p><h1 id="使用docker-compose构建docker-wps-office" tabindex="-1"><a class="header-anchor" href="#使用docker-compose构建docker-wps-office"><span>使用docker-compose构建Docker-wps-office</span></a></h1><h2 id="_1-创建目录" tabindex="-1"><a class="header-anchor" href="#_1-创建目录"><span>1.创建目录</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mkdir -p /data/docker/wps-office</span></span>
<span class="line"><span>cd /data/docker/wps-office</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-编辑docker-compose-yml" tabindex="-1"><a class="header-anchor" href="#_2-编辑docker-compose-yml"><span>2.编辑docker-compose.yml</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>vim docker-compose.yml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>填写一下信息</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>version: &quot;3.9&quot;</span></span>
<span class="line"><span>services:  # 定义服务</span></span>
<span class="line"><span>  wps-office:  # 服务名称，代表 WPS Office 容器服务</span></span>
<span class="line"><span>    image: lscr.io/linuxserver/wps-office:chinese  # 镜像地址和版本，使用 LinuxServer 提供的 WPS Office 中文版镜像</span></span>
<span class="line"><span>    container_name: wps-office  # 设置容器名称为 wps-office</span></span>
<span class="line"><span>    privileged: true  # 授予容器特权模式，允许访问更多的系统资源（例如硬件）</span></span>
<span class="line"><span>    security_opt:</span></span>
<span class="line"><span>      - seccomp:unconfined  # 取消 seccomp 安全配置（可选），放宽容器的系统调用限制</span></span>
<span class="line"><span>    environment:  # 配置环境变量</span></span>
<span class="line"><span>      - PUID=1000  # 容器内的用户ID，通常与主机上的用户ID保持一致，避免权限问题</span></span>
<span class="line"><span>      - PGID=1000  # 容器内的用户组ID，通常与主机上的组ID保持一致</span></span>
<span class="line"><span>      - TZ=Asia/Shanghai  # 设置时区为上海时区</span></span>
<span class="line"><span>      - CUSTOM_USER=admin  # 自定义用户名，容器内部使用的用户名</span></span>
<span class="line"><span>      - PASSWORD=admin  # 用户密码</span></span>
<span class="line"><span>    volumes:  # 配置数据卷，用于持久化存储和共享文件</span></span>
<span class="line"><span>      - ./config:/config  # 将主机上的 ./config 目录映射到容器内的 /config 目录，存储 WPS Office 的配置文件</span></span>
<span class="line"><span>      - ./Desktop:/config/Desktop #左侧Desktop可以改成自定义的目录存放文档，映射目录到wps的桌面目录</span></span>
<span class="line"><span>      - ./Fonts:/usr/share/fonts/wps-fonts  # 将主机上的 ./Fonts 目录映射到容器的字体文件夹，方便添加字体,新增字体直接添加此目录的。</span></span>
<span class="line"><span>    ports:  # 配置端口映射，将容器内部端口映射到主机端口</span></span>
<span class="line"><span>      - 3005:3000  # http用将主机的 3005 端口映射到容器的 3000 端口</span></span>
<span class="line"><span>      - 3006:3001  # https用将主机的 3006 端口映射到容器的 3001 端口</span></span>
<span class="line"><span>    shm_size: &quot;1gb&quot;  # 共享内存大小设置为 1GB，以避免 WPS Office 使用过程中内存不足的问题</span></span>
<span class="line"><span>    restart: always  # 设置容器的重启策略为 always，确保容器在崩溃或系统重启后自动重启</span></span>
<span class="line"><span>    network_mode: bridge  # 设置网络模式为桥接模式，使容器可以通过宿主机网络访问外部资源</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了保证搭建完的wps字体库完整我准备了字体文件 需要的下载 <a href="https://pan.xunlei.com/s/VOB4MVDT-85tAKTP-KKz1EkyA1?pwd=39gq" target="_blank" rel="noopener noreferrer">点我下载字体文件</a> https://pan.xunlei.com/s/VOB4MVDT-85tAKTP-KKz1EkyA1?pwd=39gq</p><h2 id="_3-运行容器" tabindex="-1"><a class="header-anchor" href="#_3-运行容器"><span>3.运行容器</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker-compose up -d #运行容器</span></span>
<span class="line"><span>docker-compose ps  #查看是否开启成功</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-查看docker状态" tabindex="-1"><a class="header-anchor" href="#_4-查看docker状态"><span>4.查看docker状态</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker-compose ps</span></span>
<span class="line"><span>docker ps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-浏览器输入ip端口即可使用" tabindex="-1"><a class="header-anchor" href="#_5-浏览器输入ip端口即可使用"><span>5.浏览器输入ip端口即可使用</span></a></h2><p>成功以后需要打开自己相应的端口(3005)防火墙就可以web端访问了</p><p><img src="https://imgoss.xgss.net/picgo/image-1730964011544.png?aliyun" alt="img"></p><h2 id="_6-使用本地输入法的设置" tabindex="-1"><a class="header-anchor" href="#_6-使用本地输入法的设置"><span>6.使用本地输入法的设置</span></a></h2><p><img src="https://imgoss.xgss.net/picgo/image-1730964258672.png?aliyun" alt="img"></p><h2 id="_7-上传文件的操作" tabindex="-1"><a class="header-anchor" href="#_7-上传文件的操作"><span>7.上传文件的操作</span></a></h2><p><img src="https://imgoss.xgss.net/picgo/image-1730964333202.png?aliyun" alt="img"></p><h1 id="结尾" tabindex="-1"><a class="header-anchor" href="#结尾"><span>结尾</span></a></h1><p>通过本文的介绍，我们详细阐述了如何使用Docker部署开源的WPS Office。Docker的轻量级、可移植性和易管理性为我们提供了极大的便利。通过这种方式，我们可以轻松地搭建一个私有化的办公平台，满足个性化的需求。此外，Docker还可以实现WPS Office的快速扩展、高可用性以及与其他服务的集成，为企业和个人用户提供更加灵活、高效的办公解决方案。</p>`,42)]))}const t=a(p,[["render",l]]),o=JSON.parse('{"path":"/article/3lm836as/","title":"使用Docker部署开源的WPSOffice","lang":"en-US","frontmatter":{"title":"使用Docker部署开源的WPSOffice","createTime":"2025/05/27 17:51:17","permalink":"/article/3lm836as/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":4.75,"words":1424},"filePathRelative":"kaiyuan/Open-Source-Software/使用Docker部署开源的WPSOffice.md"}');export{t as comp,o as data};
