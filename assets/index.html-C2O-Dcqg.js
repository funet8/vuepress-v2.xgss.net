import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as i,o as n}from"./app-BiQR_lPj.js";const t={};function l(p,s){return n(),e("div",null,s[0]||(s[0]=[i(`<h1 id="数据库硬盘空间可用小于90-解决的方案" tabindex="-1"><a class="header-anchor" href="#数据库硬盘空间可用小于90-解决的方案"><span>数据库硬盘空间可用小于90%解决的方案</span></a></h1><h2 id="一-问题描述" tabindex="-1"><a class="header-anchor" href="#一-问题描述"><span><strong>一.问题描述</strong></span></a></h2><p>我司在某云的MySQL数据库占硬盘空间大于90%，RDS空间总空间为 700G，表A分析之后。某渠道统计的表有5亿，单表空间超过350G。</p><p>服务器架构：一主多从。</p><p><img src="https://imgoss.xgss.net/picgo/mysql-kongjian.webp.jpg?aliyun" alt="mysql-kongjian.webp"></p><p>报警截图：</p><p><img src="https://imgoss.xgss.net/picgo/image-20220808191051773.png?aliyun" alt="image-20220808191051773"></p><h2 id="二-处理流程" tabindex="-1"><a class="header-anchor" href="#二-处理流程"><span><strong>二.处理流程</strong></span></a></h2><h3 id="_1-解决方法一" tabindex="-1"><a class="header-anchor" href="#_1-解决方法一"><span>1.解决方法一：</span></a></h3><p>钞能力，增加RDS硬盘空间，剧终！但是会有大表查询效率问题，数据到达一定量还是需要会出现同样的问题。</p><h3 id="_2-解决方法二" tabindex="-1"><a class="header-anchor" href="#_2-解决方法二"><span>2.解决方法二：</span></a></h3><ol><li>备份表A（mysqldump、xtrabackup等）</li><li>跟研发沟通，新建相同表结构B，将业务数据写入表B中，跑一段时间无问题。【实际业务中，将此表按月分表】</li><li>截断表A，释放硬盘空间（不会导致主从延迟）。</li><li>定时任务：定期备份删除过期数据。</li></ol><h3 id="涉及到的知识点" tabindex="-1"><a class="header-anchor" href="#涉及到的知识点"><span>涉及到的知识点：</span></a></h3><p>mysql备份（鄙视一下某云，某云备份居然还要收费）。</p><p>截断表是否会导致主从延迟（不会）。</p><h3 id="表空间分析" tabindex="-1"><a class="header-anchor" href="#表空间分析"><span><strong>表空间分析</strong></span></a></h3><p><img src="https://imgoss.xgss.net/picgo/image-20220808191309186.png?aliyun" alt="image-20220808191309186"></p><h2 id="mysqldump-备份命令" tabindex="-1"><a class="header-anchor" href="#mysqldump-备份命令"><span>mysqldump 备份命令</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mysqldump -u 用户名 -h 数据库地址 -p &#39;密码&#39; --opt 数据库名 表名 &gt; /data/备份文件名.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>备份表的时候报错：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mysqldump: Error 2013: Lost connection to MySQL server during query when dumping table \`XXXXX\` at row: 686431</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>有报错，于是发工单，某云客服推荐使用DMS导出</strong></p><p><img src="https://imgoss.xgss.net/picgo/image-20220808191804226.png?aliyun" alt="image-20220808191804226"></p><p>备份的时候影响小部分性能，**但是免费居然超过免费额度。**本着能免费，为啥要收费呢， 真的是无语了，浪费几个小时！</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>导出失败: 您当前使用的数据库实例管控模式为“自由操作”，已超出免费额度1,000,000。如您需要继续操作请调整实例管控模式为“稳定变更”、“安全协同”后再进行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://imgoss.xgss.net/picgo/image-20220808191908156.png?aliyun" alt="image-20220808191908156"></p><p>域名是修改数据库配置，再用mysqldump 将表导出。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>net_read_timeout：30</span></span>
<span class="line"><span>net_write_timeout：60</span></span>
<span class="line"><span></span></span>
<span class="line"><span>于是把这个参数修改为：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>net_read_timeout：288000</span></span>
<span class="line"><span>net_write_timeout：288000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改数据库配置</p><p><img src="https://imgoss.xgss.net/picgo/image-20220808192112459.png?aliyun" alt="image-20220808192112459"></p><p>再用mysqldump导出数据库，等了将近十几个小时之后终于备份成功，大小为193G</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mysqldump -u 用户名 -h 数据库地址 -p &#39;密码&#39; --opt 数据库名 表名 &gt; /data/备份文件名.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="新上一张表" tabindex="-1"><a class="header-anchor" href="#新上一张表"><span><strong>新上一张表</strong></span></a></h3><p>实际在跟研发沟通，按月来做分表。比如：表名+日期 table_2208</p><p><img src="https://imgoss.xgss.net/picgo/image-20220808192123971.png?aliyun" alt="image-20220808192123971"></p><h3 id="截断表之后的硬盘总大小" tabindex="-1"><a class="header-anchor" href="#截断表之后的硬盘总大小"><span><strong>截断表之后的硬盘总大小</strong></span></a></h3><p><img src="https://imgoss.xgss.net/picgo/wps9.jpg?aliyun" alt="img"></p><h2 id="删除表和截断表命令之间的区别" tabindex="-1"><a class="header-anchor" href="#删除表和截断表命令之间的区别"><span><strong>删除表和截断表命令之间的区别</strong></span></a></h2><p>表删除包括表的定义和关联对象（规则、索引、约、触发器、主键，等）。很明显，一旦表被删除，那么表中包含的所有的数据行都会被一同删除。</p><p>truncate 命令则仅仅删除了表中所有的数据行。表的结构和所有的索引仍然继续存在，直到你输入删除表的命令（如上所述）。绑定到列上的规则、默认值、约束仍然继续绑定，并且触发器也仍然起作用。</p><p>截断表命令还会回收所有索引的分配页。</p><p>截断表的执行速度与不带where子句的delete（删除）命令相同，甚至比它还要快。delete（删除） 一次删除一行数据，并且将每一行被删除的数据都作为一个事务记录日志；而truncate （截断）表则回收整个数据页，只记录很少的日志项。delete（删除）和truncate（截断）都会回收被数据占用的空间，以及相关的索引。只有表的拥有者可以截断表。</p>`,42)]))}const h=a(t,[["render",l]]),g=JSON.parse('{"path":"/article/xgcv0xwx/","title":"数据库硬盘空间可用小于90%解决方案","lang":"en-US","frontmatter":{"title":"数据库硬盘空间可用小于90%解决方案","createTime":"2025/05/27 17:51:17","permalink":"/article/xgcv0xwx/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":3.19,"words":957},"filePathRelative":"debug/数据库硬盘空间可用小于90%解决方案.md"}');export{h as comp,g as data};
