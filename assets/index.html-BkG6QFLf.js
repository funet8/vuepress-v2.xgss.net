import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as n,o as i}from"./app-BiQR_lPj.js";const p={};function r(c,s){return i(),e("div",null,s[0]||(s[0]=[n(`<h1 id="国内无法拉取docker镜像了-这些方法拯救你的docker" tabindex="-1"><a class="header-anchor" href="#国内无法拉取docker镜像了-这些方法拯救你的docker"><span>国内无法拉取Docker镜像了？这些方法拯救你的Docker</span></a></h1><p>最近各大高校以及容器技术社区，由于众所周不知的原因， 纷纷关闭多个镜像加速站点。</p><p>这极大地影响了工作效率和开发进度。面对这一困境，本文将为你介绍几种有效的解决方案，帮助你顺利拉取Docker镜像，继续你的开发工作。</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705114601834.png?aliyun" alt="image-20240705114601834"></p><p>今天就介绍几个方法让拯救你的Docker</p><p>方法1: 某些云镜像加速</p><p>方法2: 使用Docker Hub并将镜像推送到阿里云自有仓库</p><p>方法3:使用Github Action 构建docker镜像</p><p>方法4: 部署DockerHub的代理</p><p>方法5: 镜像仓库前缀替换</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705163035256.png?aliyun" alt="image-20240705163035256"></p><h1 id="一、某些云镜像加速" tabindex="-1"><a class="header-anchor" href="#一、某些云镜像加速"><span>一、某些云镜像加速</span></a></h1><p>这里某些云包括但不限于国内的几大云，阿里云、腾讯云、华为云，使用的方法都大同小异，这里介绍华为云的用户</p><h2 id="镜像加速不可用" tabindex="-1"><a class="header-anchor" href="#镜像加速不可用"><span>镜像加速不可用</span></a></h2><p>腾讯云镜像加速器地址：https://mirror.ccs.tencentyun.com</p><p>中国科学技术大学：https://docker.mirrors.ustc.edu.cn</p><p>Docker官方镜像（中国区）镜像加速：https://registry.docker-cn.com</p><p>网易云镜像加速器地址：http://hub-mirror.c.163.com</p><p>南京大学镜像加速器地址：https://docker.nju.edu.cn</p><h2 id="镜像加速可用镜像源" tabindex="-1"><a class="header-anchor" href="#镜像加速可用镜像源"><span>镜像加速可用镜像源</span></a></h2><p>阿里云镜像加速器地址：https://XXXXX.mirror.aliyuncs.com</p><p>华为云的镜像加速地址：XXX.mirror.swr.myhuaweicloud.com</p><p>Daocloud 镜像加速器地址：https://docker.m.daocloud.io</p><h2 id="华为云镜像加速" tabindex="-1"><a class="header-anchor" href="#华为云镜像加速"><span>华为云镜像加速</span></a></h2><p>进入华为云搜索“容器镜像服务”或者 &quot;SWR&quot; ，进入控制台</p><p>点击 “镜像资源”---&gt; “镜像中心”---&gt; &quot;镜像加速器&quot;</p><p><img src="https://imgoss.xgss.net/picgo/image-20240704174353786.png?aliyun" alt="image-20240704174353786"></p><p>操作说明</p><h3 id="安装-升级容器引擎客户端" tabindex="-1"><a class="header-anchor" href="#安装-升级容器引擎客户端"><span>安装/升级容器引擎客户端</span></a></h3><p>推荐安装1.11.2以上版本的容器引擎客户端</p><h3 id="配置镜像加速器" tabindex="-1"><a class="header-anchor" href="#配置镜像加速器"><span>配置镜像加速器</span></a></h3><p>针对容器引擎客户端版本大于 1.11.2 的用户 以root用户登录容器引擎所在的虚拟机</p><p>修改“/etc/docker/daemon.json”文件（如果没有，可以手动创建），在该文件内添加如下内容：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>vi /etc/docker/daemon.json</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    &quot;registry-mirrors&quot;: [ &quot;https://你的地址.mirror.swr.myhuaweicloud.com&quot; ]</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>按“Esc”，输入:wq保存并退出。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>systemctl restart docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重启容器引擎" tabindex="-1"><a class="header-anchor" href="#重启容器引擎"><span>重启容器引擎</span></a></h3><p>配置完成后，执行systemctl restart docker重启容器引擎。 如果重启失败，则检查操作系统其他位置</p><p>（如：/etc/sysconfig/docker、/etc/default/docker）是否配置了registry-mirrors参数，删除此参数并重启容器引擎即可。</p><h3 id="确认配置结果" tabindex="-1"><a class="header-anchor" href="#确认配置结果"><span>确认配置结果</span></a></h3><p>执行docker info，当Registry Mirrors字段的地址为加速器的地址时，说明加速器已经配置成功。</p><h2 id="阿里云镜像加速" tabindex="-1"><a class="header-anchor" href="#阿里云镜像加速"><span>阿里云镜像加速</span></a></h2><p>https://cr.console.aliyun.com/</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705110013415.png?aliyun" alt="image-20240705110013415"></p><h3 id="镜像加速器" tabindex="-1"><a class="header-anchor" href="#镜像加速器"><span>镜像加速器</span></a></h3><p>点击&quot;镜像工具&quot;---&gt;镜像加速器</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705110321808.png?aliyun" alt="image-20240705110321808"></p><h1 id="二、使用docker-hub并将镜像推送到自有仓库" tabindex="-1"><a class="header-anchor" href="#二、使用docker-hub并将镜像推送到自有仓库"><span>二、使用Docker Hub并将镜像推送到自有仓库</span></a></h1><p>之前写过一篇文章： https://mp.weixin.qq.com/s/OrcBrtrZRwie3Q8eYVfl-A</p><p>画个图说明：</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705153238249.png?aliyun" alt="image-20240705153238249"></p><p>当然也可以打包下载到本地</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker save busybox &gt; busybox.tar</span></span>
<span class="line"><span>docker load &lt; busybox.tar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="三、使用github-action-构建docker镜像" tabindex="-1"><a class="header-anchor" href="#三、使用github-action-构建docker镜像"><span>三、使用Github Action 构建docker镜像</span></a></h1><h2 id="前置条件" tabindex="-1"><a class="header-anchor" href="#前置条件"><span>前置条件</span></a></h2><p>1.可以访问Github，国内环境github时而抽风体质，如果没有科学环境也可以使用 https://github.com/521xueweihan/GitHub520 +SwitchHosts 基本还是可以使用的（有的话就当我没说）。</p><p>2.有个github账号</p><p>3.免费版Action 每天能使用1小时，每个月33小时（基本上够用）。</p><p>参考博主悟空的日常：<a href="http://wkdaily.cpolar.cn/archives/gc" target="_blank" rel="noopener noreferrer">使用Github Action 构建docker镜像</a> http://wkdaily.cpolar.cn/archives/gc</p><h2 id="_1-要有一个github账号" tabindex="-1"><a class="header-anchor" href="#_1-要有一个github账号"><span>1.要有一个github账号</span></a></h2><p>没有账号就需要注册一个。</p><p>https://github.com</p><h2 id="_2-fork项目dockertarbuilder" tabindex="-1"><a class="header-anchor" href="#_2-fork项目dockertarbuilder"><span>2.fork项目DockerTarBuilder</span></a></h2><p>fork 叉子叉到自己的仓库中： https://github.com/wukongdaily/DockerTarBuilder</p><p><img src="https://imgoss.xgss.net/picgo/image-20240704165355729.png?aliyun" alt="image-20240704165355729"></p><h2 id="_3-点击-actions" tabindex="-1"><a class="header-anchor" href="#_3-点击-actions"><span>3.点击 Actions</span></a></h2><p>点击Actions选项卡，再点击同意</p><p><img src="https://imgoss.xgss.net/picgo/image-20240704165435226.png?aliyun" alt="image-20240704165435226"></p><p>选择平台，再填入镜像名</p><p><img src="https://imgoss.xgss.net/picgo/image-20240704165730904.png?aliyun" alt="image-20240704165730904"></p><h2 id="_4-下载镜像" tabindex="-1"><a class="header-anchor" href="#_4-下载镜像"><span>4.下载镜像</span></a></h2><p>点击 All workflows</p><p><img src="https://imgoss.xgss.net/picgo/image-20240704165853901.png?aliyun" alt="image-20240704165853901"></p><p><img src="https://imgoss.xgss.net/picgo/image-20240704165932860.png?aliyun" alt="image-20240704165932860"></p><h2 id="_5-解压恢复镜像" tabindex="-1"><a class="header-anchor" href="#_5-解压恢复镜像"><span>5.解压恢复镜像</span></a></h2><p>将下载好的压缩包上传到docker宿主机上。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>解压</span></span>
<span class="line"><span># unzip docker-images-tar.zip</span></span>
<span class="line"><span>Archive:  docker-images-tar.zip</span></span>
<span class="line"><span>  inflating: x86-64-images.tar.gz    </span></span>
<span class="line"><span>再解压：</span></span>
<span class="line"><span>#tar -zxvf x86-64-images.tar.gz</span></span>
<span class="line"><span># ls -lh alpine:latest-amd64.tar</span></span>
<span class="line"><span>-rw------- 1 mysql 127 7.8M 7月   4 16:57 alpine:latest-amd64.tar</span></span>
<span class="line"><span></span></span>
<span class="line"><span>导入</span></span>
<span class="line"><span># docker load &lt; alpine:latest-amd64.tar</span></span>
<span class="line"><span></span></span>
<span class="line"><span>导入成功。</span></span>
<span class="line"><span># docker images</span></span>
<span class="line"><span>REPOSITORY                                         TAG                 IMAGE ID            CREATED             SIZE</span></span>
<span class="line"><span>alpine                                             latest              a606584aa9aa        13 days ago         7.8 MB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="四、部署dockerhub的代理" tabindex="-1"><a class="header-anchor" href="#四、部署dockerhub的代理"><span>四、部署DockerHub的代理</span></a></h1><h2 id="_1-前置条件" tabindex="-1"><a class="header-anchor" href="#_1-前置条件"><span>1.前置条件</span></a></h2><p>有个github账号</p><p>有个cloudflare账号</p><h2 id="_2-访问并fork如下项目到自己的仓库" tabindex="-1"><a class="header-anchor" href="#_2-访问并fork如下项目到自己的仓库"><span>2.访问并fork如下项目到自己的仓库</span></a></h2><p>https://github.com/cmliu/CF-Workers-docker.io</p><h2 id="_3-部署到cf的pages服务中" tabindex="-1"><a class="header-anchor" href="#_3-部署到cf的pages服务中"><span>3.部署到cf的pages服务中</span></a></h2><h3 id="_3-1登录cloudflare并点击worker和pages" tabindex="-1"><a class="header-anchor" href="#_3-1登录cloudflare并点击worker和pages"><span>3.1登录cloudflare并点击Worker和Pages</span></a></h3><p>点击 “Worker和Pages”再点 概述</p><p>点击 “点击pages”再点 “连接到Git”</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705160146960.png?aliyun" alt="image-20240705160146960"></p><h3 id="_3-2-点击pages" tabindex="-1"><a class="header-anchor" href="#_3-2-点击pages"><span>3.2 点击pages</span></a></h3><p>连接GitHub</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705160205349.png?aliyun" alt="image-20240705160205349"></p><p>容易登录之后</p><h3 id="_3-3-选择刚才fork的仓库" tabindex="-1"><a class="header-anchor" href="#_3-3-选择刚才fork的仓库"><span>3.3 选择刚才fork的仓库</span></a></h3><p><img src="https://imgoss.xgss.net/picgo/image-20240705160312609.png?aliyun" alt="image-20240705160312609"></p><p>点击 保存并部署</p><p><img src="https://imgoss.xgss.net/picgo2025/image-20240705160428536.png?aliyun" alt="image-20240705160428536"></p><p>构建和部署</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705160448775.png?aliyun" alt="image-20240705160448775"></p><p>继续处理项目</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705160516489.png?aliyun" alt="image-20240705160516489"></p><h2 id="_4-访问并记录刚才部署的代理网站" tabindex="-1"><a class="header-anchor" href="#_4-访问并记录刚才部署的代理网站"><span>4.访问并记录刚才部署的代理网站</span></a></h2><p>部署成功，点击访问站点。</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705160657935.png?aliyun" alt="image-20240705160657935"></p><h2 id="_5-自定义域名" tabindex="-1"><a class="header-anchor" href="#_5-自定义域名"><span>5.自定义域名</span></a></h2><p>这步不是必须</p><p>因为cloudflare提供的域名太长不利于记忆，可以使用自有的域名，解析</p><p>我这里配置的域名 <code>dockerhub.xgss.net</code> 再域名解析过来</p><p><img src="https://imgoss.xgss.net/picgo/image-20240705161003351.png?aliyun" alt="image-20240705161003351"></p><p><img src="https://imgoss.xgss.net/picgo/image-20240705161210924.png?aliyun" alt="image-20240705161210924"></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># ping dockerhub.xgss.net</span></span>
<span class="line"><span>PING cf-workers-docker-io-1wu.pages.dev (172.66.47.123) 56(84) bytes of data.</span></span>
<span class="line"><span>64 bytes from 172.66.47.123 (172.66.47.123): icmp_seq=1 ttl=53 time=988 ms</span></span>
<span class="line"><span>64 bytes from 172.66.47.123 (172.66.47.123): icmp_seq=2 ttl=53 time=996 ms</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-修改配置文件" tabindex="-1"><a class="header-anchor" href="#_6-修改配置文件"><span>6.修改配置文件</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>sudo mkdir -p /etc/docker</span></span>
<span class="line"><span>sudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;registry-mirrors&quot;: [&quot;https://docker.fxxk.dedyn.io&quot;]  # 请替换为您自己的Worker自定义域名</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>EOF</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo systemctl daemon-reload</span></span>
<span class="line"><span>sudo systemctl restart docker</span></span>
<span class="line"><span>sudo docker info</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="五、镜像仓库前缀替换" tabindex="-1"><a class="header-anchor" href="#五、镜像仓库前缀替换"><span>五、镜像仓库前缀替换</span></a></h1><p>如果由于网络限制，你无法直接访问某些镜像仓库，还可以尝试通过修改镜像仓库前缀来拉取镜像。一些国内的服务商提供了镜像仓库的镜像服务，你可以将原有的仓库前缀替换为对应的国内服务商的前缀。</p><p>例如，将docker.io替换为docker.m.daocloud.io等。这种方法虽然可能不是所有镜像都适用，但能解决一部分镜像拉取问题。</p><p>https://github.com/DaoCloud/public-image-mirror?tab=readme-ov-file#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95</p><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h1><p>以上就是拯救你的Docker 几种方法，希望本文介绍的这些方法能够帮助到你，让你的Docker之旅更加顺畅无阻。</p>`,116)]))}const d=a(p,[["render",r]]),o=JSON.parse('{"path":"/article/rh4iwxix/","title":"Docker系列教程13-国内无法拉取Docker镜像了？这些方法拯救你的Docker","lang":"en-US","frontmatter":{"title":"Docker系列教程13-国内无法拉取Docker镜像了？这些方法拯救你的Docker","createTime":"2025/05/27 17:51:17","permalink":"/article/rh4iwxix/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":5.37,"words":1611},"filePathRelative":"docker/Docker系列教程13-国内无法拉取Docker镜像了？这些方法拯救你的Docker.md"}');export{d as comp,o as data};
