import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a,o as n}from"./app-BiQR_lPj.js";const l={};function d(t,s){return n(),i("div",null,s[0]||(s[0]=[a(`<h1 id="docker与iptables如何限制暴露的对外访问端口" tabindex="-1"><a class="header-anchor" href="#docker与iptables如何限制暴露的对外访问端口"><span>docker与iptables如何限制暴露的对外访问端口</span></a></h1><p>docker 会在iptables上加上自己的转发规则，如果直接在input链上限制端口是没有效果的。这就需要限制docker的转发链上的DOCKER表。</p><h2 id="查询docker表" tabindex="-1"><a class="header-anchor" href="#查询docker表"><span>查询docker表</span></a></h2><p>查询DOCKER表并显示规则编号</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>iptables -L DOCKER -n --line-number</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="修改iptables规则" tabindex="-1"><a class="header-anchor" href="#修改iptables规则"><span>修改iptables规则</span></a></h2><p>修改对应编号的iptables 规则，这里添加了允许访问ip的限制</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>iptables -R DOCKER 5 -p tcp -m tcp -s 192.168.1.0/24 --dport 3000 -j ACCEPT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="禁止某个网段访问" tabindex="-1"><a class="header-anchor" href="#禁止某个网段访问"><span>禁止某个网段访问</span></a></h2><p>在Chain DOCKER 中增加配置，禁止192.168.1.0/24网段的访问可按照如下配置</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>iptables -I DOCKER -s 192.168.1.0/24 -j DROP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>想要阻止容器172.18.0.2，它的端口是7053</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>iptables -I FORWARD -p tcp -d 172.18.0.2 --dport 7053 -j DROP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="阻止9200端口访问" tabindex="-1"><a class="header-anchor" href="#阻止9200端口访问"><span>阻止9200端口访问</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>iptables -I DOCKER 1 -p tcp --dport 9200 -j DROP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>只允许192.168.1.1访问docker的服务，其中ext_if是你机器上的实际网卡名</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>iptables -I DOCKER-USER -i ext_if ! -s 192.168.1.1 -j DROP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="只允许网段192-168-1-0-24" tabindex="-1"><a class="header-anchor" href="#只允许网段192-168-1-0-24"><span>只允许网段192.168.1.0/24</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>iptables -I DOCKER-USER -i ext_if ! -s 192.168.1.0/24 -j DROP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="只允许ip范围" tabindex="-1"><a class="header-anchor" href="#只允许ip范围"><span>只允许ip范围</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>iptables -I DOCKER-USER -m iprange -i ext_if ! --src-range 192.168.1.1-192.168.1.3 -j DROP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Docker加入自定义iptables规则链（新建一个链加在FORWARD中进行处理） https://www.cnblogs.com/jiftle/p/13821394.html</p><p>PS : 这位同学整理了iptables的详细文档，非常详细，推荐阅读。 https://www.kancloud.cn/jiftle/iptables-detailed-introduction/1972252</p><p>iptables禁用docker暴露的端口（在nat表的DOCKER链中处理） https://blog.csdn.net/u010544187/article/details/86698201</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>#我的eth1是外网网卡 eth0是内网网卡</span></span>
<span class="line"><span>#由于DOCKER-USER链上原本有一条RETURN规则，因此这里使用-I做插入</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>#提供访问的是外网ip，所以在eth1上做策略，不是白名单的就DROP</span></span>
<span class="line"><span>iptables -I DOCKER-USER -i eth1 ! -s 白名单ip -j DROP</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>#eth0对应的内网ip不开放，不允许访问</span></span>
<span class="line"><span>iptables -I DOCKER-USER -i eth0 -j DROP</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>#由于外网网卡提供业务，而业务回包也是从外网网卡走的，因此需要增加连接状态，如果是回包的话也允许通过</span></span>
<span class="line"><span>iptables -I DOCKER-USER -i eth1 -p tcp -m state --state RELATED,ESTABLISHED -j ACCEPT</span></span>
<span class="line"><span> </span></span>
<span class="line"><span>#这样做的优点是</span></span>
<span class="line"><span>#1、符合官方文档，只操作DOCKER-USER链，相对优雅</span></span>
<span class="line"><span>#2、不用处理复杂的SNAT或DNAT规则</span></span>
<span class="line"><span>#缺点是：</span></span>
<span class="line"><span>#1、需要手动识别网卡，或者额外写一段bash识别不同机器的外网网卡。</span></span>
<span class="line"><span>#2、需要在iptables、docker启动之后，额外执行以上三句iptables</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25)]))}const c=e(l,[["render",d]]),h=JSON.parse('{"path":"/article/yjtr2a98/","title":"Docker系列教程12-docker与iptables如何限制暴露的对外访问端口","lang":"en-US","frontmatter":{"title":"Docker系列教程12-docker与iptables如何限制暴露的对外访问端口","createTime":"2025/05/27 17:51:17","permalink":"/article/yjtr2a98/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":2.08,"words":623},"filePathRelative":"docker/Docker系列教程12-docker与iptables如何限制暴露的对外访问端口.md"}');export{c as comp,h as data};
