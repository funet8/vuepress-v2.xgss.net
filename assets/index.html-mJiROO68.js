import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as i}from"./app-BiQR_lPj.js";const l={};function r(p,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="群晖nas配置之自有服务器ngrok实现内网穿透" tabindex="-1"><a class="header-anchor" href="#群晖nas配置之自有服务器ngrok实现内网穿透"><span>群晖NAS配置之自有服务器ngrok实现内网穿透</span></a></h1><h1 id="前言-内网穿透" tabindex="-1"><a class="header-anchor" href="#前言-内网穿透"><span>前言-内网穿透</span></a></h1><p>内网穿透是指通过一种技术让外部网络可以访问到内网的NAS设备，这样即使在不同网络环境下，也能够远程访问和管理NAS设备。以下是一些常见的内网穿透方案：</p><h2 id="synology官方提供的quickconnect" tabindex="-1"><a class="header-anchor" href="#synology官方提供的quickconnect"><span>Synology官方提供的QuickConnect：</span></a></h2><p>Synology官方提供了QuickConnect服务，可以通过Synology账号远程访问NAS设备。用户可以在NAS控制面板中设置和管理QuickConnect服务，使其在不同网络环境下访问NAS变得更加简单。</p><h2 id="synology的ddns服务" tabindex="-1"><a class="header-anchor" href="#synology的ddns服务"><span>Synology的DDNS服务：</span></a></h2><p>Synology NAS支持使用DDNS（动态域名解析）服务，可以为NAS设备设置一个动态域名，使用户可以通过域名访问NAS，而不必担心动态IP地址变化带来的问题。</p><h2 id="vpn-虚拟专用网络" tabindex="-1"><a class="header-anchor" href="#vpn-虚拟专用网络"><span>VPN（虚拟专用网络）：</span></a></h2><p>通过在路由器上设置VPN服务器，或者使用NAS自身的VPN服务，可以建立安全的远程连接，让用户远程访问内网资源，包括NAS设备。</p><h2 id="端口转发-端口映射" tabindex="-1"><a class="header-anchor" href="#端口转发-端口映射"><span>端口转发/端口映射：</span></a></h2><p>在路由器上设置端口转发（或称端口映射），将指定端口的流量转发到NAS设备上，这样用户就可以通过特定端口来访问NAS。但要确保端口转发时考虑到安全性，避免暴露不必要的服务或端口。</p><h2 id="第三方内网穿透服务" tabindex="-1"><a class="header-anchor" href="#第三方内网穿透服务"><span>第三方内网穿透服务：</span></a></h2><p>使用类似于ngrok、frp等第三方工具或服务进行内网穿透，这些服务可以帮助用户将内网设备暴露到公网上，但需要注意安全性和隐私保护。</p><p>这篇文章就来介绍自有服务器ngrok实现内网穿透</p><p><img src="https://imgoss.xgss.net/picgo/ngrok--1024x640.png?aliyun" alt="ngrok--1024x640"></p><h1 id="前提条件" tabindex="-1"><a class="header-anchor" href="#前提条件"><span>前提条件</span></a></h1><p>1.需要有个域名，如果是国内服务器，还需要备案</p><p>2.需要有个服务器 <a href="http://d.xgss.net/2" target="_blank" rel="noopener noreferrer">推荐使用阿里云99元/年 </a> 访问：http://d.xgss.net/2</p><p>3.系统是centos7</p><h1 id="域名解析" tabindex="-1"><a class="header-anchor" href="#域名解析"><span>域名解析</span></a></h1><p>选择二级域名域名 ngrok.xgss.net 三级域名使用泛解析 *.ngrok.xgss.net，为了后面指定域名比如 nas.ngrok.xgss.net就不用再解析了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ngrok.xgss.net  	A解析到    云服务器公网IP</span></span>
<span class="line"><span>*.ngrok.xgss.net	A解析到	云服务器公网IP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://imgoss.xgss.net/picgo/image-20231127104128762.png?aliyun" alt="image-20231127104128762"></p><h1 id="安装ngrok服务端" tabindex="-1"><a class="header-anchor" href="#安装ngrok服务端"><span>安装Ngrok服务端</span></a></h1><p>通过远程ssh连接服务器。</p><p><strong>下载常用依赖库</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>yum -y install zlib-devel openssl-devel perl hg cpio expat-devel gettext-devel curl curl-devel perl-ExtUtils-MakeMaker hg wget gcc gcc-c++</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>安装go和git</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># yum -y install git go</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>要注意git版本必须大于1.7.9,go版本必须大于1.4,否则可能有意想不到的错误</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>查看版本</span></span>
<span class="line"><span># git --version</span></span>
<span class="line"><span>git version 1.8.3.1</span></span>
<span class="line"><span># go version</span></span>
<span class="line"><span>go version go1.13 linux/amd64</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开始安装ngrok" tabindex="-1"><a class="header-anchor" href="#开始安装ngrok"><span>开始安装ngrok</span></a></h2><p>个人习惯安装到 /data/ 目录下 如果你想安装到其他目录 则进入你想安装的目录</p><h3 id="_1-下载源码" tabindex="-1"><a class="header-anchor" href="#_1-下载源码"><span>1.下载源码</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mkdir /data/</span></span>
<span class="line"><span>cd /data/</span></span>
<span class="line"><span># git clone https://github.com/inconshreveable/ngrok.git ngrok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-生成证书" tabindex="-1"><a class="header-anchor" href="#_2-生成证书"><span>2.生成证书</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>cd /data/ngrok</span></span>
<span class="line"><span>#生成并替换源码里默认的证书，注意域名要修改为你自己的，这里是一个虚拟的测试域名</span></span>
<span class="line"><span>NGROK_DOMAIN=&quot;ngrok.xgss.net&quot;</span></span>
<span class="line"><span>#测试一下有没有设置成功</span></span>
<span class="line"><span>echo $NGROK_DOMAIN</span></span>
<span class="line"><span></span></span>
<span class="line"><span>openssl genrsa -out rootCA.key 2048</span></span>
<span class="line"><span></span></span>
<span class="line"><span>openssl req -x509 -new -nodes -key rootCA.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -days 5000 -out rootCA.pem</span></span>
<span class="line"><span></span></span>
<span class="line"><span>openssl genrsa -out device.key 2048</span></span>
<span class="line"><span></span></span>
<span class="line"><span>openssl req -new -key device.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -out device.csr</span></span>
<span class="line"><span></span></span>
<span class="line"><span>openssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后会在 ngrok 目录下生成 root,device 等六个文件。 然后需要拷贝到配置的目录中，在编译的时候会使用这些文件。</p><h3 id="_3-替换证书" tabindex="-1"><a class="header-anchor" href="#_3-替换证书"><span>3.替换证书</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>//一行一行执行，然后会提示是否覆盖，输入 “y” 回车就可以了</span></span>
<span class="line"><span></span></span>
<span class="line"><span># cp -rf rootCA.pem assets/client/tls/ngrokroot.crt</span></span>
<span class="line"><span>cp: overwrite ‘assets/client/tls/ngrokroot.crt’? y</span></span>
<span class="line"><span></span></span>
<span class="line"><span># cp -rf device.crt assets/server/tls/snakeoil.crt</span></span>
<span class="line"><span>cp: overwrite ‘assets/server/tls/snakeoil.crt’? y</span></span>
<span class="line"><span></span></span>
<span class="line"><span># cp -rf device.key assets/server/tls/snakeoil.key</span></span>
<span class="line"><span>cp: overwrite ‘assets/server/tls/snakeoil.key’? y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这个地方，证书生成已经复制的准备工作已经完成了。</p><h3 id="_4-生成服务端" tabindex="-1"><a class="header-anchor" href="#_4-生成服务端"><span>4.生成服务端</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>make release-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3><p>这样就会在bin目录下生成ngrokd 这个文件,就是我们ngrok的服务器程序</p><h3 id="_5-编译客户端ngrok" tabindex="-1"><a class="header-anchor" href="#_5-编译客户端ngrok"><span>5.编译客户端ngrok</span></a></h3><p>可以根据不同系统的命令如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>32位linux客户端: GOOS=linux GOARCH=386 make release-client</span></span>
<span class="line"><span>64位linux客户端: GOOS=linux GOARCH=amd64 make release-client</span></span>
<span class="line"><span>32位windows客户端: GOOS=windows GOARCH=386 make release-client</span></span>
<span class="line"><span>64位windows客户端: GOOS=windows GOARCH=amd64 make release-client</span></span>
<span class="line"><span>32位mac平台客户端:GOOS=darwin GOARCH=386 make release-client</span></span>
<span class="line"><span>64位mac平台客户端:GOOS=darwin GOARCH=amd64 make release-client</span></span>
<span class="line"><span>ARM平台linux客户端: GOOS=linux GOARCH=arm make release-client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我这里是64位linux和64位windows客户端，mac系统编译</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>GOOS=linux GOARCH=amd64 make release-client</span></span>
<span class="line"><span>GOOS=windows GOARCH=amd64 make release-client</span></span>
<span class="line"><span>GOOS=darwin GOARCH=amd64 make release-client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依次执行这3个命令之后就会在bin目录里面生成所有的客户端文件，客户端平台是文件夹的名字，客户端放在对应的目录下，当前Linux平台客户端就直接在bin目录下一个ngrok的程序</p><h3 id="_6-配置启动服务器" tabindex="-1"><a class="header-anchor" href="#_6-配置启动服务器"><span>6.配置启动服务器</span></a></h3><ul><li>httpAddr 是访问普通的http使用的端口号，用后面用 子域名.ngrok.xgss.net 来访问服务</li><li>httpsAddr 是访问的https使用的端口号,同上，只不过是需要https的服务访问才用这个端口(一般用不上)</li><li>tunnelAddr 是ngrok通道的端口号，这个端口是Ngrok用来通信的，所以这个端口在服务器上和客户端上设置必须要对应才可以正常的链接，默认端口是4443</li></ul><p>完整命令:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>bin/ngrokd -domain=&quot;$NGROK_DOMAIN&quot; -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:443&quot; -tunnelAddr=&quot;:4443&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我使用的</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>bin/ngrokd -domain=&quot;$NGROK_DOMAIN&quot; -httpAddr=&quot;:80&quot;</span></span>
<span class="line"><span>nohup /data/ngrok/bin/ngrokd -domain=&quot;ngrok.xgss.net&quot; -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:443&quot; -tunnelAddr=&quot;:4443&quot; &amp;</span></span>
<span class="line"><span>不输出 nohup.out</span></span>
<span class="line"><span>nohup /data/ngrok/bin/ngrokd -domain=&quot;ngrok.xgss.net&quot; -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:443&quot; -tunnelAddr=&quot;:4443&quot; &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-服务端配置自启动" tabindex="-1"><a class="header-anchor" href="#_7-服务端配置自启动"><span>7.服务端配置自启动</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>chmod +x /etc/rc.d/rc.local</span></span>
<span class="line"><span>echo &#39;nohup /data/ngrok/bin/ngrokd -domain=&quot;ngrok.xgss.net&quot; -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:443&quot; -tunnelAddr=&quot;:4443&quot; &gt;/dev/null 2&gt;&amp;1 &amp;&#39; &gt;&gt; /etc/rc.d/rc.local</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span># 是否正常</span></span>
<span class="line"><span># netstat -tunpl|grep ngrok</span></span>
<span class="line"><span>tcp6       0      0 :::80                   :::*                    LISTEN      21387/ngrokd        </span></span>
<span class="line"><span>tcp6       0      0 :::4443                 :::*                    LISTEN      21387/ngrokd        </span></span>
<span class="line"><span>tcp6       0      0 :::443                  :::*                    LISTEN      21387/ngrokd   </span></span>
<span class="line"><span></span></span>
<span class="line"><span># curl http://ngrok.xgss.net</span></span>
<span class="line"><span>Tunnel ngrok.xgss.net not found</span></span>
<span class="line"><span>正常</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监控ngork服务，如果服务异常关闭了则自动启动</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span></span></span>
<span class="line"><span>vi /root/jiankong.sh</span></span>
<span class="line"><span>编写以下：</span></span>
<span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span>process_pid=\`ps -aux|grep -v &#39;grep&#39;|grep -c &#39;ngrok&#39;\`</span></span>
<span class="line"><span>#echo &quot;$process_pid&quot;</span></span>
<span class="line"><span>#关键字的个数，可以使用 grep -c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if [ $process_pid -eq 0 ]</span></span>
<span class="line"><span>    then</span></span>
<span class="line"><span>    pkill ngrok</span></span>
<span class="line"><span>	nohup /data/ngrok/bin/ngrokd -domain=ngrok.7477.com -httpAddr=:80 -httpsAddr=:443 -tunnelAddr=:4443 &gt;/dev/null 2&gt;&amp;1 &amp;</span></span>
<span class="line"><span>    now=\`date  +%Y-%m-%d[%H:%M:%S]\`</span></span>
<span class="line"><span>    echo &quot;at $now start ngrok&quot; &gt;&gt; /data/restart_ngrok.log</span></span>
<span class="line"><span>fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定时执行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># chmod +x /root/jiankong.sh</span></span>
<span class="line"><span># echo &#39;*/5 * * * * root /root/jiankong.sh&#39; &gt;&gt; /etc/crontab</span></span>
<span class="line"><span># systemctl restart crond</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># cat /data/restart_ngrok.log</span></span>
<span class="line"><span># pkill ngrok</span></span>
<span class="line"><span># /root/jiankong.sh</span></span>
<span class="line"><span># # cat /data/restart_ngrok.log</span></span>
<span class="line"><span>at 2023-11-27[15:16:57] start ngrok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此ngrok安装完成。</p><h1 id="下载ngrok客户端文件" tabindex="-1"><a class="header-anchor" href="#下载ngrok客户端文件"><span>下载ngrok客户端文件</span></a></h1><p>下载客户端</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ls /data/ngrok/bin</span></span>
<span class="line"><span>darwin_386  darwin_amd64  go-bindata  linux_386  linux_arm  ngrok  ngrokd  windows_386  windows_amd64</span></span>
<span class="line"><span></span></span>
<span class="line"><span>其中 /data/ngrok/bin/ngrok 是linux的客户端</span></span>
<span class="line"><span>其中 windows_amd64 是windows的客户端</span></span>
<span class="line"><span># cd /data/ngrok/bin</span></span>
<span class="line"><span># tar -zcvf ngork-client.tar.gz ngrok darwin_amd64/ windows_amd64/</span></span>
<span class="line"><span>ngrok</span></span>
<span class="line"><span>darwin_amd64/</span></span>
<span class="line"><span>darwin_amd64/ngrok</span></span>
<span class="line"><span>windows_amd64/</span></span>
<span class="line"><span>windows_amd64/ngrok.exe</span></span>
<span class="line"><span>把 ngork-client.tar.gz 文件下载配置。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="linux客户端配置" tabindex="-1"><a class="header-anchor" href="#linux客户端配置"><span>Linux客户端配置</span></a></h1><p>下载ngrok服务器文件 /data/ngrok/bin/ngrok 到 在192.168.1.4 /root/ngrok目录上群晖NAS上操作：</p><h1 id="群晖使用ngork映射ssh端口" tabindex="-1"><a class="header-anchor" href="#群晖使用ngork映射ssh端口"><span>群晖使用ngork映射ssh端口</span></a></h1><p>需求： 群晖上配置 ngork的 22端口映射</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>root@star-nas:~# mkdir  /root/ngrok</span></span>
<span class="line"><span>root@star-nas:~# vi /root/ngrok/start_ngrok.sh</span></span>
<span class="line"><span></span></span>
<span class="line"><span># cat start_ngrok.sh </span></span>
<span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span>pkill ngrok</span></span>
<span class="line"><span>#ngrok-web协议</span></span>
<span class="line"><span>/root/ngrok/ngrok -subdomain=nas -config=&quot;/root/ngrok/ngrok.cfg&quot; 5000 &gt;/dev/null 2&gt;&amp;1 &amp;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>root@star-nas:~/ngrok# cat /root/ngrok/ngrok.cfg</span></span>
<span class="line"><span>server_addr: &quot;ngrok.xgss.net:4443&quot;</span></span>
<span class="line"><span>trust_host_root_certs: false</span></span>
<span class="line"><span>root@star-nas:~/ngrok# chmod +x /root/ngrok/start_ngrok.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="群晖使用ngork映射web端口" tabindex="-1"><a class="header-anchor" href="#群晖使用ngork映射web端口"><span>群晖使用ngork映射web端口</span></a></h1><p>需求： 群晖上配置 ngork的 80端口映射到公网</p><p>新建配置文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mkdir /data/ngrok</span></span>
<span class="line"><span>vi /data/ngrok/ngrok_8000.cfg</span></span>
<span class="line"><span>填写一下内容</span></span>
<span class="line"><span></span></span>
<span class="line"><span>server_addr: &quot;ngrok.xgss.net:4443&quot;</span></span>
<span class="line"><span>trust_host_root_certs: false</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vi /data/ngrok/ngrok_8082.cfg</span></span>
<span class="line"><span>填写一下内容</span></span>
<span class="line"><span>server_addr: &quot;ngrok.xgss.net:4443&quot;</span></span>
<span class="line"><span>trust_host_root_certs: false</span></span>
<span class="line"><span>将在服务器中生成的ngrok文件上传目录中/data/ngrok/</span></span>
<span class="line"><span>chmod +x /data/ngrok/ngrok</span></span>
<span class="line"><span>nohup /data/ngrok/ngrok -log=/data/ngrok/ngrok_8000.log -subdomain=seafiles -config=&quot;/data/ngrok/ngrok_8000.cfg&quot; 8000 &amp;</span></span>
<span class="line"><span>nohup /data/ngrok/ngrok -log=/data/ngrok/ngrok_8082.log -subdomain=down -config=&quot;/data/ngrok/ngrok_8082.cfg&quot; 8082 &amp;</span></span>
<span class="line"><span>netstat -tunpl |grep ngrok</span></span>
<span class="line"><span>tcp        0      0 127.0.0.1:4040          0.0.0.0:*               LISTEN      20609/ngrok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>日志： -log=/data/ngrok/ngrok_8000.log 是记录ngrok的日志，如果前期调试的时候加上这个参数，如果不能访问就可以查看到底是什么问题 子域名： -subdomain=seafiles 是定义访问的时候的子域名，现在访问 <a href="http://seafiles.ngrok.xgss.net" target="_blank" rel="noopener noreferrer">seafiles.ngrok.xgss.net</a> 就可以访问到这一台机器上8000端口的服务</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ngrok</span></span>
<span class="line"><span>Tunnel Status online</span></span>
<span class="line"><span>Version 1.7/1.7</span></span>
<span class="line"><span>Forwarding https://test.ngrok.xgss.net -&gt; 127.0.0.1:80</span></span>
<span class="line"><span>Forwarding http://test.ngrok.xgss.net -&gt; 127.0.0.1:80</span></span>
<span class="line"><span>Web Interface 127.0.0.1:4040</span></span>
<span class="line"><span>Conn 0</span></span>
<span class="line"><span>Avg Conn Time 0.00ms</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这里不出意外的话就会启动成功了,访问test.ngrok.xgss.net的时候就是你本地的ip了.你可以通过apache或nginx配置test.ngrok.xgss.net域名指定你的目录开始使用。</p><h1 id="windows客户端配置" tabindex="-1"><a class="header-anchor" href="#windows客户端配置"><span>windows客户端配置</span></a></h1><p>在D盘新建一个目录 ngrok，如图有四个文件功能分别是</p><p>add.bat是将start.bat添加到开机启动项，ngrok.cfg是端口的配置，ngrok.exe是服务端下载的文件，start.bat启动ngrok</p><p><img src="https://imgoss.xgss.net/picgo/image-20220308171141389.png?aliyun" alt="image-20220308171141389"></p><h3 id="add-bat内容" tabindex="-1"><a class="header-anchor" href="#add-bat内容"><span>add.bat内容</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>reg add HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /v lin /t REG_SZ /d D:\\ngrok\\start.bat /f</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="ngrok-cfg的内容" tabindex="-1"><a class="header-anchor" href="#ngrok-cfg的内容"><span>ngrok.cfg的内容</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>server_addr: &quot;ngrok.xgss.net:4443&quot;</span></span>
<span class="line"><span>trust_host_root_certs: false</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tunnels:</span></span>
<span class="line"><span>    mstsc:</span></span>
<span class="line"><span>        remote_port: 3378</span></span>
<span class="line"><span>        proto:</span></span>
<span class="line"><span>         tcp: &quot;127.0.0.1:3389&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>start.bat的内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>D:</span></span>
<span class="line"><span>cd D:\\ngrok</span></span>
<span class="line"><span>ngrok -config=ngrok.cfg start mstsc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>双击start.bat</p><p><img src="https://imgoss.xgss.net/picgo/image-20220308171620506.png?aliyun" alt="image-20220308171620506"></p><p>测试用手机4G网络远程连接本机</p><p>地址： ngrok.xgss.net:3378</p><p>可以远程连接即可。</p>`,96)]))}const c=n(l,[["render",r]]),o=JSON.parse('{"path":"/article/a6gg40u0/","title":"群晖NAS配置之自有服务器ngrok实现内网穿透","lang":"en-US","frontmatter":{"title":"群晖NAS配置之自有服务器ngrok实现内网穿透","createTime":"2025/05/27 17:51:17","permalink":"/article/a6gg40u0/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":7.37,"words":2210},"filePathRelative":"NAS/群晖NAS配置之自有服务器ngrok实现内网穿透.md"}');export{c as comp,o as data};
