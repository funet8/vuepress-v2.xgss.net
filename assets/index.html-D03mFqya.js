import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as l}from"./app-BiQR_lPj.js";const t={};function e(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="nginx从入门到放弃05-访问日志与日志切割" tabindex="-1"><a class="header-anchor" href="#nginx从入门到放弃05-访问日志与日志切割"><span>Nginx从入门到放弃05-访问日志与日志切割</span></a></h1><h2 id="设置访问日志" tabindex="-1"><a class="header-anchor" href="#设置访问日志"><span>设置访问日志</span></a></h2><p>当我们访问nginx服务时，nginx会记录日志，nginx日志分两种，一种是访问日志，一种是错误日志，访问日志记录在”access.log”文件中，错误日志记录在”error.log”文件中。</p><p>笔者把自己总结的文档分为几遍，合集在 https://g.xgss.net/nginx/</p><p>自定义nginx日志的路径</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>access_log /data/wwwroot/log/www.nginx01.com-access.log main_zdy;</span></span>
<span class="line"><span>error_log /data/wwwroot/log/www.nginx01.com-error.log;</span></span>
<span class="line"><span>error_log /dev/null;  # 不记录日志，不能用 &quot;off&quot;,如果用off还是会记录到 logs/off文件中！</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://imgoss.xgss.net/picgo/nginx05.jpg?aliyun" alt="nginx05"></p><p>通过”log_format”指令可以指定访问日志都记录哪些内容，以怎样的格式记录这些内容，这样说可能不太容易理解，不如我们先来看一个简单的小示例，示例配置如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>#如果CDN或者代理，可以获取客户端真实IP为‘$clientRealIp’</span></span>
<span class="line"><span>map $http_x_forwarded_for  $clientRealIp {</span></span>
<span class="line"><span>                &quot;&quot;      $remote_addr;</span></span>
<span class="line"><span>                ~^(?P&lt;firstAddr&gt;[0-9\\.]+),?.*$  $firstAddr;</span></span>
<span class="line"><span>   } </span></span>
<span class="line"><span>log_format  main_zdy  &#39;$clientRealIp - $remote_user [$time_local] &quot;$request&quot; $status $body_bytes_sent &quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$request_time&quot;&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>log_format配置指令的默认值就是这个名为”main_zdy”的日志格式，而在站点日志中 ‘access_log /data/wwwroot/log/www.nginx01.com-access.log main_zdy;’ 则日志格式与之匹配</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>$remote_addr 变量：记录了客户端的IP地址（普通情况下）。</span></span>
<span class="line"><span>$remote_user 变量：当nginx开启了用户认证功能后，此变量记录了客户端使用了哪个用户进行了认证。</span></span>
<span class="line"><span>$time_local 变量：记录了当前日志条目的时间。</span></span>
<span class="line"><span>$request变量：记录了当前http请求的方法、url和http协议版本。</span></span>
<span class="line"><span>$status变量：记录了当前http请求的响应状态，即响应的状态码，比如200、404等响应码，都记录在此变量中。</span></span>
<span class="line"><span>$body_bytes_sent变量：记录了nginx响应客户端请求时，发送到客户端的字节数，不包含响应头的大小。</span></span>
<span class="line"><span>$http_referer变量：记录了当前请求是从哪个页面过来的，比如你点了A页面中的超链接才产生了这个请求，那么此变量中就记录了A页面的url。</span></span>
<span class="line"><span>$http_user_agent变量：记录了客户端的软件信息，比如，浏览器的名称和版本号。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些变量并非一定会有对应的值，如果变量没有对应的值，那么日志中会使用 “-” 作为默认值进行占位。</p><h2 id="nginx常用变量" tabindex="-1"><a class="header-anchor" href="#nginx常用变量"><span>Nginx常用变量</span></a></h2><p>nginx中都有哪些变量能够使用呢？这些变量又都是什么含义呢？你可以从如下官网链接中找到答案：</p><p>http://nginx.org/en/docs/varindex.html</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$args</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                    #请求中的参数值</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$query_string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            #同 $args</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$arg_NAME</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                #GET请求中NAME的值</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$is_args</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                 #如果请求中有参数，值为&quot;?&quot;，否则为空字符串</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$uri</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                     #请求中的当前URI(不带请求参数，参数位于$args)，可以不同于浏览器传递的$request_uri的值，它可以通过内部重定向，或者使用index指令进行修改，$uri不包含主机名，如&quot;/foo/bar.html&quot;。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$document_uri</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            #同 $uri</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$document_root</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           #当前请求的文档根目录或别名</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$host</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                    #优先级：HTTP请求行的主机名&gt;&quot;HOST&quot;请求头字段&gt;符合请求的服务器名.请求中的主机头字段，如果请求中的主机头不可用，则为服务器处理请求的服务器名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$hostname</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                #主机名</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$https</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                   #如果开启了SSL安全模式，值为&quot;on&quot;，否则为空字符串。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$binary_remote_addr</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      #客户端地址的二进制形式，固定长度为4个字节</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$body_bytes_sent</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         #传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的&quot;%B&quot;参数保持兼容</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$bytes_sent</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">              #传输给客户端的字节数</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$connection</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">              #TCP连接的序列号</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$connection_requests</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     #TCP连接当前的请求数量</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$content_length</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          #&quot;Content-Length&quot; 请求头字段</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$content_type</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            #&quot;Content-Type&quot; 请求头字段</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$cookie_name</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             #cookie名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$limit_rate</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">              #用于设置响应的速度限制</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$msec</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                    #当前的Unix时间戳</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$nginx_version</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           #nginx版本</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pid</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                     #工作进程的PID</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$pipe</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                    #如果请求来自管道通信，值为&quot;p&quot;，否则为&quot;.&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$proxy_protocol_addr</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     #获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$realpath_root</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           #当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$remote_addr</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             #客户端地址</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$remote_port</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             #客户端端口</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$remote_user</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             #用于HTTP基础认证服务的用户名</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                 #代表客户端的请求地址</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_body</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            #客户端的请求主体：此变量可在location中使用，将请求主体通过proxy_pass，fastcgi_pass，uwsgi_pass和scgi_pass传递给下一级的代理服务器</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_body_file</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">       #将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要之一开启此功能，需要设置client_body_in_file_only。如果将次文件传 递给后端的代理服务器，需要禁用request body，即设置proxy_pass_request_body off，fastcgi_pass_request_body off，uwsgi_pass_request_body off，or scgi_pass_request_body off</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_completion</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      #如果请求成功，值为&quot;OK&quot;，如果请求未完成或者请求不是一个范围请求的最后一部分，则为空</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_filename</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        #当前连接请求的文件路径，由root或alias指令与URI请求生成</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_length</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          #请求的长度 (包括请求的地址，http请求头和请求主体)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_method</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          #HTTP请求方法，通常为&quot;GET&quot;或&quot;POST&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_time</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            #处理客户端请求使用的时间,单位为秒，精度毫秒； 从读入客户端的第一个字节开始，直到把最后一个字符发送给客户端后进行日志写入为止。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$request_uri</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             #这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看$uri更改或重写URI，不包含主机名，例如：&quot;/cnphp/test.php?arg=freemouse&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$scheme</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                  #请求使用的Web协议，&quot;http&quot; 或 &quot;https&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$server_addr</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             #服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$server_name</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             #服务器名</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$server_port</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             #服务器端口</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$server_protocol</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         #服务器的HTTP版本，通常为 &quot;HTTP/1.0&quot; 或 &quot;HTTP/1.1&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$status</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                  #HTTP响应代码</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$time_iso8601</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            #服务器时间的ISO 8610格式</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$time_local</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">              #服务器时间（LOG Format 格式）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$cookie_NAME</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             #客户端请求Header头中的cookie变量，前缀&quot;$cookie_&quot;加上cookie名称的变量，该变量的值即为cookie名称的值</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$http_NAME</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               #匹配任意请求头字段；变量名中的后半部分NAME可以替换成任意请求头字段，如在配置文件中需要获取http请求头：&quot;Accept-Language&quot;，$http_accept_language即可</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$http_cookie</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$http_host</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               #请求地址，即浏览器中你输入的地址（IP或域名）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$http_referer</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            #url跳转来源,用来记录从那个页面链接访问过来的</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$http_user_agent</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         #用户终端浏览器等信息</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$http_x_forwarded_for</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sent_http_NAME</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          #可以设置任意http响应头字段；变量名中的后半部分NAME可以替换成任意响应头字段，如需要设置响应头Content-length，$sent_http_content_length即可</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sent_http_cache_control</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sent_http_connection</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sent_http_content_type</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sent_http_keep_alive</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sent_http_last_modified</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sent_http_location</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$sent_http_transfer_encoding</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nginx日志切割" tabindex="-1"><a class="header-anchor" href="#nginx日志切割"><span>Nginx日志切割</span></a></h2><p>随着WEB站点访问增多，天长日久access.log文件就会越来越大，对于我们的管理工作来说，这是不利的，首先，当我们打开一个非常大的日志文件时，就会比较慢，而且，从一个非常大的日志中找到某个时间段的日志也会比较慢，所以，我们最好将日志按天分割开。</p><p>比如，每天晚上0点将昨天的日志mv到新的目录，同时生成一个新的日志文件，这样每天就会生成一个日志文件，而不是将所有日志都写入到同一个日志文件中。</p><h3 id="切割日志shell脚本-参考" tabindex="-1"><a class="header-anchor" href="#切割日志shell脚本-参考"><span>切割日志shell脚本（参考）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/conf/shell/cut_log_nginx.sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">填写以下：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#添加自动执行，安装方法</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#vi /etc/crontab</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#输入：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#00 00 * * * root /data/conf/shell/cut_log_nginx.sh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">###docker的名字</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Nginx_Name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;nginx&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置日志保存的时间，天</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">save_days</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">60</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#set the path to nginx log files</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">log_files_path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/data/wwwroot/log/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">nginx_old_log_path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/data/wwwroot/nginx_old_log/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">log_files_dir</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">nginx_old_log_path</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">date</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;yesterday&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +&quot;%Y&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">date</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;yesterday&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +&quot;%m&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">log_files_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/bin/ls</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $log_files_path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $log_files_dir</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#移动日志</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> log_name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $log_files_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        mv</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">log_files_path</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">log_name</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">log_files_dir</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">log_name</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">date</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;yesterday&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +&quot;%Y%m%d&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.log</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#删除过期日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $nginx_old_log_path</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -mtime</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$save_days</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {}</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#重启nginx服务</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># systemctl reload $Nginx_Name</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#或者</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># nginx -s reload</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/data/nginx/sbin/nginx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可执行，并且加入定时任务</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># chmod +x /data/conf/shell/cut_log_nginx.sh</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#vi /etc/crontab</span></span>
<span class="line"><span>#输入：</span></span>
<span class="line"><span>00 00 * * * root /data/conf/shell/cut_log_nginx.sh</span></span>
<span class="line"><span># systemctl restart crond</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样每天的地址都会切割到 /data/wwwroot/nginx_old_log/ 目录中，并且只保留60天的日志。</p>`,24)]))}const d=s(t,[["render",e]]),r=JSON.parse('{"path":"/article/ianxlt5y/","title":"Nginx从入门到放弃05-访问日志与日志切割","lang":"en-US","frontmatter":{"title":"Nginx从入门到放弃05-访问日志与日志切割","createTime":"2025/05/27 17:51:17","permalink":"/article/ianxlt5y/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":6.99,"words":2098},"filePathRelative":"nginx/Nginx从入门到放弃05-访问日志与日志切割.md"}');export{d as comp,r as data};
