import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as i}from"./app-BiQR_lPj.js";const l={};function p(d,s){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="使用mydumper备份和恢复mysql数据库" tabindex="-1"><a class="header-anchor" href="#使用mydumper备份和恢复mysql数据库"><span>使用Mydumper备份和恢复mysql数据库</span></a></h1><p>Mydumper 是一个高性能 MySQL 数据库备份工具，设计用于解决 mysqldump 在备份大型数据库时遇到的性能瓶颈问题。与 mysqldump 相比的优势</p><h2 id="优势" tabindex="-1"><a class="header-anchor" href="#优势"><span>优势</span></a></h2><h3 id="并发备份" tabindex="-1"><a class="header-anchor" href="#并发备份"><span>并发备份</span></a></h3><p>Mydumper 可以利用多个线程并行导出数据库，大幅缩短备份时间，特别是在多核 CPU 环境下。</p><h3 id="最小锁定时间" tabindex="-1"><a class="header-anchor" href="#最小锁定时间"><span>最小锁定时间</span></a></h3><p>Mydumper 设计用来尽可能减少对数据库的锁定时间，通过非阻塞备份来最小化对生产环境的影响。</p><h3 id="导出-导入操作的优化" tabindex="-1"><a class="header-anchor" href="#导出-导入操作的优化"><span>导出/导入操作的优化</span></a></h3><p>Mydumper 对输出的数据文件进行了优化，便于高效导入。与之配合使用的 Myloader 工具可以并发导入这些数据文件，大幅度缩短数据恢复时间。</p><h3 id="灵活的备份选项" tabindex="-1"><a class="header-anchor" href="#灵活的备份选项"><span>灵活的备份选项</span></a></h3><p>Mydumper 允许用户灵活选择备份哪些数据库或表，支持各种过滤选项，满足不同的备份需求。</p><h3 id="更好的压缩和分块" tabindex="-1"><a class="header-anchor" href="#更好的压缩和分块"><span>更好的压缩和分块</span></a></h3><p>Mydumper 支持输出文件的压缩，也支持按文件大小对输出文件进行分块，便于管理和传输。</p><h3 id="易于使用" tabindex="-1"><a class="header-anchor" href="#易于使用"><span>易于使用</span></a></h3><p>相比 mysqldump，Mydumper 提供了更多易于使用的选项和更好的性能，使其成为大型数据库环境下的备选备份工具。</p><p>Mydumper 如此强大，使其在需要快速、高效备份 MySQL 数据库的场景中，成为了首选工具。尤其适合于大规模数据库的备份和恢复工作。</p><h2 id="mydumper主要特性" tabindex="-1"><a class="header-anchor" href="#mydumper主要特性"><span>Mydumper主要特性</span></a></h2><ol><li>轻量级C语言写的</li><li>多线程备份，备份后会生成多个备份文件</li><li>事务性和非事务性表一致的快照(适用于0.2.2以上版本)</li><li>快速的文件压缩</li><li>支持导出binlog</li><li>多线程恢复(适用于0.2.1以上版本)</li><li>以守护进程的工作方式，定时快照和连续二进制日志(适用于0.5.0以上版本)</li><li>开源 (GNU GPLv3)</li></ol><p>开源地址： https://github.com/mydumper/mydumper</p><h2 id="rpm安装-推荐使用" tabindex="-1"><a class="header-anchor" href="#rpm安装-推荐使用"><span>RPM安装（推荐使用）</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>https://github.com/mydumper/mydumper/releases 下载对应的</span></span>
<span class="line"><span>我这边下载 mydumper-0.19.4-17.el7.x86_64.rpm</span></span>
<span class="line"><span></span></span>
<span class="line"><span>wget http://js.funet8.com/centos_software/mydumper-0.19.4-17.el7.x86_64.rpm</span></span>
<span class="line"><span>yum install -y pcre2 pcre2-devel</span></span>
<span class="line"><span>yum install -y zstd</span></span>
<span class="line"><span>rpm -ivh mydumper-0.19.4-17.el7.x86_64.rpm</span></span>
<span class="line"><span>安装成功</span></span>
<span class="line"><span>mydumper --help</span></span>
<span class="line"><span>myloader --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="源码包安装mydumper" tabindex="-1"><a class="header-anchor" href="#源码包安装mydumper"><span>源码包安装Mydumper</span></a></h2><p>系统： centos7</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># yum -y  install glib2-devel mysql-devel zlib-devel pcre-devel zlib gcc-c++ gcc cmake</span></span>
<span class="line"><span></span></span>
<span class="line"><span># cd /data/software/</span></span>
<span class="line"><span># wget https://launchpad.net/mydumper/0.9/0.9.1/+download/mydumper-0.9.1.tar.gz</span></span>
<span class="line"><span>备份下载：wget http://js.funet8.com/centos_software/mydumper-0.9.1.tar.gz</span></span>
<span class="line"><span># tar zxf mydumper-0.9.1.tar.gz</span></span>
<span class="line"><span># cd mydumper-0.9.1/</span></span>
<span class="line"><span># cmake .</span></span>
<span class="line"><span># make &amp;&amp; make install</span></span>
<span class="line"><span></span></span>
<span class="line"><span>安装完成后生成两个二进制文件mydumper和myloader位于/usr/local/bin目录下</span></span>
<span class="line"><span></span></span>
<span class="line"><span># ls /usr/local/bin/my*</span></span>
<span class="line"><span>/usr/local/bin/mydumper  /usr/local/bin/myloader</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装完成" tabindex="-1"><a class="header-anchor" href="#安装完成"><span>安装完成</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mydumper --help</span></span>
<span class="line"><span>myloader --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>报错：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>解决报错：</span></span>
<span class="line"><span>mydumper --help </span></span>
<span class="line"><span>mydumper: error while loading shared libraries: libmysqlclient.so.20: cannot open shared object file: No such file or directory </span></span>
<span class="line"><span></span></span>
<span class="line"><span>查找到：</span></span>
<span class="line"><span>find /usr -name &quot;libmysqlclient.so*&quot;</span></span>
<span class="line"><span>/usr/lib64/libmysqlclient.so.16</span></span>
<span class="line"><span>/usr/lib64/libmysqlclient.so.18</span></span>
<span class="line"><span>/usr/lib64/libmysqlclient.so.16.0.0</span></span>
<span class="line"><span>/usr/lib64/libmysqlclient.so.18.0.0</span></span>
<span class="line"><span>/usr/lib64/libmysqlclient.so.15</span></span>
<span class="line"><span>/usr/lib64/libmysqlclient.so.15.0.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>但是 mydumper-0.9.1 编译时依赖的是 libmysqlclient.so.20，所以报错。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新编译</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>yum install -y gcc cmake make glib2-devel mysql-devel</span></span>
<span class="line"><span>git clone https://github.com/mydumper/mydumper.git</span></span>
<span class="line"><span>cd mydumper</span></span>
<span class="line"><span>cmake .</span></span>
<span class="line"><span>make</span></span>
<span class="line"><span>make install</span></span>
<span class="line"><span>这样编译出来的 mydumper 就会链接到你本机的 libmysqlclient.so.18，不会再找 .20。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mydumper-参数解释" tabindex="-1"><a class="header-anchor" href="#mydumper-参数解释"><span>mydumper 参数解释</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>-B, --database              要备份的数据库，不指定则备份所有库</span></span>
<span class="line"><span>-T, --tables-list           需要备份的表，名字用逗号隔开</span></span>
<span class="line"><span>-o, --outputdir             备份文件输出的目录</span></span>
<span class="line"><span>-s, --statement-size        生成的insert语句的字节数，默认1000000</span></span>
<span class="line"><span>-r, --rows                  将表按行分块时，指定的块行数，指定这个选项会关闭 --chunk-filesize</span></span>
<span class="line"><span>-F, --chunk-filesize        将表按大小分块时，指定的块大小，单位是 MB</span></span>
<span class="line"><span>-c, --compress              压缩输出文件</span></span>
<span class="line"><span>-e, --build-empty-files     如果表数据是空，还是产生一个空文件（默认无数据则只有表结构文件）</span></span>
<span class="line"><span>-x, --regex                 是同正则表达式匹配 &#39;db.table&#39;</span></span>
<span class="line"><span>-i, --ignore-engines        忽略的存储引擎，用都厚分割</span></span>
<span class="line"><span>-m, --no-schemas            不备份表结构</span></span>
<span class="line"><span>-k, --no-locks              不使用临时共享只读锁，使用这个选项会造成数据不一致</span></span>
<span class="line"><span>--less-locking              减少对InnoDB表的锁施加时间（这种模式的机制下文详解）</span></span>
<span class="line"><span>-l, --long-query-guard      设定阻塞备份的长查询超时时间，单位是秒，默认是60秒（超时后默认mydumper将会退出）</span></span>
<span class="line"><span>--kill-long-queries         杀掉长查询 (不退出)</span></span>
<span class="line"><span>-b, --binlogs               导出binlog</span></span>
<span class="line"><span>-D, --daemon                启用守护进程模式，守护进程模式以某个间隔不间断对数据库进行备份</span></span>
<span class="line"><span>-I, --snapshot-interval     dump快照间隔时间，默认60s，需要在daemon模式下</span></span>
<span class="line"><span>-L, --logfile               使用的日志文件名(mydumper所产生的日志), 默认使用标准输出</span></span>
<span class="line"><span>--tz-utc                    跨时区是使用的选项，不解释了</span></span>
<span class="line"><span>--skip-tz-utc               同上</span></span>
<span class="line"><span>--use-savepoints            使用savepoints来减少采集metadata所造成的锁时间，需要 SUPER 权限</span></span>
<span class="line"><span>--success-on-1146           Not increment error count and Warning instead of Critical in case of table doesn&#39;t exist</span></span>
<span class="line"><span>-h, --host                  连接的主机名</span></span>
<span class="line"><span>-u, --user                  备份所使用的用户</span></span>
<span class="line"><span>-p, --password              密码</span></span>
<span class="line"><span>-P, --port                  端口</span></span>
<span class="line"><span>-S, --socket                使用socket通信时的socket文件</span></span>
<span class="line"><span>-t, --threads               开启的备份线程数，默认是4</span></span>
<span class="line"><span>-C, --compress-protocol     压缩与mysql通信的数据</span></span>
<span class="line"><span>-V, --version               显示版本号</span></span>
<span class="line"><span>-v, --verbose               输出信息模式, 0 = silent, 1 = errors, 2 = warnings, 3 = info, 默认为 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="myloader-参数解释" tabindex="-1"><a class="header-anchor" href="#myloader-参数解释"><span>myloader 参数解释</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>-d, --directory                   备份文件的文件夹</span></span>
<span class="line"><span>-q, --queries-per-transaction     每次事物执行的查询数量，默认是1000</span></span>
<span class="line"><span>-o, --overwrite-tables            如果要恢复的表存在，则先drop掉该表，使用该参数，需要备份时候要备份表结构</span></span>
<span class="line"><span>-B, --database                    需要还原的数据库</span></span>
<span class="line"><span>-e, --enable-binlog               启用还原数据的二进制日志</span></span>
<span class="line"><span>-h, --host                        主机</span></span>
<span class="line"><span>-u, --user                        还原的用户</span></span>
<span class="line"><span>-p, --password                    密码</span></span>
<span class="line"><span>-P, --port                        端口</span></span>
<span class="line"><span>-S, --socket                      socket文件</span></span>
<span class="line"><span>-t, --threads                     还原所使用的线程数，默认是4</span></span>
<span class="line"><span>-C, --compress-protocol           压缩协议</span></span>
<span class="line"><span>-V, --version                     显示版本</span></span>
<span class="line"><span>-v, --verbose                     输出模式, 0 = silent, 1 = errors, 2 = warnings, 3 = info, 默认为2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="备份数据库" tabindex="-1"><a class="header-anchor" href="#备份数据库"><span>备份数据库</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># mkdir -p /data/backup/mysql/</span></span>
<span class="line"><span># mydumper -u root -h 192.168.1.12 -p 123456  -P 61920 -B DBName  -o /data/backup/mysql/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面可以可以看出</p><p>备份所生成的文件 目录中包含一个metadata文件</p><p>记录了备份数据库在备份时间点的二进制日志文件名，日志的写入位置，</p><p>如果是在从库进行备份，还会记录备份时同步至主库的二进制日志文件及写入位置 每个表有两个备份文件：</p><p>database.table-schema.sql 表结构文件</p><p>database.table.sql 表数据文件</p><h2 id="恢复数据库" tabindex="-1"><a class="header-anchor" href="#恢复数据库"><span>恢复数据库</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># 删除 beta 库</span></span>
<span class="line"><span>root@localhost [(none)]&gt;drop database DBName;</span></span>
<span class="line"><span># myloader 恢复</span></span>
<span class="line"><span># myloader -u root -p 123456 -h 192.168.1.12 -P 61920 -B DBName -d /data/backup/mysql/</span></span>
<span class="line"><span># 验证</span></span>
<span class="line"><span>root@localhost [(none)]&gt;show databases;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="恢复数据库报错" tabindex="-1"><a class="header-anchor" href="#恢复数据库报错"><span>恢复数据库报错</span></a></h2><p>从mysql8恢复到MariaDB10.2.9的报错</p><p>原因： 10.2.9-MariaDB 这个版本的 字符集排序规则列表里并没有 MySQL 8.0 才引入的utf8mb4_0900_ai_ci（以及其他 utf8mb4_0900_* 系列）。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>myloader -u root -p 123456 -h 192.168.1.12 -P 61925 -B btwaf -d /data/backup/mysql/ </span></span>
<span class="line"><span>** (myloader:13121): CRITICAL **: 11:15:02.105: Error restoring btwaf.area_intercept from file btwaf.area_intercept-schema.sql: Unknown collation: &#39;utf8mb4_0900_ai_ci&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>解决方法：</p><p>批量替换 /data/backup/mysql/ 目录里所有 SQL 文件里的 utf8mb4_0900_ai_ci → utf8mb4_general_ci，这样 MariaDB 10.2.9 就能导入了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>grep -rl &#39;utf8mb4_0900_ai_ci&#39; /data/backup/mysql/ | xargs sed -i &#39;s/utf8mb4_0900_ai_ci/utf8mb4_general_ci/g&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>再次导入成功：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>myloader -u root -p 123456 -h 192.168.1.12 -P 61925 -B btwaf -d /data/backup/mysql/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://imgoss.xgss.net/picgo-tx2025/image-20250815112746008.png?tx" alt="image-20250815112746008"></p><h2 id="恢复时间验证" tabindex="-1"><a class="header-anchor" href="#恢复时间验证"><span>恢复时间验证</span></a></h2><p>服务器硬件配置</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>备份数据库 </span></span>
<span class="line"><span>mydumper -u root -h 192.168.1.12 -p 123456  -P 61920 -B DBName  -o /data/backup/mysql/waf-7477</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>恢复数据库：</span></span>
<span class="line"><span>myloader -u root -p 123456 -h 192.168.1.8 -P 61920 -B DBName -d /data/backup/mysql/waf-7477</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mysqldump</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h2>`,58)]))}const m=a(l,[["render",p]]),t=JSON.parse('{"path":"/mysql/%E4%BD%BF%E7%94%A8Mydumper%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8Dmysql%E6%95%B0%E6%8D%AE%E5%BA%93.html","title":"使用Mydumper备份和恢复mysql数据库","lang":"en-US","frontmatter":{},"git":{"createdTime":1749111496000,"updatedTime":1760001321000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":4,"url":"https://github.com/star"}]},"readingTime":{"minutes":6.02,"words":1806},"filePathRelative":"mysql/使用Mydumper备份和恢复mysql数据库.md"}');export{m as comp,t as data};
