import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as i}from"./app-BiQR_lPj.js";const l={};function r(d,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="云服务器搭建自己的ngrok服务-实现内网穿透" tabindex="-1"><a class="header-anchor" href="#云服务器搭建自己的ngrok服务-实现内网穿透"><span>云服务器搭建自己的ngrok服务-实现内网穿透</span></a></h1><p>本文介绍ngrok是什么以及如何通过开源ngrok自建服务搭建，实现内网穿透。</p><h2 id="自建ngork的优点和缺点" tabindex="-1"><a class="header-anchor" href="#自建ngork的优点和缺点"><span>自建ngork的优点和缺点</span></a></h2><p>**优点：**限制少，可玩性高，安全性高，完全可以删除花生壳、向日葵、TeamViewer等软件了。</p><p>**缺点：**有一定的技术门槛、需要购买云服务器和域名，如果服务器在国内域名需要备案。</p><p>如果不自建内网如果没有限制可以做用现成的技术，地址：http://www.ngrok.cc/ 还有 https://www.ngrok.com 等，注册账号即可。</p><h2 id="ngrok的应用场景" tabindex="-1"><a class="header-anchor" href="#ngrok的应用场景"><span>ngrok的应用场景</span></a></h2><p>满足没有公网IP环境下，远程访问各种局域网应用或设备，</p><p>星锅用的最多就是</p><p>1.把家里的NAS通过ngrok共享到公网，让我无论在家还是在外面都能实现文件无缝衔接。</p><p>2.远程办公： 通过ngrok把公司的办公电脑3389远程连接的端口暴露到公网，再通过远程桌面到办公电脑上（内网的Linux服务器也可以）。</p><p>3.在家的PC上做了一个小站点，想让异地的朋友看时，可以将这个站点暴露给他访问（比如我在做本地开发微信时）。</p><p>如企业内网的OA/ERP/CRM系统、NAS私有云、视频监控、FTP/MAC/SVN服务器、个人局域网搭建的网站、博客、进行开发调试等，均可使用ngrok内网穿透。</p><h2 id="什么是内网穿透" tabindex="-1"><a class="header-anchor" href="#什么是内网穿透"><span>什么是内网穿透</span></a></h2><p>内网穿透，也即 NAT 穿透，进行 NAT 穿透是为了使具有某一个特定源 IP 地址和源端口号的数据包不被 NAT 设备屏蔽而正确路由到内网主机。下面就相互通信的主机在网络中与 NAT 设备的相对位置介绍内网穿透方法。 总结一句话就是本地运行的项目（没有公网IP的项目），如果不使用内网穿透，只能本机访问。用到了内网穿透，就会给一个公网的ip代替本地ip,这样别人就可以访问到你的本地项目啦。</p><p><img src="https://imgoss.xgss.net/picgo/whatisngrok2.jpg?aliyun" alt="whatisngrok2"></p><h2 id="什么叫ngrok" tabindex="-1"><a class="header-anchor" href="#什么叫ngrok"><span>什么叫ngrok？</span></a></h2><p>ngrok 是一个反向代理，通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放。</p><p>开源地址：https://github.com/inconshreveable/ngrok.git 和其类似的功能还有开源的frp： https://github.com/fatedier/frp</p><p><img src="https://imgoss.xgss.net/picgo/whatisngrok.jpg?aliyun" alt="whatisngrok"></p><h2 id="自建ngrok准备" tabindex="-1"><a class="header-anchor" href="#自建ngrok准备"><span>自建ngrok准备</span></a></h2><p>1.域名</p><p>2.服务器（服务器如果在国内需要备案），推荐使用轻量云服务器。</p><p><a href="http://d.xgss.net/2" target="_blank" rel="noopener noreferrer">阿里云服务器优惠</a> http://d.xgss.net/2 | <a href="http://d.xgss.net/3" target="_blank" rel="noopener noreferrer">腾讯云服务器优惠</a> http://d.xgss.net/3</p><p>3.云服务器Linux(centos7)、Nginx、DockerDocker镜像，备案域名</p><h2 id="域名解析" tabindex="-1"><a class="header-anchor" href="#域名解析"><span>域名解析</span></a></h2><p>选择二级域名域名 ngrok.xgss.net 三级域名使用泛解析 *.ngrok.xgss.net，为了后面指定域名比如 nas.ngrok.xgss.net就不用再解析了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ngrok.xgss.net  	A解析到    云服务器公网IP</span></span>
<span class="line"><span>*.ngrok.xgss.net	A解析到	云服务器公网IP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://imgoss.xgss.net/picgo/image-20220308164840242.png?aliyun" alt="image-20220308164840242"></p><p><img src="https://imgoss.xgss.net/picgo/image-20220308164932628.png?aliyun" alt="image-20220308164932628"></p><h1 id="安装ngrok服务端" tabindex="-1"><a class="header-anchor" href="#安装ngrok服务端"><span>安装Ngrok服务端</span></a></h1><p>通过远程ssh连接服务器。</p><p><strong>下载常用依赖库</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>yum -y install zlib-devel openssl-devel perl hg cpio expat-devel gettext-devel curl curl-devel perl-ExtUtils-MakeMaker hg wget gcc gcc-c++</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>安装go和git</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>yum -y install go git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>要注意git版本必须大于1.7.9,go版本必须大于1.4,否则可能有意想不到的错误</p><h2 id="开始安装ngrok" tabindex="-1"><a class="header-anchor" href="#开始安装ngrok"><span>开始安装ngrok</span></a></h2><p>个人习惯安装到 /data/ 目录下 如果你想安装到其他目录 则进入你想安装的目录</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mkdir /data/</span></span>
<span class="line"><span>cd /data/</span></span>
<span class="line"><span>git clone https://github.com/inconshreveable/ngrok.git ngrok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>#进入ngrok目录,后面操作都是在ngrok目录下完成!</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>cd /data/ngrok</span></span>
<span class="line"><span>#生成并替换源码里默认的证书，注意域名要修改为你自己的，这里是一个虚拟的测试域名</span></span>
<span class="line"><span>NGROK_DOMAIN=&quot;ngrok.xgss.net&quot;</span></span>
<span class="line"><span>#测试一下有没有设置成功</span></span>
<span class="line"><span>echo $NGROK_DOMAIN #输出ngrok.xgss.net表示成功</span></span>
<span class="line"><span>openssl genrsa -out rootCA.key 2048</span></span>
<span class="line"><span>openssl req -x509 -new -nodes -key rootCA.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -days 5000 -out rootCA.pem</span></span>
<span class="line"><span>openssl genrsa -out device.key 2048</span></span>
<span class="line"><span>openssl req -new -key device.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -out device.csr</span></span>
<span class="line"><span>openssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后会在 ngrok 目录下生成 root,device 等六个文件。 然后需要拷贝到配置的目录中，在编译的时候会使用这些文件。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>cp -r rootCA.pem assets/client/tls/ngrokroot.crt</span></span>
<span class="line"><span>cp -r device.crt assets/server/tls/snakeoil.crt</span></span>
<span class="line"><span>cp -r device.key assets/server/tls/snakeoil.key</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这个地方，证书生成已经复制的准备<a href="https://www.funet8.com/tag/jobs" target="_blank" rel="noopener noreferrer">工作</a>就已经完成了。</p><h3 id="生成服务器的ngrokd" tabindex="-1"><a class="header-anchor" href="#生成服务器的ngrokd"><span>生成服务器的ngrokd</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>make release-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样就会在bin目录下生成ngrokd 这个文件,就是我们ngrok的服务器程序</p><h3 id="编译客户端ngrok-不同系统不同的命令如下" tabindex="-1"><a class="header-anchor" href="#编译客户端ngrok-不同系统不同的命令如下"><span>编译客户端ngrok(不同系统不同的命令如下)</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>32位linux客户端: GOOS=linux GOARCH=386 make release-client</span></span>
<span class="line"><span>64位linux客户端: GOOS=linux GOARCH=amd64 make release-client</span></span>
<span class="line"><span>32位windows客户端: GOOS=windows GOARCH=386 make release-client</span></span>
<span class="line"><span>64位windows客户端: GOOS=windows GOARCH=amd64 make release-client</span></span>
<span class="line"><span>32位mac平台客户端:GOOS=darwin GOARCH=386 make release-client</span></span>
<span class="line"><span>64位mac平台客户端:GOOS=darwin GOARCH=amd64 make release-client</span></span>
<span class="line"><span>ARM平台linux客户端: GOOS=linux GOARCH=arm make release-client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我这里是64位linux和64位windows客户端编译</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>GOOS=linux GOARCH=amd64 make release-client</span></span>
<span class="line"><span>GOOS=windows GOARCH=amd64 make release-client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>依次执行这2个命令之后就会在bin目录里面生成所有的客户端文件，客户端平台是文件夹的名字，客户端放在对应的目录下，当前Linux平台客户端就直接在bin目录下一个ngrok的程序</p><h3 id="配置启动服务器" tabindex="-1"><a class="header-anchor" href="#配置启动服务器"><span>配置启动服务器</span></a></h3><ul><li>httpAddr 是访问普通的http使用的端口号，用后面用 子域名.ngrok.xgss.net 来访问服务</li><li>httpsAddr 是访问的https使用的端口号,同上，只不过是需要https的服务访问才用这个端口(一般用不上)</li><li>tunnelAddr 是ngrok通道的端口号，这个端口是Ngrok用来通信的，所以这个端口在服务器上和客户端上设置必须要对应才可以正常的链接，默认端口是4443</li></ul><p>完整命令:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>bin/ngrokd -domain=&quot;$NGROK_DOMAIN&quot; -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:443&quot; -tunnelAddr=&quot;:4443&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我使用的</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>bin/ngrokd -domain=&quot;$NGROK_DOMAIN&quot; -httpAddr=&quot;:80&quot;</span></span>
<span class="line"><span>nohup /data/ngrok/bin/ngrokd -domain=&quot;ngrok.xgss.net&quot; -httpAddr=&quot;:8000&quot; -httpsAddr=&quot;:443&quot; -tunnelAddr=&quot;:4443&quot; &amp;</span></span>
<span class="line"><span>不输出 nohup.out</span></span>
<span class="line"><span>nohup /data/ngrok/bin/ngrokd -domain=&quot;ngrok.xgss.net&quot; -httpAddr=&quot;:8000&quot; -httpsAddr=&quot;:443&quot; -tunnelAddr=&quot;:4443&quot; &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看端口情况</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>netstat -tunpl |grep ngrokd</span></span>
<span class="line"><span>tcp        0      0 0.0.0.0:8000                0.0.0.0:*                   LISTEN      28558/ngrokd</span></span>
<span class="line"><span>tcp        0      0 0.0.0.0:4443                0.0.0.0:*                   LISTEN      28558/ngrokd</span></span>
<span class="line"><span>tcp        0      0 0.0.0.0:443                 0.0.0.0:*                   LISTEN      28558/ngrokd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中NGROK_DOMAIN对应的就是一开始设置过的域名地址。</p><p>要注意我这里使用的是8000端口。</p><h1 id="安装ngrok客户端" tabindex="-1"><a class="header-anchor" href="#安装ngrok客户端"><span>安装ngrok客户端</span></a></h1><p>下载客户端</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ls /data/ngrok/bin</span></span>
<span class="line"><span>darwin_386  darwin_amd64  go-bindata  linux_386  linux_arm  ngrok  ngrokd  windows_386  windows_amd64</span></span>
<span class="line"><span></span></span>
<span class="line"><span>其中 /data/ngrok/bin/ngrok 是linux的客户端</span></span>
<span class="line"><span>其中 windows_amd64 是windows的客户端</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="linux客户端配置" tabindex="-1"><a class="header-anchor" href="#linux客户端配置"><span>linux客户端配置</span></a></h2><p>下载客户端：文件 /data/ngrok/bin/ngrok 在192.168.1.6客户端上操作： 新建配置文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>mkdir /data/ngrok</span></span>
<span class="line"><span>vi /data/ngrok/ngrok_8000.cfg</span></span>
<span class="line"><span>填写一下内容</span></span>
<span class="line"><span></span></span>
<span class="line"><span>server_addr: &quot;ngrok.xgss.net:4443&quot;</span></span>
<span class="line"><span>trust_host_root_certs: false</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vi /data/ngrok/ngrok_8082.cfg</span></span>
<span class="line"><span>填写一下内容</span></span>
<span class="line"><span>server_addr: &quot;ngrok.xgss.net:4443&quot;</span></span>
<span class="line"><span>trust_host_root_certs: false</span></span>
<span class="line"><span>将在服务器中生成的ngrok文件上传目录中/data/ngrok/</span></span>
<span class="line"><span>chmod +x /data/ngrok/ngrok</span></span>
<span class="line"><span>nohup /data/ngrok/ngrok -log=/data/ngrok/ngrok_8000.log -subdomain=seafiles -config=&quot;/data/ngrok/ngrok_8000.cfg&quot; 8000 &amp;</span></span>
<span class="line"><span>nohup /data/ngrok/ngrok -log=/data/ngrok/ngrok_8082.log -subdomain=down -config=&quot;/data/ngrok/ngrok_8082.cfg&quot; 8082 &amp;</span></span>
<span class="line"><span>netstat -tunpl |grep ngrok</span></span>
<span class="line"><span>tcp        0      0 127.0.0.1:4040          0.0.0.0:*               LISTEN      20609/ngrok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>日志： -log=/data/ngrok/ngrok_8000.log 是记录ngrok的日志，如果前期调试的时候加上这个参数，如果不能访问就可以查看到底是什么问题 子域名： -subdomain=seafiles 是定义访问的时候的子域名，现在访问 <a href="http://seafiles.ngrok.xgss.net" target="_blank" rel="noopener noreferrer">seafiles.ngrok.xgss.net</a> 就可以访问到这一台机器上8000端口的服务</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ngrok</span></span>
<span class="line"><span>Tunnel Status online</span></span>
<span class="line"><span>Version 1.7/1.7</span></span>
<span class="line"><span>Forwarding https://test.ngrok.xgss.net -&gt; 127.0.0.1:80</span></span>
<span class="line"><span>Forwarding http://test.ngrok.xgss.net -&gt; 127.0.0.1:80</span></span>
<span class="line"><span>Web Interface 127.0.0.1:4040</span></span>
<span class="line"><span>Conn 0</span></span>
<span class="line"><span>Avg Conn Time 0.00ms</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这里不出意外的话就会启动成功了,访问test.ngrok.xgss.net的时候就是你本地的ip了.你可以通过apache或nginx配置test.ngrok.xgss.net域名指定你的目录开始使用。</p><h2 id="windows客户端配置" tabindex="-1"><a class="header-anchor" href="#windows客户端配置"><span>windows客户端配置</span></a></h2><p>在D盘新建一个目录 ngrok，如图有四个文件功能分别是</p><p>add.bat是将start.bat添加到开机启动项，ngrok.cfg是端口的配置，ngrok.exe是服务端下载的文件，start.bat启动ngrok</p><p><img src="https://imgoss.xgss.net/picgo/image-20220308171141389.png?aliyun" alt="image-20220308171141389"></p><h3 id="add-bat内容" tabindex="-1"><a class="header-anchor" href="#add-bat内容"><span>add.bat内容</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>reg add HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /v lin /t REG_SZ /d D:\\ngrok\\start.bat /f</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="ngrok-cfg的内容" tabindex="-1"><a class="header-anchor" href="#ngrok-cfg的内容"><span>ngrok.cfg的内容</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>server_addr: &quot;ngrok.xgss.net:4443&quot;</span></span>
<span class="line"><span>trust_host_root_certs: false</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tunnels:</span></span>
<span class="line"><span>    mstsc:</span></span>
<span class="line"><span>        remote_port: 3378</span></span>
<span class="line"><span>        proto:</span></span>
<span class="line"><span>         tcp: &quot;127.0.0.1:3389&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>start.bat的内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>D:</span></span>
<span class="line"><span>cd D:\\ngrok</span></span>
<span class="line"><span>ngrok -config=ngrok.cfg start mstsc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>双击start.bat</p><p><img src="https://imgoss.xgss.net/picgo/image-20220308171620506.png?aliyun" alt="image-20220308171620506"></p><p>测试用手机4G网络远程连接本机</p><p>地址： ngrok.xgss.net:3378</p><p>可以远程连接即可。</p>`,87)]))}const o=n(l,[["render",r]]),c=JSON.parse('{"path":"/article/mz7seimj/","title":"云服务器搭建自己的ngrok服务-实现内网穿透","lang":"en-US","frontmatter":{"title":"云服务器搭建自己的ngrok服务-实现内网穿透","createTime":"2025/05/27 17:51:17","permalink":"/article/mz7seimj/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":7.08,"words":2123},"filePathRelative":"kaiyuan/Open-Source-Software/云服务器搭建自己的ngrok服务-实现内网穿透.md"}');export{o as comp,c as data};
