import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as i}from"./app-BiQR_lPj.js";const l={};function p(r,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="开源sql审核查询平台archery-基于docker安装" tabindex="-1"><a class="header-anchor" href="#开源sql审核查询平台archery-基于docker安装"><span>开源SQL审核查询平台Archery-基于docker安装</span></a></h1><h1 id="一、archery产品介绍" tabindex="-1"><a class="header-anchor" href="#一、archery产品介绍"><span>一、Archery产品介绍</span></a></h1><p>在技术团队内部进行有效的 SQL 管理并不容易，如何进行数据库的统一管理，和线上 SQL 操作的统一审核，变得尤为重要。Archery，这个开源的 SQL 审核查询平台，或许能为 SQL 审核工作带来不小的效率提升。</p><p>一条高质量的 SQL 语句能使整个服务加速好几倍，而一条有问题的 SQL 则可能会引发灾难，造成严重后果，因此，数据库管理人员的工作就十分重要了，他们掌握着千百万数据的命运。</p><p>简介</p><p>Archery，是 hhyo 在 Github 上开源的 SQL 审核查询平台，项目位于 https://github.com/hhyo/Archery，同时也在 Gitee 上开源，位于 https://gitee.com/rtttte/Archery</p><h1 id="二、基于docker搭建archery" tabindex="-1"><a class="header-anchor" href="#二、基于docker搭建archery"><span>二、基于docker搭建Archery</span></a></h1><h2 id="_1-服务器环境介绍" tabindex="-1"><a class="header-anchor" href="#_1-服务器环境介绍"><span>1.服务器环境介绍</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>服务器：centos7 </span></span>
<span class="line"><span>IP: 192.168.1.12</span></span>
<span class="line"><span>4C-8G-4T</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>本文主要参考：https://archerydms.com/installation/docker/</p><h2 id="_2-安装docker" tabindex="-1"><a class="header-anchor" href="#_2-安装docker"><span>2.安装docker</span></a></h2><p>如果安装了可以跳过</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>wget https://gitee.com/funet8/centos6_LANP_dockerfile/raw/master/shell/CentOS6_7_intall_docker.sh</span></span>
<span class="line"><span>sh CentOS6_7_intall_docker.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-安装docker-compose" tabindex="-1"><a class="header-anchor" href="#_3-安装docker-compose"><span>3.安装docker-compose</span></a></h2><p>如果安装了可以跳过</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span></span>
<span class="line"><span>sudo chmod +x /usr/local/bin/docker-compose</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/usr/local/bin/docker-compose -v</span></span>
<span class="line"><span>docker-compose version 1.24.1, build 4667896b</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://archerydms.com/installation/docker/" target="_blank" rel="noopener noreferrer">docker部署</a> https://archerydms.com/installation/docker/ 下载了 Archery-1.7.13 解压.</p><p>下载并且解压</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>wget https://github.com/hhyo/Archery/archive/v1.7.13.tar.gz</span></span>
<span class="line"><span>tar -zxvf v1.7.13.tar.gz</span></span>
<span class="line"><span>cd Archery-1.7.13/src/docker-compose/</span></span>
<span class="line"><span>ls</span></span>
<span class="line"><span>archery  docker-compose.yml  inception  mysql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-安装并且docker启动" tabindex="-1"><a class="header-anchor" href="#_4-安装并且docker启动"><span>4.安装并且docker启动</span></a></h2><p>如果有端口占用，需要修改 docker-compose.yml 里的文件端口，但是需要修改配置，宿主机最好不要占用这些端口</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># 启动</span></span>
<span class="line"><span>docker-compose -f docker-compose.yml up -d</span></span>
<span class="line"><span></span></span>
<span class="line"><span>生成了五个docker实例：redis inception archery goinception mysql</span></span>
<span class="line"><span> </span></span>
<span class="line"><span># 表结构初始化</span></span>
<span class="line"><span>docker exec -ti archery /bin/bash</span></span>
<span class="line"><span>cd /opt/archery</span></span>
<span class="line"><span>source /opt/venv4archery/bin/activate</span></span>
<span class="line"><span>python3 manage.py makemigrations sql  </span></span>
<span class="line"><span>python3 manage.py migrate </span></span>
<span class="line"><span></span></span>
<span class="line"><span># 数据初始化</span></span>
<span class="line"><span>python3 manage.py dbshell&lt;sql/fixtures/auth_group.sql</span></span>
<span class="line"><span>python3 manage.py dbshell&lt;src/init_sql/mysql_slow_query_review.sql</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 创建管理用户</span></span>
<span class="line"><span>python3 manage.py createsuperuser</span></span>
<span class="line"><span></span></span>
<span class="line"><span># python3 manage.py createsuperuser</span></span>
<span class="line"><span>用户名: admin</span></span>
<span class="line"><span>电子邮件地址: star@xxxxxx.com</span></span>
<span class="line"><span>Password: </span></span>
<span class="line"><span>Password (again): </span></span>
<span class="line"><span>Superuser created successfully.</span></span>
<span class="line"><span># exit</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 重启</span></span>
<span class="line"><span>docker restart archery</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 日志查看和问题排查</span></span>
<span class="line"><span>docker logs archery -f --tail=50</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>redis 端口：6379</p><p>mysql端口：3306</p><p>inception端口：6669</p><p>goinception端口：4000</p><p>archery端口：9123</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># docker ps</span></span>
<span class="line"><span>CONTAINER ID        IMAGE                                          COMMAND                  CREATED             STATUS              PORTS                                                                              NAMES</span></span>
<span class="line"><span>e961c33a0726        redis:5                                        &quot;docker-entrypoint...&quot;   4 minutes ago       Up 3 minutes        6379/tcp                                                                           redis</span></span>
<span class="line"><span>dec2f8e330b7        hhyo/archery:1.7.13                            &quot;dockerize -wait t...&quot;   4 minutes ago       Up 3 minutes        0.0.0.0:9123-&gt;9123/tcp                                                             archery</span></span>
<span class="line"><span>ccaca4c8d420        mysql:5.7                                      &quot;docker-entrypoint...&quot;   4 minutes ago       Up 3 minutes        0.0.0.0:3306-&gt;3306/tcp, 33060/tcp                                                  mysql</span></span>
<span class="line"><span>5a7fc2e52484        hanchuanchuan/goinception                      &quot;/usr/local/bin/du...&quot;   4 minutes ago       Up 3 minutes        4000/tcp                                                                           goinception</span></span>
<span class="line"><span>16ef27ac1cee        hhyo/inception                                 &quot;/bin/sh -c &#39;nohup...&quot;   4 minutes ago       Up 3 minutes        6669/tcp                                                                           inception</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="三、基本操作" tabindex="-1"><a class="header-anchor" href="#三、基本操作"><span>三、基本操作</span></a></h1><h2 id="关闭docker服务" tabindex="-1"><a class="header-anchor" href="#关闭docker服务"><span>关闭docker服务</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker stop redis</span></span>
<span class="line"><span>docker stop inception</span></span>
<span class="line"><span>docker stop archery</span></span>
<span class="line"><span>docker stop goinception</span></span>
<span class="line"><span>docker stop mysql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除docker容器-谨慎操作" tabindex="-1"><a class="header-anchor" href="#删除docker容器-谨慎操作"><span>删除docker容器（谨慎操作）</span></a></h2><p>删除之后数据没有了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker rm -f redis</span></span>
<span class="line"><span>docker rm -f inception</span></span>
<span class="line"><span>docker rm -f archery</span></span>
<span class="line"><span>docker rm -f goinception</span></span>
<span class="line"><span>docker rm -f mysql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="访问" tabindex="-1"><a class="header-anchor" href="#访问"><span>访问</span></a></h2><p>访问，http://192.168.1.12:9123/ 下一篇文章讲解如何配置Archery后台配置基本操作</p><h1 id="四、角色权限" tabindex="-1"><a class="header-anchor" href="#四、角色权限"><span>四、角色权限</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>default</span></span>
<span class="line"><span>DBA		数据库管理员（Database Administrator，简称DBA）</span></span>
<span class="line"><span>RD  研发（Research and Development）</span></span>
<span class="line"><span>PM 项目经理( Project Manager )</span></span>
<span class="line"><span>QA 测试（QUALITY ASSURANCE，中文意思是“质量保证”）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>工作流：</span></span>
<span class="line"><span>RD--&gt;DBA--&gt;CTO（审批）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="工作流" tabindex="-1"><a class="header-anchor" href="#工作流"><span>工作流</span></a></h2><h3 id="功能说明" tabindex="-1"><a class="header-anchor" href="#功能说明"><span>功能说明</span></a></h3><p>项目提供简单的多级审批流配置，审批流程和资源组以及审批类型相关，不同资源组和审批类型可以配置不同的审批流程，审批流程配置的是权限组，可避免审批人单点的问题</p><h3 id="相关配置" tabindex="-1"><a class="header-anchor" href="#相关配置"><span>相关配置</span></a></h3><p>在系统管理-配置项管理页面，可进行组工单审批流程的配置 对于SQL上线和SQL查询权限工单，如果用户拥有(&#39;sql_review&#39;, &#39;审核SQL上线工单&#39;)、(&#39;sql_execute_for_resource_group&#39;, &#39;执行SQL上线工单&#39;)、(&#39;query_review&#39;, &#39;审核查询权限&#39;)权限，就可以查看到当前用户所在资源组的所有工单 工单待审核时，关联当前审批权限组、并且关联工单所在资源组的用户，均可查看审核工单（资源组隔离） 待办列表包含当前用户可审核的所有工单</p><p><img src="https://imgoss.xgss.net/picgo/image-20200908161641296.png?aliyun" alt="image-20200908161641296"></p>`,44)]))}const t=n(l,[["render",p]]),o=JSON.parse('{"path":"/article/iqdeqf08/","title":"1_Archery_Install_Docker","lang":"en-US","frontmatter":{"title":"1_Archery_Install_Docker","createTime":"2025/05/27 17:51:17","permalink":"/article/iqdeqf08/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":3.27,"words":982},"filePathRelative":"kaiyuan/Open-databases/1_Archery_Install_Docker.md"}');export{t as comp,o as data};
