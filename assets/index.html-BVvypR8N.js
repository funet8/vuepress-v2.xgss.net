import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as e}from"./app-BiQR_lPj.js";const l={};function d(p,s){return e(),a("div",null,s[0]||(s[0]=[i(`<h1 id="在centos-7下构建安卓android编译环境" tabindex="-1"><a class="header-anchor" href="#在centos-7下构建安卓android编译环境"><span>在CentOS 7下构建安卓Android编译环境</span></a></h1><p>根据安卓开发的需求实现流程</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>1.安卓开发工程师本机开发</span></span>
<span class="line"><span>2.提交Git仓库-master分支</span></span>
<span class="line"><span>3.jenkins手动打包(可实现自动)，进入后台 http://192.168.1.8:9091/</span></span>
<span class="line"><span>执行任务:</span></span>
<span class="line"><span>打包服务器拉取最新git仓库代码</span></span>
<span class="line"><span>进入项目目录执行</span></span>
<span class="line"><span>./gradlew :launcher:assembleRelease</span></span>
<span class="line"><span>4.将生成的apk包cp到 http://android.XXXX.ltd WEB目录，安卓研发下载apk包</span></span>
<span class="line"><span>5.测试</span></span>
<span class="line"><span>6.上线投放</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分三篇文章讲解</p><p>1.<a href="https://g.xgss.net/kaiyuan/android/1.Centos7-Android-software.html" target="_blank" rel="noopener noreferrer">CentOS7下构建安卓Android编译环境</a></p><p>2.<a href="http://g.xgss.net/devops/CentOS-7-Install-Jenkins.html" target="_blank" rel="noopener noreferrer">CentOS7下安装Jenkins</a></p><p>3.<a href="http://g.xgss.net/kaiyuan/android/3.Centos7-Android-jenkins.html" target="_blank" rel="noopener noreferrer">基于centos7的jenkins安卓自动打包</a></p><p><img src="http://imgoss.xgss.net/picgo/android.png?aliyunoss" alt="在 CentOS7 下构建 Android 编译环境"></p><p>在 Android Studio 之外，还可以通过 Gradle Script 来编译 Android 项目并构建和测试应用。 本文是一个备忘录，以记录我在 x86_64 GNU/Linux 系统 CentOS Linux release 7.8.2003 下折腾 Android 编译环境的一个过程。</p><p>本文将会安装以下组件：</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>Git</span></span>
<span class="line"><span>JDK 1.8</span></span>
<span class="line"><span>Go 1.14.7</span></span>
<span class="line"><span>Android SDK</span></span>
<span class="line"><span>  Android NDK</span></span>
<span class="line"><span>Rust 1.45.0</span></span>
<span class="line"><span>  Android Targets:</span></span>
<span class="line"><span>    armv7-linux-androideabi</span></span>
<span class="line"><span>    aarch64-linux-android</span></span>
<span class="line"><span>    i686-linux-android</span></span>
<span class="line"><span>    x86_64-linux-android</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下的所有过程均是在 root 用户下操作。</p><h3 id="_1-安装-git-和-jdk-1-8" tabindex="-1"><a class="header-anchor" href="#_1-安装-git-和-jdk-1-8"><span>1. 安装 Git 和 JDK 1.8</span></a></h3><p>这两个组件发行版自带，通过以下命令即可安装。与此同时，再安装一些其他必要的组件 wget 和 unzip。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel wget unzip git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>完成后通过以下命令验证 JDK 版本号。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ java -version</span></span>
<span class="line"><span>openjdk version &quot;1.8.0_252&quot;</span></span>
<span class="line"><span>OpenJDK Runtime Environment (build 1.8.0_252-b09)</span></span>
<span class="line"><span>OpenJDK 64-Bit Server VM (build 25.252-b09, mixed mode)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ javac -version</span></span>
<span class="line"><span>javac 1.8.0_252</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-安装-go" tabindex="-1"><a class="header-anchor" href="#_2-安装-go"><span>2. 安装 Go</span></a></h3><p>目前 Go 的最新版是 1.14.7。安装过程如下。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ GO_VERSION=1.14.7</span></span>
<span class="line"><span>$ wget -O /tmp/go\${GO_VERSION}.tar.gz http://js.funet8.com/centos_software/go\${GO_VERSION}.linux-amd64.tar.gz</span></span>
<span class="line"><span>$ tar -C /usr/local -xzf /tmp/go\${GO_VERSION}.tar.gz</span></span>
<span class="line"><span>$ rm -fv /tmp/go\${GO_VERSION}.tar.gz</span></span>
<span class="line"><span>$ export PATH=/usr/local/go/bin:$PATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成后通过以下命令验证 Go 版本号。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ go version</span></span>
<span class="line"><span>go version go1.14.7 linux/amd64</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-安装-android-sdk-及-android-ndk" tabindex="-1"><a class="header-anchor" href="#_3-安装-android-sdk-及-android-ndk"><span>3. 安装 Android SDK 及 Android NDK</span></a></h3><p>假设 <code>ANDROID_HOME</code> 路径是 <code>/data/sdk</code>。安装过程如下。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ mkdir -p /data/sdk &amp;&amp; cd /data/sdk</span></span>
<span class="line"><span>$ wget http://js.funet8.com/centos_software/commandlinetools-linux-6609375_latest.zip</span></span>
<span class="line"><span>$ unzip -q commandlinetools-linux-6609375_latest.zip</span></span>
<span class="line"><span>$ rm -fv commandlinetools-linux-6609375_latest.zip</span></span>
<span class="line"><span>$ export PATH=/data/sdk/tools/bin:$PATH</span></span>
<span class="line"><span>$ [ -z &quot;\${ANDROID_HOME}&quot; ] &amp;&amp; export ANDROID_HOME=/data/sdk</span></span>
<span class="line"><span>$ yes | sdkmanager --sdk_root=\${ANDROID_HOME} --licenses</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 <code>sdkmanager</code> 来安装一些组件。一条命令一步到位。如下。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ sdkmanager --sdk_root=\${ANDROID_HOME} &quot;platform-tools&quot; &quot;platforms;android-30&quot; &quot;platforms;android-29&quot; &quot;ndk-bundle&quot; &quot;ndk;21.0.6113669&quot; &quot;build-tools;29.0.2&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>完成后，确认已安装的列表。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ sdkmanager --sdk_root=\${ANDROID_HOME} --list</span></span>
<span class="line"><span>Installed packages:</span></span>
<span class="line"><span>  Path                 | Version      | Description                     | Location             </span></span>
<span class="line"><span>  -------              | -------      | -------                         | -------              </span></span>
<span class="line"><span>  build-tools;29.0.2   | 29.0.2       | Android SDK Build-Tools 29.0.2  | build-tools/29.0.2/  </span></span>
<span class="line"><span>  ndk-bundle           | 21.3.6528147 | NDK                             | ndk-bundle/          </span></span>
<span class="line"><span>  ndk;21.0.6113669     | 21.0.6113669 | NDK (Side by side) 21.0.6113669 | ndk/21.0.6113669/    </span></span>
<span class="line"><span>  patcher;v4           | 1            | SDK Patch Applier v4            | patcher/v4/          </span></span>
<span class="line"><span>  platform-tools       | 30.0.3       | Android SDK Platform-Tools      | platform-tools/      </span></span>
<span class="line"><span>  platforms;android-29 | 4            | Android SDK Platform 29         | platforms/android-29/</span></span>
<span class="line"><span>  platforms;android-30 | 1            | Android SDK Platform 30         | platforms/android-30/</span></span>
<span class="line"><span>  tools                | 2.1.0        | Android SDK Tools 2.1           | tools/               </span></span>
<span class="line"><span>Available Packages:</span></span>
<span class="line"><span>  以下省略</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-安装-rust-及其它" tabindex="-1"><a class="header-anchor" href="#_4-安装-rust-及其它"><span>4. 安装 Rust 及其它</span></a></h3><p>目前 Rust 的最新版是 1.45.0。安装过程如下。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ export RUSTUP_HOME=/usr/local/rustup CARGO_HOME=/usr/local/cargo</span></span>
<span class="line"><span>$ RUST_VERSION=1.45.0</span></span>
<span class="line"><span>$ RUSTARCH=&#39;x86_64-unknown-linux-gnu&#39;</span></span>
<span class="line"><span>$ wget -O /tmp/rustup-init &quot;https://static.rust-lang.org/rustup/archive/1.21.1/\${RUSTARCH}/rustup-init&quot;</span></span>
<span class="line"><span>$ chmod 755 /tmp/rustup-init</span></span>
<span class="line"><span>$ /tmp/rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION</span></span>
<span class="line"><span>$ rm -fv /tmp/rustup-init</span></span>
<span class="line"><span>$ chmod -R a+w \${RUSTUP_HOME} \${CARGO_HOME}</span></span>
<span class="line"><span>$ export PATH=/usr/local/cargo/bin:$PATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成后通过以下命令验证 Rust 及组件的版本号。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ rustup --version</span></span>
<span class="line"><span>rustup 1.21.1 (7832b2ebe 2019-12-20)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ cargo --version</span></span>
<span class="line"><span>cargo 1.45.0 (744bd1fbb 2020-06-15)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ rustc --version</span></span>
<span class="line"><span>rustc 1.45.0 (5c1f21c3b 2020-07-13)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Rust 安装以下 Android Targets:</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>armv7-linux-androideabi</span></span>
<span class="line"><span>aarch64-linux-android</span></span>
<span class="line"><span>i686-linux-android</span></span>
<span class="line"><span>x86_64-linux-android</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装过程如下。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ rustup install stable</span></span>
<span class="line"><span>$ rustup default stable</span></span>
<span class="line"><span>$ rustup target add armv7-linux-androideabi</span></span>
<span class="line"><span>$ rustup target add i686-linux-android</span></span>
<span class="line"><span>$ rustup target add aarch64-linux-android</span></span>
<span class="line"><span>$ rustup target add x86_64-linux-android</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-持久化环境变量" tabindex="-1"><a class="header-anchor" href="#_5-持久化环境变量"><span>5. 持久化环境变量</span></a></h3><p>上面的安装步骤是通过 export 来定义系统 PATH 的，在退出当前登录后就会丢失设置。 因此需要持久化一些环境变量。 编辑 <code>~/.bash_profile</code> 文件。添加 <code>ANDROID_HOME</code>，<code>RUSTUP_HOME</code>，<code>CARGO_HOME</code> 的定义以及增加 <code>PATH</code> 定义。 最后呈现内容如下。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span># .bash_profile</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Get the aliases and functions</span></span>
<span class="line"><span>if [ -f ~/.bashrc ]; then</span></span>
<span class="line"><span>. ~/.bashrc</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line"><span># User specific environment and startup programs</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export ANDROID_HOME=/data/sdk RUSTUP_HOME=/usr/local/rustup CARGO_HOME=/usr/local/cargo</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PATH=$PATH:$HOME/bin:$ANDROID_HOME/tools/bin:/usr/local/go/bin:/usr/local/cargo/bin</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export PATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-编译-android-项目" tabindex="-1"><a class="header-anchor" href="#_6-编译-android-项目"><span>6. 编译 Android 项目</span></a></h3><p>这里选一个比较简单的项目来练手：<a href="https://github.com/shadowsocks/v2ray-plugin-android" target="_blank" rel="noopener noreferrer">v2ray-plugin-android</a>。 编译过程如下。</p><div class="language-bsh line-numbers-mode" data-highlighter="shiki" data-ext="bsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bsh"><span class="line"><span>$ git clone https://github.com/shadowsocks/v2ray-plugin-android.git</span></span>
<span class="line"><span>$ cd v2ray-plugin-android</span></span>
<span class="line"><span>$ git submodule update --init --recursive</span></span>
<span class="line"><span>$ ./gradlew assembleRelease</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成后，编译好的 apk 文件位于 <code>app/build/outputs/apk/release</code> 路径下。 Android 系统要求所有 apk 必须先使用证书进行数字签名，然后才能安装到设备上或进行更新。 因此这些 apk 文件还不能被直接拿来安装。 至于如何签名，请参考以下链接，过程省略。 https://developer.android.com/studio/publish/app-signing</p><h3 id="_7-总结" tabindex="-1"><a class="header-anchor" href="#_7-总结"><span>7. 总结</span></a></h3><p>当你习惯于用命令行做事的时候，你会发现效率往往会有很大的提升。编译代码亦是如此。</p>`,50)]))}const c=n(l,[["render",d]]),o=JSON.parse('{"path":"/article/s7bhsjtx/","title":"1.Centos7-Android-software","lang":"en-US","frontmatter":{"title":"1.Centos7-Android-software","createTime":"2025/05/27 17:51:17","permalink":"/article/s7bhsjtx/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":3.83,"words":1148},"filePathRelative":"kaiyuan/android/1.Centos7-Android-software.md"}');export{c as comp,o as data};
