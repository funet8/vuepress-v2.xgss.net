import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as i,o as e}from"./app-BiQR_lPj.js";const p={};function l(t,s){return e(),n("div",null,s[0]||(s[0]=[i(`<h1 id="如何给公司节约成本-搭建免费开源监控系统uptime-kuma" tabindex="-1"><a class="header-anchor" href="#如何给公司节约成本-搭建免费开源监控系统uptime-kuma"><span>如何给公司节约成本，搭建免费开源监控系统uptime-kuma</span></a></h1><p>由于业务需要，我司的产品越来越多，api接口监控相对比较薄弱，对此要搭建HTTP(s)的监控系统，之前一直使用第三方的监控系统，比如阿里云的云监控。</p><h2 id="基本流程" tabindex="-1"><a class="header-anchor" href="#基本流程"><span>基本流程</span></a></h2><p>1.了解需求。</p><p>2.通过各种途径了解有没有相关免费解决方案</p><p>3.本地搭建实施，评估上线。</p><p>4.上线部署 使用。</p><p>本文记录希望找到开源监控系统走的弯路，apimonitor和apitestplatform都有这样或者那样的问题。最终找到对应的开源监控uptime-kuma，并且有以外惊喜，如果有其他的需求也可以按照此流程进行。</p><p><img src="https://imgoss.xgss.net/picgo/mianfei-uptime-kuma.jpg?aliyun" alt="mianfei-uptime-kuma"></p><h2 id="业务需求" tabindex="-1"><a class="header-anchor" href="#业务需求"><span>业务需求</span></a></h2><p>1.开源、免费</p><p>2.定时监控生产环境的接口链接，如果出现访问非200的、超时，则报警。</p><p>3.告警方式： 邮件、短信、钉钉群通知、电话等</p><p>4.支持本地Linux服务器部署</p><p>5.类似阿里云的“云监控”--站点监控，如图。第三方参考解决方案https://www.jiankongbao.com/</p><h1 id="测试系统" tabindex="-1"><a class="header-anchor" href="#测试系统"><span>测试系统</span></a></h1><p>服务器系统： Centos7</p><p>IP地址： 192.168.1.5</p><p>服务器已安装： nginx和docker</p><h1 id="开源产品" tabindex="-1"><a class="header-anchor" href="#开源产品"><span>开源产品</span></a></h1><p>在网上搜索、问同事和相关从业经验的人，是否有相关的监控产品。</p><h1 id="一、系统监控产品apimonitor-项目已关闭" tabindex="-1"><a class="header-anchor" href="#一、系统监控产品apimonitor-项目已关闭"><span>一、系统监控产品apimonitor（项目已关闭）</span></a></h1><p>apimonitor有api探测、api监控、http请求模拟、系统接口监控等功能，可以模拟http页面操作过程，并根据请求耗时和响应结果监控系统接口可用性和正确性。</p><p>开源地址： https://gitee.com/ecar_team/apimonitor</p><p>查看功能部分符合，但是需要二次开发，可以在此开源项目上开发</p><p><strong>1.新增告警功能，通过邮件、短信、钉钉群通知等。</strong></p><p><strong>2.新增访问时长记录。</strong></p><h1 id="二、apitestplatform-亲测有bug" tabindex="-1"><a class="header-anchor" href="#二、apitestplatform-亲测有bug"><span>二、apitestplatform（亲测有bug）</span></a></h1><p>一个web界面的接口自动化测试平台</p><p>git地址：https://github.com/342164796/apitestplatform</p><h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤"><span>安装步骤</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>cd /data</span></span>
<span class="line"><span>git clone https://github.com/342164796/apitestplatform</span></span>
<span class="line"><span>cd apitestplatform/</span></span>
<span class="line"><span>首次部署需要在settings.py文件里修改mysql的地址和账户名密码为自己的数据库地址</span></span>
<span class="line"><span>vi apitestplatform/settings.py</span></span>
<span class="line"><span>&#39;default&#39;: {</span></span>
<span class="line"><span>        &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,</span></span>
<span class="line"><span>        &#39;HOST&#39;: &quot;*.*.*.*&quot;,</span></span>
<span class="line"><span>        &#39;NAME&#39;: &quot;apitestplatform&quot;,</span></span>
<span class="line"><span>        &#39;USER&#39;: &quot;user&quot;,</span></span>
<span class="line"><span>        &#39;PASSWORD&#39;: &quot;password&quot;,</span></span>
<span class="line"><span>        &#39;PORT&#39;: &quot;3306&quot;,</span></span>
<span class="line"><span>        # &#39;CHARSET&#39;: &#39;utf8&#39;,</span></span>
<span class="line"><span>        # &#39;COLLATION&#39;: &#39;utf8_general_ci&#39;,</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2.初始化数据库，执行如下命令：</span></span>
<span class="line"><span>python3.6 manage.py makemigrations</span></span>
<span class="line"><span>python3.6 manage.py migrate</span></span>
<span class="line"><span></span></span>
<span class="line"><span>python3.6 manage.py runserver</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装的踩坑记录" tabindex="-1"><a class="header-anchor" href="#安装的踩坑记录"><span>安装的踩坑记录</span></a></h2><h3 id="_1-syntaxerror-invalid-syntax" tabindex="-1"><a class="header-anchor" href="#_1-syntaxerror-invalid-syntax"><span><strong>1.SyntaxError: invalid syntax</strong></span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># python manage.py runserver </span></span>
<span class="line"><span>  File &quot;manage.py&quot;, line 14</span></span>
<span class="line"><span>    ) from exc</span></span>
<span class="line"><span>         ^</span></span>
<span class="line"><span>SyntaxError: invalid syntax</span></span>
<span class="line"><span>python 版本太低，系统自带为2.7</span></span>
<span class="line"><span>升级安装 python3.6</span></span>
<span class="line"><span># python -V</span></span>
<span class="line"><span>Python 2.7.5</span></span>
<span class="line"><span></span></span>
<span class="line"><span># python3.6 -V</span></span>
<span class="line"><span>Python 3.6.8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-couldn-t-import-djang" tabindex="-1"><a class="header-anchor" href="#_2-couldn-t-import-djang"><span><strong>2.Couldn&#39;t import Djang</strong></span></a></h3><p>没有安装django</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># python3.6 manage.py runserver </span></span>
<span class="line"><span>Couldn&#39;t import Django. Are you sure it&#39;s installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?</span></span>
<span class="line"><span></span></span>
<span class="line"><span>安装 Django</span></span>
<span class="line"><span></span></span>
<span class="line"><span>虚拟环境里用python3安django和uwsgi</span></span>
<span class="line"><span>（如果用于生产的话，则需要指定安装和你项目相同的版本）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>pip3.6 install django</span></span>
<span class="line"><span>pip3.6 install uwsgi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-没有安装pymysql" tabindex="-1"><a class="header-anchor" href="#_3-没有安装pymysql"><span><strong>3.没有安装pymysql</strong></span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>再次报错：</span></span>
<span class="line"><span># python3.6 manage.py runserver </span></span>
<span class="line"><span>ModuleNotFoundError: No module named &#39;pymysql&#39;</span></span>
<span class="line"><span>解决：</span></span>
<span class="line"><span># pip3.6 install pymysql</span></span>
<span class="line"><span>再次报错：</span></span>
<span class="line"><span># python3.6 manage.py runserver </span></span>
<span class="line"><span>ModuleNotFoundError: No module named &#39;django_crontab&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-没有安装django-crontab" tabindex="-1"><a class="header-anchor" href="#_4-没有安装django-crontab"><span>4.没有安装django-crontab</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>报错</span></span>
<span class="line"><span>django.db.utils.OperationalError: (2003, &quot;Can&#39;t connect to MySQL server on &#39;*.*.*.*&#39; ([Errno -2] Name or service not known)&quot;)</span></span>
<span class="line"><span>解决：</span></span>
<span class="line"><span># pip3.6 install django-crontab</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动成功</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># python3.6 manage.py runserver </span></span>
<span class="line"><span>You have 29 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, base, contenttypes, sessions.</span></span>
<span class="line"><span>Run &#39;python manage.py migrate&#39; to apply them.</span></span>
<span class="line"><span>March 02, 2022 - 10:31:01</span></span>
<span class="line"><span>Django version 3.2.12, using settings &#39;apitestplatform.settings&#39;</span></span>
<span class="line"><span>Starting development server at http://127.0.0.1:8000/</span></span>
<span class="line"><span>Quit the server with CONTROL-C.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动成功" tabindex="-1"><a class="header-anchor" href="#启动成功"><span>启动成功</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># python3.6 manage.py runserver </span></span>
<span class="line"><span></span></span>
<span class="line"><span>Django version 3.2.12, using settings &#39;apitestplatform.settings&#39;</span></span>
<span class="line"><span>Starting development server at http://127.0.0.1:8000/</span></span>
<span class="line"><span>Quit the server with CONTROL-C.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nginx反向代理" tabindex="-1"><a class="header-anchor" href="#nginx反向代理"><span>nginx反向代理</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span></span></span>
<span class="line"><span>server {</span></span>
<span class="line"><span>        listen       80;</span></span>
<span class="line"><span>        server_name  apitest.test.me;</span></span>
<span class="line"><span>        #root /data/wwwroot/web/apitest.test.me/;</span></span>
<span class="line"><span>        access_log /data/wwwroot/log/apitest.test.me-access.log main_aliyun;</span></span>
<span class="line"><span>        error_log off;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        location / {</span></span>
<span class="line"><span>                proxy_pass      http://127.0.0.1:8000;</span></span>
<span class="line"><span>                proxy_redirect off;</span></span>
<span class="line"><span>                proxy_set_header Host $host;</span></span>
<span class="line"><span>                proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>绑定hosts访问</span></span>
<span class="line"><span>192.168.1.5 apitest.test.me</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://imgoss.xgss.net/picgo/image-20220302191408547.png?aliyun" alt="image-20220302191408547"></p><p><strong>添加项目报错：</strong></p><p><img src="https://imgoss.xgss.net/picgo/image-20220302191630117.png?aliyun" alt="image-20220302191630117"></p><p>由于不太清楚报错的原因。放弃此开源项目。</p><h1 id="三、开源监控uptime-kuma" tabindex="-1"><a class="header-anchor" href="#三、开源监控uptime-kuma"><span>三、开源监控uptime-kuma</span></a></h1><p>继续百度搜索查找，在知乎的页面中找到一个@无为无谓 的回答，页面https://www.zhihu.com/question/23755976</p><p>他推荐了一个开源产品，uptime-kuma。</p><p>uptime-kuma地址：https://github.com/louislam/uptime-kuma</p><p>反向代理教程： https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy</p><p>演示网站:</p><p>https://demo.uptime.kuma.pet:27000/ 创建管理员账号，有10分钟的体验时间。</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303095626971.png?aliyun" alt="image-20220303095626971"></p><p>查看演示基本能满足需要，在本地搭建测试，功能都符合我的要求，居然还有惊喜，首先界面很精美，再次除了有基本的HTTP(S)的监控的，还有TCP端口监控、PING监控、HTTP（s）关键字监控、DNS监控、Push监控、Steam Game Server监控，功能相当多，重点是都是免费的，只要有服务器，或者局域网的虚拟机（可访问外网）就可以监控你的各种服务。</p><h2 id="docker部署uptime-kuma" tabindex="-1"><a class="header-anchor" href="#docker部署uptime-kuma"><span>docker部署uptime-kuma</span></a></h2><p>本次使用docker安装如果，需要非docker参考开源文档。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># mkdir -p /data/docker/uptime-kuma/data</span></span>
<span class="line"><span># docker run -d --restart=always -p 3001:3001 -v /data/docker/uptime-kuma/data:/app/data --name uptime-kuma louislam/uptime-kuma:1</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span># netstat -tunpl|grep 3001</span></span>
<span class="line"><span>tcp6       0      0 :::3001                 :::*                    LISTEN      29542/docker-proxy-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问：</p><p>http://192.168.1.5:3001 访问，创建管理员账号。</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303095955001.png?aliyun" alt="image-20220303095955001"></p><h2 id="nginx代理访问" tabindex="-1"><a class="header-anchor" href="#nginx代理访问"><span>nginx代理访问</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>server  {</span></span>
<span class="line"><span>    listen 80;</span></span>
<span class="line"><span>    server_name    uptime.test.me;</span></span>
<span class="line"><span>    location / {</span></span>
<span class="line"><span>        proxy_pass         http://localhost:3001;</span></span>
<span class="line"><span>        proxy_http_version 1.1;</span></span>
<span class="line"><span>        proxy_set_header   Upgrade $http_upgrade;</span></span>
<span class="line"><span>        proxy_set_header   Connection &quot;upgrade&quot;;</span></span>
<span class="line"><span>        proxy_set_header   Host $host;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>绑定hosts访问</span></span>
<span class="line"><span>192.168.1.5 uptime.test.me</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本设置" tabindex="-1"><a class="header-anchor" href="#基本设置"><span>基本设置</span></a></h2><p>设置里面功能还比较齐全，有外观设置，消息通知重点是消息通知有，邮件、钉钉、短信、飞书等等的第三方通知，相当齐全。</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303100108350.png?aliyun" alt="image-20220303100108350"></p><h2 id="外观设置" tabindex="-1"><a class="header-anchor" href="#外观设置"><span>外观设置</span></a></h2><p><img src="https://imgoss.xgss.net/picgo/image-20220303100124220.png?aliyun" alt="image-20220303100124220"></p><h2 id="通知设置" tabindex="-1"><a class="header-anchor" href="#通知设置"><span>通知设置</span></a></h2><p><img src="https://imgoss.xgss.net/picgo/image-20220303100147192.png?aliyun" alt="image-20220303100147192"></p><h2 id="创建监控项" tabindex="-1"><a class="header-anchor" href="#创建监控项"><span>创建监控项</span></a></h2><p><img src="https://imgoss.xgss.net/picgo/image-20220303101158956.png?aliyun" alt="image-20220303101158956"></p><h3 id="https监控图" tabindex="-1"><a class="header-anchor" href="#https监控图"><span>HTTPS监控图</span></a></h3><p><img src="https://imgoss.xgss.net/picgo/image-20220303101238140.png?aliyun" alt="image-20220303101238140"></p><h2 id="端口tcp检测" tabindex="-1"><a class="header-anchor" href="#端口tcp检测"><span>端口TCP检测</span></a></h2><p><img src="https://imgoss.xgss.net/picgo/image-20220303103938780.png?aliyun" alt="image-20220303103938780"></p><p>关闭nginx，80端口：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>systemctl stop nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>报错：</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303104845202.png?aliyun" alt="image-20220303104845202"></p><h2 id="重置密码" tabindex="-1"><a class="header-anchor" href="#重置密码"><span>重置密码</span></a></h2><p>Docker环境</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker exec -it &lt;container name&gt; npm run reset-password</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>非Docker环境</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># cd 项目目录</span></span>
<span class="line"><span># npm run reset-password</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>https://github.com/louislam/uptime-kuma/wiki/Reset-Password-via-CLI</p><h2 id="配置消息通知" tabindex="-1"><a class="header-anchor" href="#配置消息通知"><span>配置消息通知</span></a></h2><p>Uptime Kuma提供多种的消息推送，详情请参考：https://github.com/louislam/uptime-kuma/issues/284</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303143854247.png?aliyun" alt="image-20220303143854247"></p><p>我这里需要Bark手机APP、配置邮件、钉钉群通知的演示，还有阿里云短信也是比较方便快捷的提醒。</p><h3 id="配置bark" tabindex="-1"><a class="header-anchor" href="#配置bark"><span>配置Bark</span></a></h3><p>Brak是苹果系统的一款推送软件。ios手机安装app，APP内可以获取推送地址： https://api.day.app/{密钥}/这里改成你自己的推送内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>https://api.day.app/{密钥}/这里改成你自己的推送内容</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://imgoss.xgss.net/picgo/image-20220303135120761.png?aliyun" alt="image-20220303135120761"></p><p>后面不能有中文，有测试测试会报错</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303135219785.png?aliyun" alt="image-20220303135219785"></p><p>点击“测试一下”收到消息</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303135341440.png?aliyun" alt="image-20220303135341440"></p><p>模拟测试</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303140013934.png?aliyun" alt="image-20220303140013934"></p><p>恢复测试：</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303140125375.png?aliyun" alt="image-20220303140125375"></p><h3 id="钉钉群通知" tabindex="-1"><a class="header-anchor" href="#钉钉群通知"><span>钉钉群通知</span></a></h3><p>了解更多：https://developers.dingtalk.com/document/robots/custom-robot-access</p><p>钉钉群获取WebHookUrl：假设为https://oapi.dingtalk.com/robot/send?access_token=abc123456</p><p>WebHookUrl:填写完整的地址、SecretKey则填写abc123456的值，我开始填写了错了，测试很久没有通过。</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303153135776.png?aliyun" alt="image-20220303153135776"></p><h3 id="配置邮箱" tabindex="-1"><a class="header-anchor" href="#配置邮箱"><span>配置邮箱</span></a></h3><p>如图配置，主机名、端口号、密码不是163的登录密码，需要在163邮箱后台开通开启IMAP/SMTP服务。获取授权密码。</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303152548306.png?aliyun" alt="image-20220303152548306"></p><p>测试发送邮件：</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303152834582.png?aliyun" alt="image-20220303152834582"></p><h2 id="禁用身份验证" tabindex="-1"><a class="header-anchor" href="#禁用身份验证"><span>禁用身份验证</span></a></h2><p>这是可选的，如果不禁用游客访问需要用户名和密码，但是你关掉后，就可以自由访问了。（后台后上角的设置，然后拉到最下面即可看到！）</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303143355330.png?aliyun" alt="image-20220303143355330"></p><h2 id="设置status-page" tabindex="-1"><a class="header-anchor" href="#设置status-page"><span>设置Status Page</span></a></h2><p>这个功能还是很重要的，可以把新建的监控服务放置到这个监控页面，这样就可以随时随地的看到每个系统的状态了。</p><p>点击右上角的Status Page，开始编辑，具体看图：</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303143512692.png?aliyun" alt="image-20220303143512692"></p><p>首页默认就会是这样的状态页。</p><p><img src="https://imgoss.xgss.net/picgo/image-20220303143559272.png?aliyun" alt="image-20220303143559272"></p>`,127)]))}const c=a(p,[["render",l]]),h=JSON.parse('{"path":"/article/jfz4ph1p/","title":"如何给公司节约成本，搭建免费开源监控系统uptime-kuma","lang":"en-US","frontmatter":{"title":"如何给公司节约成本，搭建免费开源监控系统uptime-kuma","createTime":"2025/05/27 17:51:17","permalink":"/article/jfz4ph1p/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":6.59,"words":1977},"filePathRelative":"kaiyuan/Open-Source-Software/如何给公司节约成本，搭建免费开源监控系统uptime-kuma.md"}');export{c as comp,h as data};
