import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as i,o as e}from"./app-BiQR_lPj.js";const l={};function p(d,s){return e(),n("div",null,s[0]||(s[0]=[i(`<h1 id="系统加固-linux不允许用户使用密码登录-只能使用密钥登录" tabindex="-1"><a class="header-anchor" href="#系统加固-linux不允许用户使用密码登录-只能使用密钥登录"><span>系统加固-Linux不允许用户使用密码登录，只能使用密钥登录</span></a></h1><h1 id="一、密码登录的安全隐患" tabindex="-1"><a class="header-anchor" href="#一、密码登录的安全隐患"><span>一、密码登录的安全隐患</span></a></h1><p>传统的密码登录方式，尽管简单直接，却存在诸多安全隐患。首先，<strong>密码本身容易被猜测或通过暴力破解手段获得</strong>。特别是当用户设置了过于简单或常见的密码时，系统面临的安全风险将显著增加。其次，<strong>密码在传输过程中可能会被截获</strong>，尤其是在不安全的网络环境下，这进一步加剧了安全风险。最后，即使密码本身足够复杂且安全，但用户在不同平台间重复使用密码的习惯也容易导致“<strong>一损俱损</strong>”的连锁反应。</p><p>俗话不怕贼偷就怕贼惦记，服务器每天收到近万条尝试登录失败的通知。</p><p><img src="https://imgoss.xgss.net/picgo/image-20241203153231920.png?aliyun" alt="image-20241203153231920"></p><h1 id="二、密钥认证的优势" tabindex="-1"><a class="header-anchor" href="#二、密钥认证的优势"><span><strong>二、密钥认证的优势</strong></span></a></h1><p>与密码登录相比，密钥认证机制在安全性方面有着显著的优势。密钥认证基于公钥和私钥的加密技术，用户需要在本地生成一对密钥，其中公钥上传至服务器，私钥则保存在本地且不应泄露。在登录过程中，用户通过私钥对服务器发送的挑战进行签名，服务器则使用对应的公钥进行验证。由于私钥的私密性和不可复制性，这种认证方式极大地提高了登录过程的安全性。</p><p>此外，密钥认证还提供了更强的身份验证能力。即使攻击者获得了用户的公钥，也无法直接用于登录，因为私钥始终掌握在用户手中。同时，密钥认证还可以支持多因素认证，如结合密码、生物特征等，进一步提升系统安全性。</p><p><img src="https://imgoss.xgss.net/picgo/image-20241203155625819.png?aliyun" alt="image-20241203155625819"></p><h1 id="生成密钥对" tabindex="-1"><a class="header-anchor" href="#生成密钥对"><span>生成密钥对</span></a></h1><p>生成 SSH 密钥对（包括公钥和私钥）是用于进行公钥认证的常见操作。以下是在 Linux 或 macOS 中生成 SSH 密钥对的步骤。</p><h2 id="_1-生成-ssh-密钥对" tabindex="-1"><a class="header-anchor" href="#_1-生成-ssh-密钥对"><span>1: 生成 SSH 密钥对</span></a></h2><ol><li><p>打开终端（Terminal）。</p></li><li><p>使用 <code>ssh-keygen</code> 命令生成 SSH 密钥对：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里：</p><ul><li><code>-t rsa</code>：指定使用 RSA 算法。</li><li><code>-b 4096</code>：指定密钥长度为 4096 位（更长的密钥更安全）。</li><li><code>-C &quot;your_email@example.com&quot;</code>：这是一个可选的标签，用于标识该密钥的用途。</li></ul></li><li><p>系统会提示你选择保存密钥的文件路径，默认保存在 <code>~/.ssh/id_rsa</code>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>Enter file in which to save the key (/home/youruser/.ssh/id_rsa):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果你不想使用默认路径，可以指定一个路径，或者直接按 Enter 键使用默认路径。</p></li><li><p>接下来，系统会提示你输入一个密码（可选），该密码用于保护你的私钥：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>Enter passphrase (empty for no passphrase):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果你希望设置一个密码保护私钥，输入密码；如果不需要密码保护，直接按 Enter 键。</p></li></ol><h2 id="步骤-2-查看生成的密钥文件" tabindex="-1"><a class="header-anchor" href="#步骤-2-查看生成的密钥文件"><span>步骤 2: 查看生成的密钥文件</span></a></h2><p>生成的密钥对包含两个文件：</p><ul><li><strong>私钥</strong>（默认文件为 <code>~/.ssh/id_rsa</code>）：不要将私钥泄露给任何人。</li><li><strong>公钥</strong>（默认文件为 <code>~/.ssh/id_rsa.pub</code>）：可以将公钥复制到远程服务器上，用于身份验证。</li></ul><p>可以使用以下命令查看它们：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ls -l ~/.ssh/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="步骤-3-将公钥复制到远程服务器" tabindex="-1"><a class="header-anchor" href="#步骤-3-将公钥复制到远程服务器"><span>步骤 3: 将公钥复制到远程服务器</span></a></h2><p>为了使用 SSH 密钥认证登录远程服务器，你需要将公钥添加到远程服务器的 <code>~/.ssh/authorized_keys</code> 文件中。</p><h3 id="手动方式" tabindex="-1"><a class="header-anchor" href="#手动方式"><span>手动方式</span></a></h3><ol><li><p>复制公钥内容：</p><p>使用 <code>cat</code> 命令查看公钥内容：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>cat ~/.ssh/id_rsa.pub</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>复制输出的公钥内容（包括 <code>ssh-rsa</code> 开头和结束的部分）。</p></li><li><p>将公钥添加到远程服务器：</p><p>登录到远程服务器，进入 root 或目标用户的 <code>~/.ssh</code> 目录：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ssh user@your_server_ip</span></span>
<span class="line"><span>mkdir -p ~/.ssh</span></span>
<span class="line"><span>chmod 700 ~/.ssh</span></span>
<span class="line"><span>nano ~/.ssh/authorized_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将复制的公钥粘贴到 <code>authorized_keys</code> 文件中，并保存退出。</p></li><li><p>设置权限：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>chmod 600 ~/.ssh/authorized_keys</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="使用-ssh-copy-id-自动复制公钥" tabindex="-1"><a class="header-anchor" href="#使用-ssh-copy-id-自动复制公钥"><span>使用 <code>ssh-copy-id</code> 自动复制公钥</span></a></h3><p>如果你有密码登录的权限，可以使用 <code>ssh-copy-id</code> 自动将公钥复制到远程服务器：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ssh-copy-id user@your_server_ip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>系统会提示输入远程主机的密码，验证成功后会将公钥自动添加到远程服务器的 <code>~/.ssh/authorized_keys</code> 中。</p><h2 id="步骤-4-测试-ssh-登录" tabindex="-1"><a class="header-anchor" href="#步骤-4-测试-ssh-登录"><span>步骤 4: 测试 SSH 登录</span></a></h2><p>完成上述步骤后，尝试使用以下命令登录远程服务器，验证公钥认证是否成功：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ssh -i ~/.ssh/id_rsa user@your_server_ip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果一切配置正确，你应该能够成功登录，无需输入密码（如果没有设置私钥的 passphrase）。</p><h1 id="配置服务器sshd" tabindex="-1"><a class="header-anchor" href="#配置服务器sshd"><span>配置服务器SSHD</span></a></h1><p>需求：</p><p>centos7系统，不允许root用户等使用密码登录，只能使用密钥登录，公钥为：ssh-rsa ABCd123</p><p><img src="https://imgoss.xgss.net/picgo/image-20241203155919760.png?aliyun" alt="image-20241203155919760"></p><h2 id="_1-配置-ssh-服务" tabindex="-1"><a class="header-anchor" href="#_1-配置-ssh-服务"><span>1. 配置 SSH 服务</span></a></h2><p>编辑 <code>sshd</code> 配置文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>vi /etc/ssh/sshd_config</span></span>
<span class="line"><span>在文件中修改或添加以下参数：</span></span>
<span class="line"><span># 禁止密码认证</span></span>
<span class="line"><span>PasswordAuthentication no</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 允许公钥认证</span></span>
<span class="line"><span>PubkeyAuthentication yes</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 禁止 root 用户使用密码登录</span></span>
<span class="line"><span>PermitRootLogin prohibit-password</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>PasswordAuthentication no</code>：禁止所有用户使用密码登录。</li><li><code>PubkeyAuthentication yes</code>：允许使用公钥认证。</li><li><code>PermitRootLogin prohibit-password</code>：禁止 root 使用密码登录，但允许其通过公钥登录。</li></ul><h2 id="_2-添加公钥到-root-用户" tabindex="-1"><a class="header-anchor" href="#_2-添加公钥到-root-用户"><span>2. 添加公钥到 root 用户</span></a></h2><p>将提供的公钥 <code>ssh-rsa ABCd123</code> 刚才生成的密钥添加到 <code>root</code> 用户的 <code>authorized_keys</code> 文件中。</p><p>执行以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>sudo mkdir -p /root/.ssh</span></span>
<span class="line"><span>sudo chmod 700 /root/.ssh</span></span>
<span class="line"><span>echo &quot;ssh-rsa ABCd123&quot; | sudo tee /root/.ssh/authorized_keys</span></span>
<span class="line"><span>sudo chmod 600 /root/.ssh/authorized_keys</span></span>
<span class="line"><span>sudo chown -R root:root /root/.ssh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-重启-ssh-服务" tabindex="-1"><a class="header-anchor" href="#_3-重启-ssh-服务"><span>3. 重启 SSH 服务</span></a></h2><p>保存修改后，重启 SSH 服务以应用更改：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>sudo systemctl restart sshd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_4-测试登录" tabindex="-1"><a class="header-anchor" href="#_4-测试登录"><span>4. 测试登录</span></a></h2><p>确保本地有对应的私钥文件，并用以下命令测试登录：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ssh -i /path/to/private_key root@your_server_ip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_5-检查日志" tabindex="-1"><a class="header-anchor" href="#_5-检查日志"><span>5. 检查日志</span></a></h2><p>如果遇到问题，可以查看 <code>/var/log/secure</code> 获取详细日志：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>sudo tail -f /var/log/secure</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li>确保防火墙允许 SSH 连接，必要时检查 <code>firewalld</code> 或 <code>iptables</code> 配置。</li><li>使用非 <code>root</code> 用户管理系统，<code>root</code> 权限仅在必要时通过 <code>sudo</code> 提升。</li></ul><h1 id="用shell脚本" tabindex="-1"><a class="header-anchor" href="#用shell脚本"><span>用shell脚本</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 定义公钥内容</span></span>
<span class="line"><span>PUB_KEY=&quot;ssh-rsa ABCd123&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 检查是否为root用户执行</span></span>
<span class="line"><span>if [ &quot;$(id -u)&quot; -ne 0 ]; then</span></span>
<span class="line"><span>    echo &quot;请使用 root 用户执行此脚本！&quot;</span></span>
<span class="line"><span>    exit 1</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line"><span>echo &quot;开始配置 SSH 服务...&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 设置 root 用户的公钥</span></span>
<span class="line"><span>echo &quot;配置 root 用户的公钥...&quot;</span></span>
<span class="line"><span>mkdir -p /root/.ssh</span></span>
<span class="line"><span>chmod 700 /root/.ssh</span></span>
<span class="line"><span>echo &quot;$PUB_KEY&quot; &gt;&gt; /root/.ssh/authorized_keys</span></span>
<span class="line"><span>chmod 600 /root/.ssh/authorized_keys</span></span>
<span class="line"><span>chown -R root:root /root/.ssh</span></span>
<span class="line"><span>echo &quot;公钥配置完成！&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 修改 SSH 配置文件</span></span>
<span class="line"><span>echo &quot;修改 SSH 配置文件...&quot;</span></span>
<span class="line"><span>SSHD_CONFIG=&quot;/etc/ssh/sshd_config&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 备份原配置文件</span></span>
<span class="line"><span>if [ ! -f &quot;$SSHD_CONFIG.bak&quot; ]; then</span></span>
<span class="line"><span>    cp $SSHD_CONFIG &quot;$SSHD_CONFIG.bak&quot;</span></span>
<span class="line"><span>    echo &quot;原配置文件已备份到 $SSHD_CONFIG.bak&quot;</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 修改配置项</span></span>
<span class="line"><span>sed -i &#39;s/^#*\\(PasswordAuthentication\\).*/\\1 no/&#39; $SSHD_CONFIG</span></span>
<span class="line"><span>sed -i &#39;s/^#*\\(PubkeyAuthentication\\).*/\\1 yes/&#39; $SSHD_CONFIG</span></span>
<span class="line"><span>sed -i &#39;s/^#*\\(PermitRootLogin\\).*/\\1 prohibit-password/&#39; $SSHD_CONFIG</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 确保关键配置存在</span></span>
<span class="line"><span>grep -q &quot;^PasswordAuthentication no&quot; $SSHD_CONFIG || echo &quot;PasswordAuthentication no&quot; &gt;&gt; $SSHD_CONFIG</span></span>
<span class="line"><span>grep -q &quot;^PubkeyAuthentication yes&quot; $SSHD_CONFIG || echo &quot;PubkeyAuthentication yes&quot; &gt;&gt; $SSHD_CONFIG</span></span>
<span class="line"><span>grep -q &quot;^PermitRootLogin prohibit-password&quot; $SSHD_CONFIG || echo &quot;PermitRootLogin prohibit-password&quot; &gt;&gt; $SSHD_CONFIG</span></span>
<span class="line"><span></span></span>
<span class="line"><span>echo &quot;SSH 配置修改完成！&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 重启 SSH 服务</span></span>
<span class="line"><span>echo &quot;重启 SSH 服务...&quot;</span></span>
<span class="line"><span>systemctl restart sshd</span></span>
<span class="line"><span>if [ $? -eq 0 ]; then</span></span>
<span class="line"><span>    echo &quot;SSH 服务重启成功！&quot;</span></span>
<span class="line"><span>else</span></span>
<span class="line"><span>    echo &quot;SSH 服务重启失败，请检查配置。&quot;</span></span>
<span class="line"><span>    exit 1</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line"><span>echo &quot;配置完成！root 用户已禁止密码登录，仅支持公钥认证。&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 测试完成提示</span></span>
<span class="line"><span>echo &quot;请使用以下命令测试登录：&quot;</span></span>
<span class="line"><span>echo &quot;ssh -i /path/to/private_key root@your_server_ip&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="结尾" tabindex="-1"><a class="header-anchor" href="#结尾"><span>结尾</span></a></h1><p>通过禁用密码登录并启用密钥认证机制，Linux系统能够显著提升其安全性。这种加固措施不仅减少了因密码泄露或猜测而导致的安全风险，还为用户提供了更为便捷和安全的登录体验。当然，为了保持系统的持续安全，用户还应定期更新密钥、监控系统日志以及采取其他必要的安全措施。在数字化转型的浪潮中，让我们共同努力，为构建更加安全、可靠的数字世界贡献力量。</p>`,57)]))}const o=a(l,[["render",p]]),t=JSON.parse('{"path":"/article/uh611o9z/","title":"Linux不允许用户使用密码登录，只能使用秘钥登录","lang":"en-US","frontmatter":{"title":"Linux不允许用户使用密码登录，只能使用秘钥登录","createTime":"2025/05/27 17:51:17","permalink":"/article/uh611o9z/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":6.67,"words":2002},"filePathRelative":"safe/Linux不允许用户使用密码登录，只能使用秘钥登录.md"}');export{o as comp,t as data};
