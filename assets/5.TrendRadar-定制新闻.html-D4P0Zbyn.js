import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as i}from"./app-BiQR_lPj.js";const l={};function r(p,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="定制专属新闻-全网热榜全搜集开源trendradar上手指南" tabindex="-1"><a class="header-anchor" href="#定制专属新闻-全网热榜全搜集开源trendradar上手指南"><span>定制专属新闻，全网热榜全搜集开源TrendRadar上手指南</span></a></h1><p>在信息爆炸的时代，如何快速、精准地捕捉全网热点，已经成为投资人、内容创作者、企业公关乃至普通用户的刚需。今天要介绍的这款开源工具 TrendRadar，就是一款能帮你“秒级掌握全网热搜”的神器。</p><p><img src="https://imgoss.xgss.net/picgo-tx2025/QQ_1759290773862.png?tx" alt="img"></p><h2 id="为什么选择-trendradar" tabindex="-1"><a class="header-anchor" href="#为什么选择-trendradar"><span>为什么选择 TrendRadar</span></a></h2><ul><li><strong>全网聚合</strong>：默认监控 11 个主流平台，包括微博、知乎、抖音、百度热搜、今日头条、华尔街见闻、B站热搜等。</li><li><strong>智能推送</strong>：支持三种模式： <ul><li><code>incremental</code> → 投资人/交易员，实时获取新增资讯</li><li><code>current</code> → 自媒体/创作者，掌握当下热榜趋势</li><li><code>daily</code> → 企业管理者/普通用户，定时获取完整日报</li></ul></li><li><strong>精准筛选</strong>：可配置关键词（支持普通词、必选词、过滤词），只推送你关心的内容。</li><li><strong>个性化算法</strong>：不再被平台算法“牵着走”，TrendRadar 会根据热度排名、持续出现频率和质量权重重新排序。</li><li><strong>多渠道推送</strong>：支持企业微信、飞书、钉钉、Telegram，消息直达手机。</li></ul><p>一句话总结：<strong>TrendRadar 把分散在各个平台的热搜，整合成一份真正属于你的“热点雷达图”。</strong></p><h2 id="定制的新闻页面" tabindex="-1"><a class="header-anchor" href="#定制的新闻页面"><span>定制的新闻页面</span></a></h2><p><img src="https://imgoss.xgss.net/picgo-tx2025/QQ_1759226315707.png?tx" alt="img"></p><h2 id="部署体验-零门槛-30秒搞定" tabindex="-1"><a class="header-anchor" href="#部署体验-零门槛-30秒搞定"><span>部署体验：零门槛，30秒搞定</span></a></h2><p>TrendRadar 的一大亮点就是 <strong>极简部署</strong>：</p><ul><li><strong>GitHub Pages</strong>：Fork 一下，30 秒即可生成网页版热榜日报。</li><li><strong>Docker 部署</strong>：支持多架构容器化运行，1 分钟即可接入企业微信/飞书/Telegram 推送。</li><li><strong>数据持久化</strong>：历史记录可保存为 HTML/TXT，方便归档与分析。</li></ul><p>对于没有编程基础的用户，TrendRadar 也非常友好，几乎是“开箱即用”。</p><h1 id="trendradar-部署方式" tabindex="-1"><a class="header-anchor" href="#trendradar-部署方式"><span>TrendRadar 部署方式</span></a></h1><h2 id="方案一-github-pages-最快速" tabindex="-1"><a class="header-anchor" href="#方案一-github-pages-最快速"><span>方案一：GitHub Pages（最快速）</span></a></h2><p>适合只想要一个网页版日报，不需要推送功能的用户。</p><h3 id="_1-fork-项目" tabindex="-1"><a class="header-anchor" href="#_1-fork-项目"><span>1.Fork 项目</span></a></h3><p>打开 TrendRadar 仓库，点击右上角 <strong>Fork</strong>。</p><p><img src="https://imgoss.xgss.net/picgo-tx2025/QQ_1759226495854.png?tx" alt="img"></p><h3 id="_2-启用-github-pages" tabindex="-1"><a class="header-anchor" href="#_2-启用-github-pages"><span>2.启用 GitHub Pages</span></a></h3><ul><li>进入你 Fork 后的仓库 → <code>Settings</code> → <code>Pages</code></li><li>Source 选择 <code>GitHub Actions</code>，保存。</li></ul><p><img src="https://imgoss.xgss.net/picgo-tx2025/QQ_1759229463444.png?tx" alt="img"></p><h3 id="_3-自动生成日报" tabindex="-1"><a class="header-anchor" href="#_3-自动生成日报"><span>3.自动生成日报</span></a></h3><ul><li>仓库自带 GitHub Actions 工作流，会每天自动抓取热榜并生成 HTML。</li><li>部署完成后，你会得到一个 <code>https://你的用户名.github.io/TrendRadar/</code> 的访问地址。</li></ul><h2 id="方案二-docker-compose-推荐-支持推送" tabindex="-1"><a class="header-anchor" href="#方案二-docker-compose-推荐-支持推送"><span>方案二：Docker Compose（推荐，支持推送）</span></a></h2><p>前提是安装docker和docker compose</p><p>适合需要 <strong>企业微信 / 飞书 / Telegram</strong> 等实时推送的用户。</p><h3 id="_1-创建目录结构" tabindex="-1"><a class="header-anchor" href="#_1-创建目录结构"><span>1.创建目录结构</span></a></h3><p>创建目录结构、下载配置文件模板、下载 docker-compose 配置</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># 创建目录结构</span></span>
<span class="line"><span>mkdir -p trendradar/{config,docker}</span></span>
<span class="line"><span>cd trendradar</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 下载配置文件模板</span></span>
<span class="line"><span>wget https://raw.githubusercontent.com/sansan0/TrendRadar/master/config/config.yaml -P config/</span></span>
<span class="line"><span>wget https://raw.githubusercontent.com/sansan0/TrendRadar/master/config/frequency_words.txt -P config/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 下载 docker-compose 配置</span></span>
<span class="line"><span>wget https://raw.githubusercontent.com/sansan0/TrendRadar/master/docker/.env -P docker/</span></span>
<span class="line"><span>wget https://raw.githubusercontent.com/sansan0/TrendRadar/master/docker/docker-compose.yml -P docker/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-编辑配置文件" tabindex="-1"><a class="header-anchor" href="#_2-编辑配置文件"><span>2.编辑配置文件</span></a></h3><p>配置飞书、钉钉、微信等WEBHOOK_URL或者是邮箱</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>cd docker/</span></span>
<span class="line"><span>vi .env </span></span>
<span class="line"><span># Webhook 配置</span></span>
<span class="line"><span>FEISHU_WEBHOOK_URL=</span></span>
<span class="line"><span>TELEGRAM_BOT_TOKEN=</span></span>
<span class="line"><span>TELEGRAM_CHAT_ID=</span></span>
<span class="line"><span>DINGTALK_WEBHOOK_URL=</span></span>
<span class="line"><span>WEWORK_WEBHOOK_URL=</span></span>
<span class="line"><span>EMAIL_FROM=</span></span>
<span class="line"><span>EMAIL_PASSWORD=</span></span>
<span class="line"><span>EMAIL_TO=</span></span>
<span class="line"><span>EMAIL_SMTP_SERVER=</span></span>
<span class="line"><span>EMAIL_SMTP_PORT=</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 运行配置</span></span>
<span class="line"><span>CRON_SCHEDULE=*/30 * * * * # 定时任务表达式，每 30 分钟执行一次(比如 8点，8点半，9点，9点半这种时间规律执行)</span></span>
<span class="line"><span>RUN_MODE=cron              # 运行模式：cron/once</span></span>
<span class="line"><span>IMMEDIATE_RUN=true         # 启动时立即执行一次</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-启动" tabindex="-1"><a class="header-anchor" href="#_3-启动"><span>3.启动</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># 拉取最新镜像并启动</span></span>
<span class="line"><span>docker-compose pull</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 关闭docker</span></span>
<span class="line"><span>docker-compose down</span></span>
<span class="line"><span></span></span>
<span class="line"><span>docker-compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-查看日志" tabindex="-1"><a class="header-anchor" href="#_4-查看日志"><span>4.查看日志</span></a></h3><p>使用 docker logs 查看镜像日志。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker logs -f trend-radar</span></span>
<span class="line"><span></span></span>
<span class="line"><span>标题已保存到: output/2025年09月30日/txt/17时17分.txt</span></span>
<span class="line"><span>当日汇总模式：处理 255 条新闻，模式：频率词过滤</span></span>
<span class="line"><span>HTML报告已生成: output/2025年09月30日/html/17时17分.html</span></span>
<span class="line"><span>生成当日汇总报告...</span></span>
<span class="line"><span>当前监控平台: [&#39;toutiao&#39;, &#39;baidu&#39;, &#39;wallstreetcn-hot&#39;, &#39;thepaper&#39;, &#39;bilibili-hot-search&#39;, &#39;cls-hot&#39;, &#39;ifeng&#39;, &#39;tieba&#39;, &#39;weibo&#39;, &#39;douyin&#39;, &#39;zhihu&#39;]</span></span>
<span class="line"><span>读取到 255 个标题（已按当前监控平台过滤）</span></span>
<span class="line"><span>当日汇总模式：处理 255 条新闻，模式：频率词过滤</span></span>
<span class="line"><span>当日汇总报告已生成: output/2025年09月30日/html/当日汇总.html</span></span>
<span class="line"><span>钉钉通知发送失败 [当日汇总]，错误：description:机器人发送签名不匹配;solution:请确认签名和生成签名的时间戳必须都放在调用的网址中，请确认机器人的密钥加密和填写正确;link:请参考本接口对应文档获得具体要求，或者在https://open.dingtalk.com/document/  搜索相关文档;</span></span>
<span class="line"><span>汇总报告已生成（Docker环境）: output/2025年09月30日/html/当日汇总.html</span></span>
<span class="line"><span>⏰ 启动supercronic: */30 * * * *</span></span>
<span class="line"><span>🎯 supercronic 将作为 PID 1 运行</span></span>
<span class="line"><span>time=&quot;2025-09-30T17:17:37+08:00&quot; level=info msg=&quot;reaping dead processes&quot;</span></span>
<span class="line"><span>time=&quot;2025-09-30T17:17:37+08:00&quot; level=info msg=&quot;read crontab: /tmp/crontab&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我的这个报错是由于钉钉的配置配置错误</p><p>如果配置正常，推送消息会自动发送到你配置的渠道。</p><h2 id="典型应用场景" tabindex="-1"><a class="header-anchor" href="#典型应用场景"><span>典型应用场景</span></a></h2><ul><li><strong>投资监控</strong>：实时追踪股市、行业动态，避免错过关键信号。</li><li><strong>品牌舆情</strong>：企业公关可快速捕捉潜在危机话题。</li><li><strong>内容创作</strong>：自媒体人第一时间掌握爆款选题。</li><li><strong>日常资讯</strong>：普通用户也能轻松获取全网热点，不再被动刷屏。</li></ul><h2 id="技术亮点" tabindex="-1"><a class="header-anchor" href="#技术亮点"><span>技术亮点</span></a></h2><ul><li><strong>轻量化设计</strong>：核心逻辑简洁，易于二次开发。</li><li><strong>可扩展平台</strong>：基于 newsnow 数据源，可自定义接入更多平台。</li><li><strong>灵活配置</strong>：通过 <code>config.yaml</code> 和 <code>frequency_words.txt</code> 文件即可完成个性化设置。</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>如果你厌倦了在不同平台间来回切换，或者想要一个“真正属于自己”的热点监控工具，<strong>TrendRadar 是一个值得尝试的开源方案</strong>。</p><p>它不仅能帮你节省时间，还能让你在信息洪流中保持清醒和高效。</p><p>项目地址：https://github.com/sansan0/TrendRadar</p><p><strong>想要快 → GitHub Pages</strong>：30 秒上线网页版日报。</p><p>想要全 → Docker Compose：支持推送、关键词过滤、历史归档。</p>`,49)]))}const t=n(l,[["render",r]]),o=JSON.parse('{"path":"/kaiyuan2025/5.TrendRadar-%E5%AE%9A%E5%88%B6%E6%96%B0%E9%97%BB.html","title":"定制专属新闻，全网热榜全搜集开源TrendRadar上手指南","lang":"en-US","frontmatter":{},"git":{"createdTime":1760001321000,"updatedTime":1760001321000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":1,"url":"https://github.com/star"}]},"readingTime":{"minutes":4.85,"words":1456},"filePathRelative":"kaiyuan2025/5.TrendRadar-定制新闻.md"}');export{t as comp,o as data};
