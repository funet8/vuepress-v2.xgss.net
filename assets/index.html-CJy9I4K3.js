import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as i}from"./app-BiQR_lPj.js";const p={};function l(d,s){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="docker下部署socks5和pptp服务端-实现代理上网" tabindex="-1"><a class="header-anchor" href="#docker下部署socks5和pptp服务端-实现代理上网"><span>Docker下部署socks5和pptp服务端，实现代理上网</span></a></h1><p>在日常工作中星哥经常要搭建socks5（以下称为ss5）和pptp，来实现代理上网，之前一直使用脚本安装，有些不方便想想能不能用docker一键部署。</p><p>socks5和PPTP（Point-to-Point Tunneling Protocol）作为常见的和代理工具，已经成为了用户获取隐私保护和突破网络限制的关键工具。</p><p>本文将介绍如何在Docker容器中部署SS5和PPTP服务端，为您的网络带来更强的安全性和隐私保护。</p><p><img src="https://imgoss.xgss.net/picgo/image-20250115185452294.png?aliyun" alt="image-20250115185452294"></p><h1 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作"><span>准备工作</span></a></h1><ul><li>云服务器、NAS、虚拟机等 【 阿里云优惠： <a href="https://y.xgss.net/aliyun" target="_blank" rel="noopener noreferrer">https://y.xgss.net/aliyun</a> 或 腾讯云优惠： <a href="https://y.xgss.net/tx" target="_blank" rel="noopener noreferrer">https://y.xgss.net/tx</a> 】</li><li>本篇文章在Centos7.9系统下演示，当然其他支持Docker系统亦可</li><li>安装docker和docker-compose 【本篇文章不细讲，可以看星哥之前的教程或者官方文档】</li></ul><h1 id="docker部署ss5服务器" tabindex="-1"><a class="header-anchor" href="#docker部署ss5服务器"><span>Docker部署ss5服务器</span></a></h1><p>我们使用以下命令启动一个 Docker 容器：</p><h3 id="启动命令" tabindex="-1"><a class="header-anchor" href="#启动命令"><span>启动命令</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker run -itd --restart always \\</span></span>
<span class="line"><span>--name socks5 \\</span></span>
<span class="line"><span>-p 1080:1080 \\</span></span>
<span class="line"><span>-e PROXY_USER=myuser \\</span></span>
<span class="line"><span>-e PROXY_PASSWORD=mypassword \\</span></span>
<span class="line"><span>-e PROXY_SERVER=0.0.0.0:1080 xkuma/socks5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令解释" tabindex="-1"><a class="header-anchor" href="#命令解释"><span>命令解释</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>1. docker run:</span></span>
<span class="line"><span>这是启动一个新的容器的基础命令，表示运行一个新的容器实例。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2. -itd:</span></span>
<span class="line"><span>这个参数包含了三个选项：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-i：表示“交互式”，即保持容器的标准输入流打开，允许在容器内部进行交互。</span></span>
<span class="line"><span>-t：分配一个伪终端，用于控制台输出。</span></span>
<span class="line"><span>-d：表示“后台运行”（detached），即容器在后台运行，而不是占用当前的终端。</span></span>
<span class="line"><span>3. --restart always:</span></span>
<span class="line"><span>表示容器在退出时会自动重启。如果容器因任何原因停止，它会自动尝试重新启动。此设置适合需要长期运行的服务，例如代理服务。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4. --name socks5:</span></span>
<span class="line"><span>指定容器的名字为socks5。容器可以通过名字来访问，而不需要使用容器ID。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>5. -p 1080:1080:</span></span>
<span class="line"><span>映射容器内的端口到主机系统的端口。在这种情况下，容器内的1080端口会映射到主机的1080端口。由于Socks5代理通常使用1080端口，所以这是暴露代理端口的设置。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>6. -e PROXY_USER=myuser:</span></span>
<span class="line"><span>通过环境变量传递代理的用户名。容器启动时，PROXY_USER环境变量会设置为myuser，用于Socks5代理认证的用户名。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>7. -e PROXY_PASSWORD=mypassword:</span></span>
<span class="line"><span>通过环境变量传递代理的密码。容器启动时，PROXY_PASSWORD环境变量会设置为mypassword，用于Socks5代理认证的密码。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>8. -e PROXY_SERVER=0.0.0.0:1080:</span></span>
<span class="line"><span>通过环境变量配置代理服务的监听地址和端口。PROXY_SERVER设置为0.0.0.0:1080，表示代理服务会监听所有网络接口上的1080端口。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>9. xkuma/socks5:</span></span>
<span class="line"><span>这是Docker镜像的名字。在这里，xkuma/socks5是一个公开的Socks5代理镜像。它包含了Socks5代理服务的所有必要代码和配置，能够在容器中运行一个Socks5代理服务。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看状态" tabindex="-1"><a class="header-anchor" href="#查看状态"><span>查看状态</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># docker ps</span></span>
<span class="line"><span>CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS          PORTS                    NAMES</span></span>
<span class="line"><span>df197d1987a5   xkuma/socks5         &quot;/bin/scoks5&quot;            4 seconds ago    Up 3 seconds    0.0.0.0:1080-&gt;1080/tcp   socks5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开放端口" tabindex="-1"><a class="header-anchor" href="#开放端口"><span>开放端口</span></a></h2><p>服务器的防火墙或者云服务器的安全组策略都需要打开 1080 端口。</p><p>这里我只演示centos7的命令</p><h3 id="iptables" tabindex="-1"><a class="header-anchor" href="#iptables"><span>iptables</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>iptables -A INPUT -p tcp --dport 1080  -j ACCEPT</span></span>
<span class="line"><span>service iptables save</span></span>
<span class="line"><span>systemctl restart iptables</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="firewalld" tabindex="-1"><a class="header-anchor" href="#firewalld"><span>firewalld</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># firewall-cmd --zone=public --add-port=1080/tcp --permanent</span></span>
<span class="line"><span># firewall-cmd --reload</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="客户端验证" tabindex="-1"><a class="header-anchor" href="#客户端验证"><span>客户端验证</span></a></h2><p>这里我使用火狐浏览器的FoxyProxy插件，当然你也可以使用其他支持ss5的工具</p><p><img src="https://imgoss.xgss.net/picgo/image-20250115185016500.png?aliyun" alt="image-20250115185016500"></p><p>使用ip查询</p><p><img src="https://imgoss.xgss.net/picgo/image-20250115185254644.png?aliyun" alt="image-20250115185254644"></p><p>至此使用Docker部署ss5服务器完成。</p><h1 id="docker部署pptp服务器" tabindex="-1"><a class="header-anchor" href="#docker部署pptp服务器"><span>Docker部署PPTP服务器</span></a></h1><p>PPTP（点对点隧道协议）是一种常见的VPN协议，虽然它的安全性已经被一些新型的VPN协议所取代，但由于其配置简单、广泛支持，仍然在某些场景下得到使用。</p><h2 id="_1-创建dockerfile" tabindex="-1"><a class="header-anchor" href="#_1-创建dockerfile"><span>1.创建Dockerfile</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>FROM ubuntu:20.04</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 安装PPTP和其它依赖</span></span>
<span class="line"><span>RUN apt-get update &amp;&amp; \\</span></span>
<span class="line"><span>    apt-get install -y pptpd &amp;&amp; \\</span></span>
<span class="line"><span>    apt-get clean</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 配置PPTP</span></span>
<span class="line"><span>RUN echo &quot;option /usr/sbin/pptpd&quot; &gt;&gt; /etc/pptpd.conf &amp;&amp; \\</span></span>
<span class="line"><span>    echo &quot;localip 10.0.0.1&quot; &gt;&gt; /etc/pptpd.conf &amp;&amp; \\</span></span>
<span class="line"><span>    echo &quot;remoteip 10.0.0.100-200&quot; &gt;&gt; /etc/pptpd.conf</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 设置VPN账户</span></span>
<span class="line"><span>RUN echo &quot;vpnuser pptpd password *&quot; &gt;&gt; /etc/ppp/chap-secrets</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 打开PPTP服务</span></span>
<span class="line"><span>CMD [&quot;pptpd&quot;, &quot;--debug&quot;, &quot;--fg&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-构建docker镜像" tabindex="-1"><a class="header-anchor" href="#_2-构建docker镜像"><span>2.构建Docker镜像</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker build -t my-pptp-server .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-运行docker容器" tabindex="-1"><a class="header-anchor" href="#_3-运行docker容器"><span>3.运行Docker容器</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>    --name pptp-server \\</span></span>
<span class="line"><span>    --privileged \\</span></span>
<span class="line"><span>    -p 1723:1723 \\</span></span>
<span class="line"><span>    -p 47:47 \\</span></span>
<span class="line"><span>    my-pptp-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-客户端连接" tabindex="-1"><a class="header-anchor" href="#_4-客户端连接"><span>4.客户端连接</span></a></h2><p>服务器地址：你的服务器IP 用户名：vpnuser 密码：password</p><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h1><p>通过Docker部署SS5和PPTP服务端可以为您的网络提供更高效的管理和维护方式。Docker容器化的优势使得配置和部署更加灵活，尤其在跨平台和高可用性场景下非常适用。</p>`,40)]))}const t=a(p,[["render",l]]),o=JSON.parse('{"path":"/article/vylub46e/","title":"Docker下部署ss5和pptp服务端","lang":"en-US","frontmatter":{"title":"Docker下部署ss5和pptp服务端","createTime":"2025/05/27 17:51:17","permalink":"/article/vylub46e/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":4,"words":1199},"filePathRelative":"kaiyuan2025/Docker下部署ss5和pptp服务端.md"}');export{t as comp,o as data};
