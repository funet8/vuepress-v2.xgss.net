import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as i}from"./app-BiQR_lPj.js";const p={};function l(r,s){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="免费全自动申请和自动部署更新ssl证书的开源系统" tabindex="-1"><a class="header-anchor" href="#免费全自动申请和自动部署更新ssl证书的开源系统"><span>免费全自动申请和自动部署更新SSL证书的开源系统</span></a></h1><h1 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h1><p>大家好，我是星哥，由于工作的需要经常需要申请SSL证书，之前介绍过如何获取免费的SSL证书（宝塔、acme.sh脚本等）：https://mp.weixin.qq.com/s/ONLDkQLWEVc2KSVQad37OA</p><p>只是如果域名使用了CDN那就需要手动更新，属实比较麻烦，今天介绍一款能自动申请免费的SSL证书并且能部署到阿里云CDN、腾讯云CDN、对象存储等中的开源工具，免去手动更新的繁琐。</p><p><img src="https://imgoss.xgss.net/picgo/image-20250312142941791.png?aliyun" alt="image-20250312142941791"></p><h1 id="ssl的成本" tabindex="-1"><a class="header-anchor" href="#ssl的成本"><span>SSL的成本</span></a></h1><p>我司重要的项目需要SSL证书的大概10个通配符的域名。</p><p>在某云上通配符最便宜的价格是3年，平均每年1118.6元/个，如果搭建本项目每年可以介绍1万+的费用，也免去人工操作的麻烦。</p><p>如果是单域名的也要68元1年。</p><p><img src="https://imgoss.xgss.net/picgo/image-20250312142703471.png?aliyun" alt="image-20250312142703471"></p><h1 id="certd是什么" tabindex="-1"><a class="header-anchor" href="#certd是什么"><span>CertD是什么</span></a></h1><p>Certd 是一个免费全自动申请和自动部署更新SSL证书的管理系统。</p><p>开源SSL证书管理工具；</p><p>全自动证书申请、更新、续期；</p><p>通配符证书，泛域名证书申请；</p><p>证书自动化部署到阿里云、腾讯云、主机、群晖、宝塔；</p><p>https证书，pfx证书，der证书，TLS证书，nginx证书自动续签自动部署</p><p>CertD开源地址：https://github.com/certd/certd</p><p>文档：https://certd.docmirror.cn/</p><h1 id="certd特性" tabindex="-1"><a class="header-anchor" href="#certd特性"><span>CertD特性</span></a></h1><p>本项目不仅支持证书申请过程自动化，还可以自动化部署更新证书，让你的证书永不过期。</p><ul><li>全自动申请证书（支持所有注册商注册的域名）</li><li>全自动部署更新证书（目前支持部署到主机、阿里云、腾讯云等，目前已支持60+部署插件）</li><li>支持DNS-01、HTTP-01、CNAME代理等多种域名验证方式</li><li>支持通配符域名/泛域名，支持多个域名打到一个证书上，支持pem、pfx、der、jks等多种证书格式</li><li>邮件通知、webhook通知</li><li>私有化部署，数据保存本地，授权信息加密存储，镜像由Github Actions构建，过程公开透明</li><li>支持SQLite，PostgreSQL、MySQL数据库</li></ul><h1 id="certd在线体验" tabindex="-1"><a class="header-anchor" href="#certd在线体验"><span>CertD在线体验</span></a></h1><p>官方Demo地址，自助注册后体验</p><p>https://certd.handfree.work/</p><h1 id="certd部署方法" tabindex="-1"><a class="header-anchor" href="#certd部署方法"><span>CertD部署方法</span></a></h1><h2 id="_1-部署环境" tabindex="-1"><a class="header-anchor" href="#_1-部署环境"><span>1.部署环境</span></a></h2><p>系统：Linux （只要安装了docker和docker compose的系统都可以）</p><p>软件：安装docker和docker compose</p><p>权限申请：在运营商（ali或者腾讯云等），创建子账号，并且授权，获取到AccessKey ID和AccessKey Secret，备用。</p><h2 id="_2-部署certd" tabindex="-1"><a class="header-anchor" href="#_2-部署certd"><span>2.部署CertD</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># 随便创建一个目录</span></span>
<span class="line"><span>mkdir certd</span></span>
<span class="line"><span># 进入目录</span></span>
<span class="line"><span>cd certd</span></span>
<span class="line"><span># 下载docker-compose.yaml文件，或者手动下载放到certd目录下</span></span>
<span class="line"><span>wget https://gitee.com/certd/certd/raw/v2/docker/run/docker-compose.yaml</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 可以根据需要修改里面的配置</span></span>
<span class="line"><span># 1.修改镜像版本号【可选】</span></span>
<span class="line"><span># 2.配置数据保存路径【可选】</span></span>
<span class="line"><span># 3.修改端口号【可选】</span></span>
<span class="line"><span>vi docker-compose.yaml # 【可选】</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span># 启动certd</span></span>
<span class="line"><span>本人这边修改的</span></span>
<span class="line"><span>将： - /data/certd:/app/data 改成了 - /data/docker/certd/data:/app/data</span></span>
<span class="line"><span>将  - &quot;7002:7002&quot; 注释 - &quot;7002:7002&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>docker compose up -d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-nginx反向代理" tabindex="-1"><a class="header-anchor" href="#_3-nginx反向代理"><span>3.nginx反向代理</span></a></h2><p>现在直接使用IP+端口访问web系统了</p><p>默认账号和密码是admin 、 123456</p><p>这步可以不用操作，我这里只是方便后期操作。</p><p>nginx配置</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>server  {</span></span>
<span class="line"><span>        listen 80;</span></span>
<span class="line"><span>        server_name   你的域名;</span></span>
<span class="line"><span>        error_log           /dev/null;</span></span>
<span class="line"><span>        access_log         /data/你的域名.log;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        location / {</span></span>
<span class="line"><span>                proxy_pass         http://192.168.0.251:7001;</span></span>
<span class="line"><span>                proxy_http_version 1.1;</span></span>
<span class="line"><span>                proxy_set_header   Upgrade $http_upgrade;</span></span>
<span class="line"><span>                proxy_set_header   Connection &quot;upgrade&quot;;</span></span>
<span class="line"><span>                proxy_set_header   Host $host;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://imgoss.xgss.net/picgo/image-20250312104726169.png?aliyun" alt="image-20250312104726169"></p><h2 id="配置通知" tabindex="-1"><a class="header-anchor" href="#配置通知"><span>配置通知</span></a></h2><p>可以配置邮件通知和自定义的webhook</p><p>我这里配置的是webhook，再点测试</p><p><img src="https://imgoss.xgss.net/picgo/image-20250312111212579.png?aliyun" alt="image-20250312111212579"></p><p>点击测试钉钉会收到消息：</p><p><img src="https://imgoss.xgss.net/picgo/image-20250312111248511.png?aliyun" alt="image-20250312111248511"></p><h2 id="_4-创建流水线" tabindex="-1"><a class="header-anchor" href="#_4-创建流水线"><span>4.创建流水线</span></a></h2><p>1.需要有域名</p><p>2.需要运营商下申请AccessKey ID和AccessKey Secret</p><p>3.添加</p><p><img src="https://imgoss.xgss.net/picgo/image-20250312112452580.png?aliyun" alt="image-20250312112452580"></p><p>配置完成之后</p><h2 id="验证是否成功申请ssl证书" tabindex="-1"><a class="header-anchor" href="#验证是否成功申请ssl证书"><span>验证是否成功申请ssl证书</span></a></h2><h3 id="点击运行流水线-或者手动运行流水线。" tabindex="-1"><a class="header-anchor" href="#点击运行流水线-或者手动运行流水线。"><span>点击运行流水线，或者手动运行流水线。</span></a></h3><p><img src="https://imgoss.xgss.net/picgo/image-20250312113239626.png?aliyun" alt="image-20250312113239626"></p><p>收到钉钉通知</p><p><img src="https://imgoss.xgss.net/picgo/image-20250312113521230.png?aliyun" alt="image-20250312113521230"></p><p>收到通知，也可以下载证书，说明证书申请成功</p><h1 id="将ssl证书配置到腾讯云cdn" tabindex="-1"><a class="header-anchor" href="#将ssl证书配置到腾讯云cdn"><span>将ssl证书配置到腾讯云CDN</span></a></h1><p>流程： 1申请SSL证书，2.上传证书腾讯云，3.部署证书到CDN或者EO</p><p>编辑流水线，点击“添加任务”，搜索腾讯云</p><p><img src="https://imgoss.xgss.net/picgo/image-20250312132600625.png?aliyun" alt="image-20250312132600625"></p><h2 id="将证书部署到腾讯云" tabindex="-1"><a class="header-anchor" href="#将证书部署到腾讯云"><span>将证书部署到腾讯云</span></a></h2><p>编辑，填写腾讯云的Access授权</p><p><img src="https://imgoss.xgss.net/picgo/image-20250312132719144.png?aliyun" alt="image-20250312132719144"></p><h2 id="将证书部署到腾讯云eo-或cdn" tabindex="-1"><a class="header-anchor" href="#将证书部署到腾讯云eo-或cdn"><span>将证书部署到腾讯云EO（或CDN）</span></a></h2><p><img src="https://imgoss.xgss.net/picgo/image-20250312140454874.png?aliyun" alt="image-20250312140454874"></p><h2 id="验证" tabindex="-1"><a class="header-anchor" href="#验证"><span>验证</span></a></h2><h3 id="更新证书之前" tabindex="-1"><a class="header-anchor" href="#更新证书之前"><span>更新证书之前</span></a></h3><p><img src="https://imgoss.xgss.net/picgo/image-20250312140432566.png?aliyun" alt="image-20250312140432566"></p><h3 id="更新证书之后" tabindex="-1"><a class="header-anchor" href="#更新证书之后"><span>更新证书之后</span></a></h3><p>成功</p><p><img src="https://imgoss.xgss.net/picgo/image-20250312140637520.png?aliyun" alt="image-20250312140637520"></p><h1 id="结束" tabindex="-1"><a class="header-anchor" href="#结束"><span>结束</span></a></h1><p>好了，CertD的安装和部署已完成，使用CertD可以申请到Let&#39;s Encrypt、Google和，ZeroSSL的免费证书，您可以免费且全自动地申请和更新SSL证书，为您的网站提供强有力的安全保障。</p><p>通过这种开源系统，用户可以轻松实现HTTPS加密，并减少手动管理的复杂性。</p><p>写文不易，如果你都看到了这里，请点个赞和在看，分享给更多的朋友；也别忘了关注星哥玩云！这里有满满的干货分享，还有轻松有趣的技术交流～点个赞、分享给身边的小伙伴，一起成长，一起玩转技术世界吧！ 😊</p>`,76)]))}const t=a(p,[["render",l]]),h=JSON.parse('{"path":"/article/5yznn831/","title":"免费全自动申请和自动部署更新SSL证书的开源系统","lang":"en-US","frontmatter":{"title":"免费全自动申请和自动部署更新SSL证书的开源系统","createTime":"2025/05/27 17:51:17","permalink":"/article/5yznn831/"},"git":{"createdTime":1749111496000,"updatedTime":1750129445000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":4.53,"words":1359},"filePathRelative":"kaiyuan2025/免费全自动申请和自动部署更新SSL证书的开源系统.md"}');export{t as comp,h as data};
