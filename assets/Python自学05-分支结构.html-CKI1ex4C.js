import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as i}from"./app-BiQR_lPj.js";const l={};function d(c,s){return i(),n("div",null,s[0]||(s[0]=[a(`<h1 id="python自学05-分支结构" tabindex="-1"><a class="header-anchor" href="#python自学05-分支结构"><span>Python自学05-分支结构</span></a></h1><p>在编程中，分支结构是实现条件判断的重要工具，允许程序根据不同的条件执行不同的代码。Python作为一种简洁易懂的编程语言，它的分支结构同样简单而强大。掌握分支结构后，能够让我们编写出更具灵活性的程序。本文将带你了解Python中的分支结构，重点讲解<code>if</code>语句、<code>else</code>语句和<code>elif</code>语句。</p><h2 id="最简单的分支结构-if-语句" tabindex="-1"><a class="header-anchor" href="#最简单的分支结构-if-语句"><span>最简单的分支结构：<code>if</code> 语句</span></a></h2><p><code>if</code> 语句是最基本的分支结构，它的语法非常简单：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>if 条件表达式:</span></span>
<span class="line"><span>    代码块</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>条件表达式</strong>的结果必须是布尔值（<code>True</code> 或 <code>False</code>）。如果条件为<code>True</code>，<code>if</code> 后面的<strong>代码块</strong>就会被执行；如果为<code>False</code>，则整个代码块会被跳过。</p><p>需要特别注意的是，Python 是通过<strong>缩进</strong>来区分代码块的。所有属于 <code>if</code> 语句的代码行都必须保持相同的缩进。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span><strong>示例：</strong></span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>age = 18</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if age &gt;= 18:</span></span>
<span class="line"><span>    print(&quot;你已经成年了，可以参加投票。&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>print(&quot;这条语句总会被执行。&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，<code>age &gt;= 18</code> 的条件为<code>True</code>，所以 <code>print(&quot;你已经成年了...&quot;)</code> 这行代码会被执行。</p><h2 id="增加一个选项-if-else-语句" tabindex="-1"><a class="header-anchor" href="#增加一个选项-if-else-语句"><span>增加一个选项：<code>if-else</code> 语句</span></a></h2><p>很多时候，我们不仅想在条件为<code>True</code>时执行代码，还想在条件为<code>False</code>时执行另一段代码。这时，<code>if-else</code> 语句就派上用场了。</p><p>它的语法如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>if 条件表达式:</span></span>
<span class="line"><span>    代码块1</span></span>
<span class="line"><span>else:</span></span>
<span class="line"><span>    代码块2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当<strong>条件表达式</strong>为<code>True</code>时，执行<strong>代码块1</strong>；当条件为<code>False</code>时，执行<strong>代码块2</strong>。</p><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span><strong>示例：</strong></span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>score = 75</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if score &gt;= 60:</span></span>
<span class="line"><span>    print(&quot;及格了！&quot;)</span></span>
<span class="line"><span>else:</span></span>
<span class="line"><span>    print(&quot;不及格，下次要加油哦！&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里 <code>score &gt;= 60</code> 的条件为<code>True</code>，因此会打印 &quot;及格了！&quot;。如果我们将 <code>score</code> 改为 50，则会打印 &quot;不及格...&quot;。</p><hr><h2 id="多个条件的判断-if-elif-else-语句" tabindex="-1"><a class="header-anchor" href="#多个条件的判断-if-elif-else-语句"><span>多个条件的判断：<code>if-elif-else</code> 语句</span></a></h2><p>当我们需要处理多个互斥的条件时，可以使用 <code>if-elif-else</code> 结构。<code>elif</code> 是 <code>else if</code> 的缩写。</p><p>它的语法是这样的：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>if 条件表达式1:</span></span>
<span class="line"><span>    代码块1</span></span>
<span class="line"><span>elif 条件表达式2:</span></span>
<span class="line"><span>    代码块2</span></span>
<span class="line"><span>elif 条件表达式3:</span></span>
<span class="line"><span>    代码块3</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>else:</span></span>
<span class="line"><span>    代码块n</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Python 会从上到下依次判断条件。一旦某个条件为<code>True</code>，它对应的代码块就会被执行，并且整个 <code>if-elif-else</code> 结构就会结束。只有当所有的 <code>if</code> 和 <code>elif</code> 条件都为<code>False</code>时，<code>else</code> 后面的代码块才会被执行。</p><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span><strong>示例：</strong></span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>grade = 85</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if grade &gt;= 90:</span></span>
<span class="line"><span>    print(&quot;优秀&quot;)</span></span>
<span class="line"><span>elif grade &gt;= 80:</span></span>
<span class="line"><span>    print(&quot;良好&quot;)</span></span>
<span class="line"><span>elif grade &gt;= 60:</span></span>
<span class="line"><span>    print(&quot;及格&quot;)</span></span>
<span class="line"><span>else:</span></span>
<span class="line"><span>    print(&quot;不及格&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，<code>grade &gt;= 90</code> 的条件为<code>False</code>，Python 会继续判断下一个 <code>elif</code>。<code>grade &gt;= 80</code> 的条件为<code>True</code>，所以会打印 &quot;良好&quot;，然后程序就跳出了整个分支结构。</p><hr><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li><strong><code>if</code> 语句</strong>：当条件为<code>True</code>时执行代码。</li><li><strong><code>if-else</code> 语句</strong>：当条件为<code>True</code>时执行A，为<code>False</code>时执行B。</li><li><strong><code>if-elif-else</code> 语句</strong>：处理多个互斥的条件，从上到下依次判断，一旦条件满足，就执行对应代码并退出。</li></ul><p>分支结构是程序中最基本的控制结构之一，能够让程序根据不同的条件执行不同的操作。在Python中，<code>if</code>、<code>else</code>和<code>elif</code>语句提供了强大的条件判断功能，允许我们灵活地控制程序的执行流程。</p><p>通过本篇教程，你已经掌握了如何使用这些分支语句来控制程序的逻辑流程。在实际编程中，根据需求选择合适的分支结构，可以帮助你写出更加高效、清晰的代码。</p>`,32)]))}const r=e(l,[["render",d]]),t=JSON.parse('{"path":"/python/S15/Python%E8%87%AA%E5%AD%A605-%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84.html","title":"Python自学05-分支结构","lang":"en-US","frontmatter":{},"git":{"createdTime":1755655357000,"updatedTime":1760001321000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":2,"url":"https://github.com/star"}]},"readingTime":{"minutes":3.1,"words":929},"filePathRelative":"python/S15/Python自学05-分支结构.md"}');export{r as comp,t as data};
