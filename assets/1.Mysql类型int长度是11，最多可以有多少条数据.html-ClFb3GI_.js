import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as t}from"./app-BiQR_lPj.js";const n={};function h(l,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="mysql类型int长度是11-最多可以有多少条数据-如果超过设计值会怎么样" tabindex="-1"><a class="header-anchor" href="#mysql类型int长度是11-最多可以有多少条数据-如果超过设计值会怎么样"><span>Mysql类型int长度是11，最多可以有多少条数据？如果超过设计值会怎么样</span></a></h1><p>大家好，我是星哥，今天查看数据库在表结构中看到id，设计是int，长度是11。</p><p>我想了有两个问题</p><p>1.最多能存多少数据</p><p>2.如果id的自增超过设计值，会出现什么问题？所谓“超过设计值”，就是当 AUTO_INCREMENT 达到或超过上表的最大值时。</p><p><img src="https://imgoss.xgss.net/picgo-tx2025/QQ_1760173766266.png?tx" alt="img"></p><p><img src="https://imgoss.xgss.net/picgo-tx2025/QQ_1760172019092.png?tx" alt="img"></p><h2 id="一、首先要区分两个概念" tabindex="-1"><a class="header-anchor" href="#一、首先要区分两个概念"><span>一、首先要区分两个概念：</span></a></h2><p>在 MySQL 中，定义字段时写成：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里的 <strong>11</strong> 不是“长度限制”！ 它只是<strong>显示宽度（Display Width）</strong>，对实际存储范围没有任何影响。</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h2><h2 id="二、int-类型的真实存储范围" tabindex="-1"><a class="header-anchor" href="#二、int-类型的真实存储范围"><span>二、INT 类型的真实存储范围</span></a></h2><table><thead><tr><th>类型</th><th>字节数</th><th>有符号（SIGNED）范围</th><th>无符号（UNSIGNED）范围</th></tr></thead><tbody><tr><td>TINYINT</td><td>1</td><td>-128 ～ 127</td><td>0 ～ 255</td></tr><tr><td>SMALLINT</td><td>2</td><td>-32,768 ～ 32,767</td><td>0 ～ 65,535</td></tr><tr><td>MEDIUMINT</td><td>3</td><td>-8,388,608 ～ 8,388,607</td><td>0 ～ 16,777,215</td></tr><tr><td><strong>INT（或 INTEGER）</strong></td><td><strong>4</strong></td><td><strong>-2,147,483,648 ～ 2,147,483,647</strong></td><td><strong>0 ～ 4,294,967,295</strong></td></tr><tr><td>BIGINT</td><td>8</td><td>-9,223,372,036,854,775,808 ～ 9,223,372,036,854,775,807</td><td>0 ～ 18,446,744,073,709,551,615</td></tr></tbody></table><h2 id="三、回到问题" tabindex="-1"><a class="header-anchor" href="#三、回到问题"><span>三、回到问题</span></a></h2><p>如果你的字段定义是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="那么它最多能存储的整数数量是" tabindex="-1"><a class="header-anchor" href="#那么它最多能存储的整数数量是"><span>那么它最多能存储的整数数量是：</span></a></h3><ul><li><p>如果 <strong>有符号（默认）</strong>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>2,147,483,647 - (-2,147,483,648) + 1 = 4,294,967,296 ≈ 42.9亿 个不同的值</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>如果 <strong>无符号（UNSIGNED）</strong>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>4,294,967,295 + 1 = 4,294,967,296 ≈ 42.9亿 个不同的值</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>42.9亿！一般的项目完全够用了</p><h2 id="四、int-11-中的-11-有什么用" tabindex="-1"><a class="header-anchor" href="#四、int-11-中的-11-有什么用"><span>四、<code>INT(11)</code> 中的 <code>(11)</code> 有什么用？</span></a></h2><p>以前在 MySQL 的 <strong>命令行客户端</strong> 或某些工具中，如果字段设置了 <code>ZEROFILL</code>（零填充），会影响显示方式：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) ZEROFILL</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">123</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回结果为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>000000000123</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>👉 也就是用 11 位宽度显示，不影响实际数值范围。</p><h1 id="如果id的自增超过设计值-会出现什么问题" tabindex="-1"><a class="header-anchor" href="#如果id的自增超过设计值-会出现什么问题"><span>如果id的自增超过设计值，会出现什么问题</span></a></h1><h2 id="一、auto-increment-的工作原理" tabindex="-1"><a class="header-anchor" href="#一、auto-increment-的工作原理"><span>一、<code>AUTO_INCREMENT</code> 的工作原理</span></a></h2><p>当你定义一个表时，比如：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> UNSIGNED AUTO_INCREMENT </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MySQL 会自动维护一个内部的自增计数器。每次插入新行时，<code>id</code> 会自动加 1，直到到达类型能表示的最大值。</p><h2 id="二、当达到上限时-会发生什么" tabindex="-1"><a class="header-anchor" href="#二、当达到上限时-会发生什么"><span>二、当达到上限时，会发生什么？</span></a></h2><p>假设字段是：</p><table><thead><tr><th>类型定义</th><th>最大值</th><th>到达上限时会怎样？</th></tr></thead><tbody><tr><td><code>INT</code>（默认有符号）</td><td>2,147,483,647</td><td>插入时报错</td></tr><tr><td><code>INT UNSIGNED</code></td><td>4,294,967,295</td><td>插入时报错</td></tr><tr><td><code>BIGINT UNSIGNED</code></td><td>18,446,744,073,709,551,615</td><td>理论上几乎到不了 😅</td></tr></tbody></table><h3 id="报错信息示例" tabindex="-1"><a class="header-anchor" href="#报错信息示例"><span>报错信息示例：</span></a></h3><p>假设当前表定义是：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> UNSIGNED AUTO_INCREMENT </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">PRIMARY KEY</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当 <code>id</code> 达到 <code>4294967295</code> 后，再执行：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> test </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>MySQL 会报错：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ERROR 1467 (HY000): Failed to read auto-increment value from storage engine</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或（不同版本略有不同）：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ERROR 1062 (23000): Duplicate entry &#39;4294967295&#39; for key &#39;PRIMARY&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>此时，新的插入操作失败，不会自动回绕到 1，也不会重置。</strong></p><h2 id="三、模拟过程举例" tabindex="-1"><a class="header-anchor" href="#三、模拟过程举例"><span>三、模拟过程举例</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> UNSIGNED AUTO_INCREMENT </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  value</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- id=1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 当 id=4294967295</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;x&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 成功</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;y&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- ❌ 失败，上限已达</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、解决方案-预防方法" tabindex="-1"><a class="header-anchor" href="#四、解决方案-预防方法"><span>四、解决方案 / 预防方法</span></a></h2><h3 id="_1-提前规划主键类型" tabindex="-1"><a class="header-anchor" href="#_1-提前规划主键类型"><span>1. 提前规划主键类型</span></a></h3><p>如果系统可能有几十亿甚至上百亿条数据，请<strong>直接使用 <code>BIGINT UNSIGNED</code></strong>：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BIGINT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> UNSIGNED AUTO_INCREMENT </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">PRIMARY KEY</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>👉 理论上支持 <strong>18,446,744,073,709,551,615</strong>，即 18 quintillion（千万亿）条记录。</p><hr><h3 id="_2-手动重置自增计数器-不推荐长期用" tabindex="-1"><a class="header-anchor" href="#_2-手动重置自增计数器-不推荐长期用"><span>2. 手动重置自增计数器（不推荐长期用）</span></a></h3><p>如果部分数据已删除，且希望复用低 ID，可以：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ALTER</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> users AUTO_INCREMENT </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>⚠️ 但仅当你<strong>确保没有主键冲突</strong>时才可以安全执行。</p><hr><h3 id="_3-使用非整数主键" tabindex="-1"><a class="header-anchor" href="#_3-使用非整数主键"><span>3. 使用非整数主键</span></a></h3><p>在一些高并发或分布式系统中（如电商、日志系统），会使用：</p><ul><li><strong>UUID</strong>（例如 <code>CHAR(36)</code>）</li><li><strong>雪花算法 ID（Snowflake）</strong></li><li><strong>时间戳 + 随机数 / 机器码</strong></li></ul><p>以避免自增上限和分布式冲突问题。</p><hr><h2 id="五、总结表" tabindex="-1"><a class="header-anchor" href="#五、总结表"><span>五、总结表</span></a></h2><table><thead><tr><th>字段类型</th><th>最大 AUTO_INCREMENT 值</th><th>超出时行为</th><th>推荐方案</th></tr></thead><tbody><tr><td><code>TINYINT</code></td><td>255</td><td>报错</td><td>❌ 太小</td></tr><tr><td><code>SMALLINT</code></td><td>65,535</td><td>报错</td><td>❌ 太小</td></tr><tr><td><code>MEDIUMINT</code></td><td>16,777,215</td><td>报错</td><td>⚠️ 仅用于小表</td></tr><tr><td><code>INT</code></td><td>4,294,967,295（UNSIGNED）</td><td>报错</td><td>⚠️ 常用上限</td></tr><tr><td><code>BIGINT</code></td><td>18,446,744,073,709,551,615（UNSIGNED）</td><td>理论上安全</td><td>✅ 推荐</td></tr></tbody></table><h2 id="最多能存多少数据" tabindex="-1"><a class="header-anchor" href="#最多能存多少数据"><span>最多能存多少数据</span></a></h2><table><thead><tr><th>问题</th><th>答案</th></tr></thead><tbody><tr><td><code>INT(11)</code> 最多能存多少条数据？</td><td>约 <strong>42.9 亿条</strong>（4,294,967,296）</td></tr><tr><td><code>(11)</code> 是什么意思？</td><td>显示宽度，与存储范围无关</td></tr><tr><td>如何扩大可存数量？</td><td>用 <code>BIGINT</code>（支持约 9.22×10¹⁸）</td></tr></tbody></table>`,66)]))}const k=i(n,[["render",h]]),p=JSON.parse('{"path":"/mysql/1.Mysql%E7%B1%BB%E5%9E%8Bint%E9%95%BF%E5%BA%A6%E6%98%AF11%EF%BC%8C%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E6%9C%89%E5%A4%9A%E5%B0%91%E6%9D%A1%E6%95%B0%E6%8D%AE.html","title":"Mysql类型int长度是11，最多可以有多少条数据？如果超过设计值会怎么样","lang":"en-US","frontmatter":{},"git":{"createdTime":1761192011000,"updatedTime":1761192011000,"contributors":[{"name":"star","username":"star","email":"star@xgss.net","commits":1,"url":"https://github.com/star"}]},"readingTime":{"minutes":3.68,"words":1105},"filePathRelative":"mysql/1.Mysql类型int长度是11，最多可以有多少条数据.md"}');export{k as comp,p as data};
